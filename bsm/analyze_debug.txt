Total lines: 63 
Total functions : 1 
--------------------------
[Function Name] : fn_miki_test3 
-Return type : VD 
-Argument : 2 
     [0] : type1   arg1 
     [1] : type2   arg2 
----- Codes -----
[1] MAINPROCESS(1) func<start> miki2_1 = subsub_1( 
[2] MAINPROCESS(1) func (S1)arg2_1_1, 
[3] MAINPROCESS(1) func arg2_1_2 
[4] MAINPROCESS(1) func<end> ); 
[5] MAINPROCESS(1) func<start> miki2_2 = subsub_2( 
[6] MAINPROCESS(1) func (S1)arg2_2_1, 
[7] MAINPROCESS(1) func arg2_2_2 
[8] MAINPROCESS(1) func<end> ); 
[9] MAINPROCESS(1) func<start> miki2_3 = subsub_3( 
[10] MAINPROCESS(1) func (S1)arg2_3_1, 
[11] MAINPROCESS(1) func arg2_3_2 
[12] MAINPROCESS(1) func<end> ); 
[13] MAINPROCESS(1) for for( 
[14] MAINPROCESS(1) for i=(S4)0; 
[15] MAINPROCESS(1) for i<(S4)n; 
[16] MAINPROCESS(1) for i++ 
[17] MAINPROCESS(1) for ) 
[18] MAINPROCESS(1) subproc SUBPROCESS(1) 
[19] SUBPROCESS(1) equal test1 + 1;
[20] MAINPROCESS(2) switch  switch ( 
[21] MAINPROCESS(2) switch  hogehoge3_2 
[22] MAINPROCESS(2) switch  ) 
[23] MAINPROCESS(2) subproc SUBPROCESS(1) 
[24] SUBPROCESS(1) ??? case mode1: 
[25] SUBPROCESS(1) equal miki4_2_1 subsubsubsub_mode_1;
[26] SUBPROCESS(1) proc break; 
[27] SUBPROCESS(1) ??? case mode1: 
[28] SUBPROCESS(1) equal miki4_2_2 subsubsubsub_mode_2;
[29] SUBPROCESS(1) proc break; 
[30] SUBPROCESS(1) ??? default: 
[31] SUBPROCESS(1) equal miki4_2_3 subsubsubsub_mode_default;
[32] SUBPROCESS(1) proc break; 
[33] MAINPROCESS(3) equal<start> fl_t_tmp_theta = -( 
[34] MAINPROCESS(3) equal PI / 180.0F * ( 
[35] MAINPROCESS(3) equal st_g_bsm_loop_data.afl_installed_angle[0] + afl_a_peak_doa_bins_intpl_2f[s4_t_lp_i] +  (FL)DOA_BIN_START_ANG 
[36] MAINPROCESS(3) equal ) 
[37] MAINPROCESS(3) equal<end> ); 
[38] MAINPROCESS(3) if  if ( 
[39] MAINPROCESS(3) if  ( 
[40] MAINPROCESS(3) if  fl_abs( 
[41] MAINPROCESS(3) if  afl_a_peak_doa_powers_up[s4_t_lp_i] - afl_a_peak_doa_powers_dn[s4_t_lp_k] 
[42] MAINPROCESS(3) if  ) < POW_DIFF_UP_DOWN_DOA 
[43] MAINPROCESS(3) if  ) 
[44] MAINPROCESS(3) if  && ( 
[45] MAINPROCESS(3) if  fl_abs( 
[46] MAINPROCESS(3) if  afl_a_peak_doa_bins_intpl_up[s4_t_lp_i] - afl_a_peak_doa_bins_intpl_dn[s4_t_lp_k] 
[47] MAINPROCESS(3) if  ) < (FL)s4_t_tmp_doa_diff_up_down 
[48] MAINPROCESS(3) if  ) 
[49] MAINPROCESS(3) if  ) 
[50] MAINPROCESS(3) subproc SUBPROCESS(1) 
[51] SUBPROCESS(1) equal<start> afl_t_compare[s4_t_lp_i][s4_t_lp_k] = ( 
[52] SUBPROCESS(1) equal  8.0F * fl_abs(afl_a_peak_doa_powers_up[s4_t_lp_i] - afl_a_peak_doa_powers_dn[s4_t_lp_k])) + 1.0F * fl_abs((FL)(afl_a_peak_doa_bins_intpl_up[s4_t_lp_i] - afl_a_peak_doa_bins_intpl_dn[s4_t_lp_k]) 
[53] SUBPROCESS(1) equal<end> ); 
[54] MAINPROCESS(4) equal<start> afl_t_compare[s4_a_peak_num_up - 1 - s4_t_lp_i][s4_t_lp_k] = ( 
[55] MAINPROCESS(4) equal 0.5F * fl_abs(afl_a_peak_doa_powers_up[s4_a_peak_num_up - 1 - s4_t_lp_i] - afl_a_peak_doa_powers_dn[s4_t_lp_k])) + (1.0F * fl_abs((FL)(afl_a_peak_doa_bins_intpl_up[s4_a_peak_num_up - 1 - s4_t_lp_i] - afl_a_peak_doa_bins_intpl_dn[s4_t_lp_k]))) + (1.0F * fl_abs((FL)(afl_a_peak_bins_intpl_up[s4_a_peak_num_up - 1 - s4_t_lp_i] - afl_a_peak_bins_intpl_dn[s4_t_lp_k] - (FL)s4_t_shift)) 
[56] MAINPROCESS(4) equal<end> ); 
[57] MAINPROCESS(4) func<start> tmp_comp = fl_abs( 
[58] MAINPROCESS(4) func afl_a_alarmed_target_current[k][0]-afl_a_Tx_float[0][8]) + fl_abs(afl_a_alarmed_target_current[k][1]-afl_a_Tx_float[0][7] 
[59] MAINPROCESS(4) func<end> ); 
[60] MAINPROCESS(4) func<start> tmp_comp = fl_abs( 
[61] MAINPROCESS(4) func afl_a_alarmed_target_current[k][0]-afl_a_Tx_float[0][8]) + fl_abs(afl_a_alarmed_target_current[k][1]-afl_a_Tx_float[0][7] 
[62] MAINPROCESS(4) func<end> ); 
[63] MAINPROCESS(4) return return; 
----------------- Total Codes : 63 lines
