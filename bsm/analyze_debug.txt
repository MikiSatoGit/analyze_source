Total lines: 86 
Total functions : 1 
--------------------------
[Function Name] : init_btt_configuration_parameter_dummy 
-Return type : VD 
-Argument : 4 
     [0] : BSM_STANDARD   *pst_a_bsm_alertarea_for_test 
     [1] : BTT_CLUSTER_INFO   *pst_a_cluster_info 
     [2] : BTT_AUX_TRAILER_INFO   *pst_a_aux_trailer_info 
     [3] : BTT_HITCH_ANGLE   *pst_a_hitch_angle 
----- Codes -----
[1] MAINPROCESS(1) func<start> miki0 = main( 
[2] MAINPROCESS(1) func arg0_1, 
[3] MAINPROCESS(1) func arg0_2, 
[4] MAINPROCESS(1) func (S1)arg0_3 
[5] MAINPROCESS(1) func<end> ); 
[6] MAINPROCESS(1) if<start> if( 
[7] MAINPROCESS(1) if st_g_btt_stat.BTT_initialized == BTT_RET_t.Init_Stat.INITIALIZED 
[8] MAINPROCESS(1) if ) 
[9] MAINPROCESS(1) subproc SUBPROCESS(1) 
[10] SUBPROCESS(1) proc return; 
[11] MAINPROCESS(2) if<start> if( 
[12] MAINPROCESS(2) if miki==test 
[13] MAINPROCESS(2) if ) 
[14] MAINPROCESS(2) subproc SUBPROCESS(1) 
[15] SUBPROCESS(1) equal miki done;
[16] SUBPROCESS(1) noctrl hogehoge_ng 
[17] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[18] SUBSUBPROCESS(1) equal miki next;
[19] MAINPROCESS(3) else<start> else 
[20] MAINPROCESS(3) subproc SUBPROCESS(1) 
[21] SUBPROCESS(1) equal miki ELSETEST;
[22] MAINPROCESS(4) if<start> if( 
[23] MAINPROCESS(4) if miki==test 
[24] MAINPROCESS(4) if && miki==debug 
[25] MAINPROCESS(4) if ) 
[26] MAINPROCESS(4) subproc SUBPROCESS(1) 
[27] SUBPROCESS(1) equal miki1_1 sub;
[28] SUBPROCESS(1) equal miki1_2 (S1)sub;
[29] SUBPROCESS(1) func<start> miki1_3( 
[30] SUBPROCESS(1) func<end> ); 
[31] SUBPROCESS(1) func<start> miki1_4((S1)arg1_1 
[32] SUBPROCESS(1) func<end> ); 
[33] SUBPROCESS(1) if<start> if( 
[34] SUBPROCESS(1) if hogehoge1 
[35] SUBPROCESS(1) if ) 
[36] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[37] SUBSUBPROCESS(1) func<start> miki2_1 = subsub_1( 
[38] SUBSUBPROCESS(1) func (S1)arg2_1_1, 
[39] SUBSUBPROCESS(1) func arg2_1_2 
[40] SUBSUBPROCESS(1) func<end> ); 
[41] SUBSUBPROCESS(1) ??? miki2_2 
[42] SUBSUBPROCESS(1) func<start> = subsub_2( 
[43] SUBSUBPROCESS(1) func (S1)arg2_2_1, 
[44] SUBSUBPROCESS(1) func arg2_2_2 
[45] SUBSUBPROCESS(1) func<end> ); 
[46] SUBSUBPROCESS(1) for<start> for( 
[47] SUBSUBPROCESS(1) for i=0; 
[48] SUBSUBPROCESS(1) for i<hogehoge2; 
[49] SUBSUBPROCESS(1) for i++) 
[50] SUBSUBPROCESS(1) subproc SUBSUBSUBPROCESS(1) 
[51] SUBSUBSUBPROCESS(1) func<start> miki3 = (S1)subsubsub(arg3_1,arg3_2,arg3_3 
[52] SUBSUBSUBPROCESS(1) func<end> ); 
[53] SUBSUBSUBPROCESS(1) while<start> while( 
[54] SUBSUBSUBPROCESS(1) while hogehoge3_1 
[55] SUBSUBSUBPROCESS(1) while ) 
[56] SUBSUBSUBPROCESS(1) subproc SUBSUBSUBSUBPROCESS(1) 
[57] SUBSUBSUBSUBPROCESS(1) func<start> miki4_1 = subsubsubsub((S1)arg4_1,(S2)arg4_2,(S3)arg4_3 
[58] SUBSUBSUBSUBPROCESS(1) func<end> ); 
[59] SUBSUBSUBSUBPROCESS(1) if<start> if( 
[60] SUBSUBSUBSUBPROCESS(1) if hogehoge4_1 
[61] SUBSUBSUBSUBPROCESS(1) if ) 
[62] SUBSUBSUBSUBPROCESS(1) subproc SUBSUBSUBSUBSUBPROCESS(1) 
[63] SUBSUBSUBSUBSUBPROCESS(1) equal (S5)miki5_1 subsubsubsubsub_5_1;
[64] SUBSUBSUBSUBPROCESS(2) else if<start> else if( 
[65] SUBSUBSUBSUBPROCESS(2) else if hogehoge4_2 
[66] SUBSUBSUBSUBPROCESS(2) else if ) 
[67] SUBSUBSUBSUBPROCESS(2) subproc SUBSUBSUBSUBSUBPROCESS(1) 
[68] SUBSUBSUBSUBSUBPROCESS(1) equal (S5)miki5_2 subsubsubsubsub_5_2;
[69] SUBSUBSUBSUBPROCESS(3) else if<start> else if( 
[70] SUBSUBSUBSUBPROCESS(3) else if hogehoge4_3 
[71] SUBSUBSUBSUBPROCESS(3) else if ) 
[72] SUBSUBSUBSUBPROCESS(3) subproc SUBSUBSUBSUBSUBPROCESS(1) 
[73] SUBSUBSUBSUBSUBPROCESS(1) equal (S5)miki5_3 subsubsubsubsub_5_3;
[74] SUBSUBSUBSUBPROCESS(4) else<start> else 
[75] SUBSUBSUBSUBPROCESS(4) subproc SUBSUBSUBSUBSUBPROCESS(1) 
[76] SUBSUBSUBSUBSUBPROCESS(1) equal (S5)miki5_4 subsubsubsubsub_5_4;
[77] SUBSUBSUBPROCESS(2) switch <start> switch ( 
[78] SUBSUBSUBPROCESS(2) switch  hogehoge3_2 
[79] SUBSUBSUBPROCESS(2) switch  ) 
[80] SUBSUBSUBPROCESS(2) subproc SUBSUBSUBSUBPROCESS(1) 
[81] SUBSUBSUBSUBPROCESS(1) noctrl case mode1: 
[82] SUBSUBSUBSUBPROCESS(1) noctrl miki4_2_1 subsubsubsub_mode_1;
[83] SUBSUBSUBSUBPROCESS(1) noctrl break; 
[84] SUBSUBSUBSUBPROCESS(1) noctrl case mode1: 
[85] SUBSUBSUBSUBPROCESS(1) noctrl miki4_2_2 subsubsubsub_mode_2;
[86] SUBSUBSUBSUBPROCESS(1) noctrl break; 
[87] SUBSUBSUBSUBPROCESS(1) noctrl default: 
[88] SUBSUBSUBSUBPROCESS(1) noctrl miki4_2_3 subsubsubsub_mode_default;
[89] SUBSUBSUBSUBPROCESS(1) noctrl break; 
[90] SUBSUBSUBPROCESS(3) subproc SUBSUBSUBSUBPROCESS(1) 
[91] SUBSUBSUBSUBPROCESS(1) func<start> miki4_3 = subsubsubsub_mode_default( 
[92] SUBSUBSUBSUBPROCESS(1) func (S1) arg4_3_1, 
[93] SUBSUBSUBSUBPROCESS(1) func arg4_3_2, 
[94] SUBSUBSUBSUBPROCESS(1) func arg4_3_3 
[95] SUBSUBSUBSUBPROCESS(1) func<end> ); 
[96] SUBPROCESS(2) else<start> else 
[97] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[98] SUBSUBPROCESS(1) func<start> hogehoge1_ELSE( 
[99] SUBSUBPROCESS(1) func<end> ); 
----------------- Total Codes : 99 lines
