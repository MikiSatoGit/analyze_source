Total lines: 730 
Total functions : 13 
--------------------------
[Function Name] : fn_bsm_seek_2f_object 
-Return type : VD 
-Argument : 3 
     [0] : S4   *ps4_a_pair_num_2f 
     [1] : NORMAL_BSM   ast_a_normal_2f[AUX_BUFFSIZE] 
     [2] : U1   u1_a_alarming_flag 
----- Codes -----
[1] MAINPROCESS proc S4 i; 
[2] MAINPROCESS proc S4 s4_t_peak_num_2f; 
[3] MAINPROCESS proc S4 as4_t_peak_bin_2f[AUX_BUFFSIZE]; 
[4] MAINPROCESS proc FL afl_t_peak_power_2f[AUX_BUFFSIZE]; 
[5] MAINPROCESS proc S4 s4_t_peak_num_2f_doa; 
[6] MAINPROCESS proc FL afl_t_peak_bins_intpl_2f[AUX_BUFFSIZE * 2]; 
[7] MAINPROCESS proc FL afl_t_peak_doa_bins_intpl_2f[AUX_BUFFSIZE * 2]; 
[8] MAINPROCESS proc FL afl_t_peak_powers_2f[AUX_BUFFSIZE * 2]; 
[9] MAINPROCESS proc FL afl_t_peak_doa_powers_2f[AUX_BUFFSIZE * 2]; 
[10] MAINPROCESS proc S4 as4_t_peak_wave_num[AUX_BUFFSIZE*2]; 
[11] MAINPROCESS proc FL afl_t_thres_2f[NB_FFT_PT_2F]; 
[12] MAINPROCESS func<start> fn_bsm_2f_init_data( 
[13] MAINPROCESS func &s4_t_peak_num_2f, 
[14] MAINPROCESS func as4_t_peak_bin_2f, 
[15] MAINPROCESS func afl_t_peak_power_2f, 
[16] MAINPROCESS func afl_t_thres_2f, 
[17] MAINPROCESS func &s4_t_peak_num_2f_doa, 
[18] MAINPROCESS func afl_t_peak_bins_intpl_2f, 
[19] MAINPROCESS func afl_t_peak_powers_2f, 
[20] MAINPROCESS func afl_t_peak_doa_bins_intpl_2f, 
[21] MAINPROCESS func afl_t_peak_doa_powers_2f, 
[22] MAINPROCESS func as4_t_peak_wave_num 
[23] MAINPROCESS func<end> ); 
[24] MAINPROCESS ??? fn_set_freq_threshold_fsk( 
[25] MAINPROCESS ??? (const FL *)afl_g_cvw_fcw_ftt_power, 
[26] MAINPROCESS ??? afl_t_thres_2f, 
[27] MAINPROCESS ??? fl_g_v_self_bsm_for_base 
[28] MAINPROCESS ??? ) 
[29] MAINPROCESS func<start> memcpy(afl_g_thres_2f, afl_t_thres_2f, sizeof(FL)*NB_FFT_PT_2F 
[30] MAINPROCESS func<end> ); 
[31] MAINPROCESS func<start> st_g_tx_noise_chk_fsk_bsm.u2_thres1 = u2_cast_from_fl(afl_t_thres_2f[140] * (FL)100 
[32] MAINPROCESS func<end> ); 
[33] MAINPROCESS func<start> st_g_tx_noise_chk_fsk_bsm.u2_thres2 = u2_cast_from_fl(afl_t_thres_2f[180] * (FL)100 
[34] MAINPROCESS func<end> ); 
[35] MAINPROCESS if <start> if ( 
[36] MAINPROCESS if  ( 
[37] MAINPROCESS if  st_g_bsm_loop_data.as4_flg_leading[0] != 0 
[38] MAINPROCESS if  ) 
[39] MAINPROCESS if  || ( 
[40] MAINPROCESS if  st_g_bsm_loop_data.as4_flg_passing[0] > PASSING_COUNT_MIN 
[41] MAINPROCESS if  ) 
[42] MAINPROCESS if  ) 
[43] MAINPROCESS subproc SUBPROCESS(1) 
[44] SUBPROCESS(1) func<start> s4_t_peak_num_2f = s4_search_freq_peak_fsk_IQ( 
[45] SUBPROCESS(1) func (const FL *)afl_g_cvw_fcw_ftt_power, 
[46] SUBPROCESS(1) func as4_t_peak_bin_2f, 
[47] SUBPROCESS(1) func afl_t_peak_power_2f, 
[48] SUBPROCESS(1) func (const FL *)afl_t_thres_2f 
[49] SUBPROCESS(1) func<end> ); 
[50] MAINPROCESS subproc SUBPROCESS(2) 
[51] SUBPROCESS(2) func<start> s4_t_peak_num_2f = s4_search_freq_peak_fsk( 
[52] SUBPROCESS(2) func (const FL *)afl_g_cvw_fcw_ftt_power, 
[53] SUBPROCESS(2) func as4_t_peak_bin_2f, 
[54] SUBPROCESS(2) func afl_t_peak_power_2f, 
[55] SUBPROCESS(2) func (const FL *)afl_t_thres_2f 
[56] SUBPROCESS(2) func<end> ); 
[57] MAINPROCESS func<start> fn_bsm_2f_estimate_doa( 
[58] MAINPROCESS func 0, 
[59] MAINPROCESS func afl_g_cvw_fcw_ryy_matrix, 
[60] MAINPROCESS func s4_t_peak_num_2f, 
[61] MAINPROCESS func (const S4 *)as4_t_peak_bin_2f, 
[62] MAINPROCESS func (const FL *)afl_t_peak_power_2f, 
[63] MAINPROCESS func &s4_t_peak_num_2f_doa, 
[64] MAINPROCESS func afl_t_peak_bins_intpl_2f, 
[65] MAINPROCESS func afl_t_peak_powers_2f, 
[66] MAINPROCESS func afl_t_peak_doa_bins_intpl_2f, 
[67] MAINPROCESS func afl_t_peak_doa_powers_2f, 
[68] MAINPROCESS func as4_t_peak_wave_num 
[69] MAINPROCESS func<end> ); 
[70] MAINPROCESS func<start> fn_bsm_2f_make_pair( 
[71] MAINPROCESS func s4_t_peak_num_2f_doa, 
[72] MAINPROCESS func as4_t_peak_wave_num, 
[73] MAINPROCESS func (const FL *)afl_t_peak_bins_intpl_2f, 
[74] MAINPROCESS func (const FL *)afl_t_peak_doa_bins_intpl_2f, 
[75] MAINPROCESS func (const FL *)afl_t_peak_doa_powers_2f, 
[76] MAINPROCESS func ps4_a_pair_num_2f, 
[77] MAINPROCESS func ast_a_normal_2f 
[78] MAINPROCESS func<end> ); 
[79] MAINPROCESS func<start> fn_bsm_2f_set_object( 
[80] MAINPROCESS func (const S4 *)ps4_a_pair_num_2f, 
[81] MAINPROCESS func ast_a_normal_2f 
[82] MAINPROCESS func<end> ); 
[83] MAINPROCESS func<start> memset(afl_g_peak_2f, 0x00, sizeof(afl_g_peak_2f) 
[84] MAINPROCESS func<end> ); 
[85] MAINPROCESS for<start> for( 
[86] MAINPROCESS ??? i=0; 
[87] MAINPROCESS ??? i<s4_t_peak_num_2f_doa; 
[88] MAINPROCESS ??? i++ 
[89] MAINPROCESS ??? ) 
[90] MAINPROCESS subproc SUBPROCESS(3) 
[91] MAINPROCESS func<start> *ps4_a_pair_num_2f = s4_bsm_2f_compare_with_FMCW( 
[92] MAINPROCESS func *ps4_a_pair_num_2f, 
[93] MAINPROCESS func ast_a_normal_2f, 
[94] MAINPROCESS func (const S4 *)as4_t_peak_wave_num, 
[95] MAINPROCESS func (const FL (*)[CORRE_SIZE_4CH])afl_g_cvw_lfm_ryy_matrix[0], 
[96] MAINPROCESS func (const FL (*)[CORRE_SIZE_4CH])afl_g_cvw_lfm_ryy_matrix[1], 
[97] MAINPROCESS func u1_a_alarming_flag 
[98] MAINPROCESS func<end> ); 
[99] MAINPROCESS proc return; 
----------------- Total Codes : 99 lines
--------------------------
[Function Name] : fn_bsm_2f_init_data 
-Return type : VD 
-Argument : 10 
     [0] : S4   *ps4_a_peak_num_2f 
     [1] : S4   as4_a_peak_bin_2f[AUX_BUFFSIZE] 
     [2] : FL   afl_a_peak_power_2f[AUX_BUFFSIZE] 
     [3] : FL   afl_a_thres_2f[NB_FFT_PT_2F] 
     [4] : S4   *ps4_a_peak_num_2f_doa 
     [5] : FL afl_a_peak_bins_intpl_2f[AUX_BUFFSIZE *   2] 
     [6] : FL afl_a_peak_powers_2f[AUX_BUFFSIZE *   2] 
     [7] : FL afl_a_peak_doa_bins_intpl_2f[AUX_BUFFSIZE *   2] 
     [8] : FL afl_a_peak_doa_powers_2f[AUX_BUFFSIZE *   2] 
     [9] : S4 as4_a_peak_wave_num[AUX_BUFFSIZE *   2] 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i; 
[2] MAINPROCESS equal *ps4_a_peak_num_2f 0;
[3] MAINPROCESS for <start> for ( 
[4] MAINPROCESS for  s4_t_lp_i = 0; 
[5] MAINPROCESS for  s4_t_lp_i < AUX_BUFFSIZE; 
[6] MAINPROCESS for  s4_t_lp_i++ 
[7] MAINPROCESS for  ) 
[8] MAINPROCESS subproc SUBPROCESS(1) 
[9] SUBPROCESS(1) equal afl_a_peak_power_2f[s4_t_lp_i] 0.0F;
[10] MAINPROCESS for <start> for ( 
[11] MAINPROCESS ??? s4_t_lp_i = 0; 
[12] MAINPROCESS ??? s4_t_lp_i < NB_FFT_PT_2F; 
[13] MAINPROCESS ??? s4_t_lp_i++ 
[14] MAINPROCESS ??? ) 
[15] MAINPROCESS subproc SUBPROCESS(2) 
[16] SUBPROCESS(2) equal afl_a_thres_2f[s4_t_lp_i] 0.0F;
[17] MAINPROCESS equal *ps4_a_peak_num_2f_doa 0;
[18] MAINPROCESS func<start> for (s4_t_lp_i = 0; 
[19] MAINPROCESS func s4_t_lp_i < (AUX_BUFFSIZE * (S4)2 
[20] MAINPROCESS func ) 
[21] MAINPROCESS func s4_t_lp_i++ 
[22] MAINPROCESS func<end> ); 
[23] MAINPROCESS subproc SUBPROCESS(3) 
[24] SUBPROCESS(3) equal afl_a_peak_bins_intpl_2f[s4_t_lp_i] 0.0F;
[25] SUBPROCESS(3) equal afl_a_peak_powers_2f[s4_t_lp_i] 0.0F;
[26] SUBPROCESS(3) equal afl_a_peak_doa_powers_2f[s4_t_lp_i] 0.0F;
[27] MAINPROCESS proc return; 
[28] MAINPROCESS equal afl_a_peak_bins_intpl_2f[s4_t_lp_i] 0.0F;
[29] MAINPROCESS equal afl_a_peak_powers_2f[s4_t_lp_i] 0.0F;
[30] MAINPROCESS equal afl_a_peak_doa_powers_2f[s4_t_lp_i] 0.0F;
----------------- Total Codes : 30 lines
--------------------------
[Function Name] : s4_search_freq_peak_fsk_IQ 
-Return type : S4 
-Argument : 4 
     [0] : const FL   afl_a_power_2f[NB_FFT_PT_2F] 
     [1] : S4   as4_a_bin_2f[AUX_BUFFSIZE] 
     [2] : FL   afl_a_bin_power_2f[AUX_BUFFSIZE] 
     [3] : const FL   afl_a_thres_2f[NB_FFT_PT_2F] 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i; 
[2] MAINPROCESS proc S4 s4_t_lp_k; 
[3] MAINPROCESS equal S4 s4_t_peak_num 0;
[4] MAINPROCESS equal FL fl_t_temp 0;
[5] MAINPROCESS equal s4_t_lp_k 0;
[6] MAINPROCESS for <start> for ( 
[7] MAINPROCESS for  s4_t_lp_i = FREQ_BIN_LOWER_LIMIT_2F; 
[8] MAINPROCESS for  s4_t_lp_i < FREQ_BIN_UPPER_LIMIT_2F; 
[9] MAINPROCESS for  s4_t_lp_i++ 
[10] MAINPROCESS for  ) 
[11] MAINPROCESS subproc SUBPROCESS(1) 
[12] SUBPROCESS(1) if <start> if ( 
[13] SUBPROCESS(1) if  ( 
[14] SUBPROCESS(1) if  afl_a_power_2f[s4_t_lp_i] < afl_a_power_2f[s4_t_lp_i + 1] 
[15] SUBPROCESS(1) if  ) 
[16] SUBPROCESS(1) if  && ( 
[17] SUBPROCESS(1) if  afl_a_power_2f[s4_t_lp_i + 1] > afl_a_power_2f[s4_t_lp_i + 2] 
[18] SUBPROCESS(1) if  ) 
[19] SUBPROCESS(1) if  && ( 
[20] SUBPROCESS(1) if  afl_a_power_2f[s4_t_lp_i + 1] > afl_a_thres_2f[s4_t_lp_i + 1] 
[21] SUBPROCESS(1) if  ) 
[22] SUBPROCESS(1) if  && ( 
[23] SUBPROCESS(1) if  s4_t_lp_k < AUX_BUFFSIZE 
[24] SUBPROCESS(1) if  ) 
[25] SUBPROCESS(1) if  ) 
[26] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[27] MAINPROCESS func<start> for (s4_t_lp_i = FREQ_BIN_LOWER_LIMIT_2F_Q; 
[28] MAINPROCESS func s4_t_lp_i < (S4)((NB_FFT_PT_2F / 2) - 1 
[29] MAINPROCESS func ) 
[30] MAINPROCESS func s4_t_lp_i++ 
[31] MAINPROCESS func<end> ); 
[32] MAINPROCESS subproc SUBPROCESS(2) 
[33] SUBPROCESS(2) if <start> if ( 
[34] SUBPROCESS(2) ??? ( 
[35] SUBPROCESS(2) ??? afl_a_power_2f[s4_t_lp_i] < afl_a_power_2f[s4_t_lp_i + 1] 
[36] SUBPROCESS(2) ??? ) 
[37] SUBPROCESS(2) ??? && ( 
[38] SUBPROCESS(2) ??? afl_a_power_2f[s4_t_lp_i + 1] > afl_a_power_2f[s4_t_lp_i + 2] 
[39] SUBPROCESS(2) ??? ) 
[40] SUBPROCESS(2) ??? && ( 
[41] SUBPROCESS(2) ??? afl_a_power_2f[s4_t_lp_i + 1] > afl_a_thres_2f[s4_t_lp_i + 1] 
[42] SUBPROCESS(2) ??? ) 
[43] SUBPROCESS(2) ??? && ( 
[44] SUBPROCESS(2) ??? s4_t_lp_k < AUX_BUFFSIZE 
[45] SUBPROCESS(2) ??? ) 
[46] SUBPROCESS(2) ??? ) 
[47] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[48] MAINPROCESS equal s4_t_peak_num s4_t_lp_k;
[49] MAINPROCESS func<start> return (s4_t_peak_num 
[50] MAINPROCESS func<end> ); 
[51] SUBSUBPROCESS(1) equal afl_a_bin_power_2f[s4_t_lp_k] afl_a_power_2f[s4_t_lp_i + 1];
[52] SUBSUBPROCESS(1) proc s4_t_lp_k++; 
----------------- Total Codes : 52 lines
--------------------------
[Function Name] : s4_search_freq_peak_fsk 
-Return type : S4 
-Argument : 4 
     [0] : const FL   afl_a_power_2f[NB_FFT_PT_2F] 
     [1] : S4   as4_a_bin_2f[AUX_BUFFSIZE] 
     [2] : FL   afl_a_bin_power_2f[AUX_BUFFSIZE] 
     [3] : const FL   afl_a_thres_2f[NB_FFT_PT_2F] 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i; 
[2] MAINPROCESS proc S4 s4_t_lp_k; 
[3] MAINPROCESS equal S4 s4_t_peak_num 0;
[4] MAINPROCESS equal FL fl_t_temp 0;
[5] MAINPROCESS equal s4_t_lp_k 0;
[6] MAINPROCESS for <start> for ( 
[7] MAINPROCESS for  s4_t_lp_i = FREQ_BIN_LOWER_LIMIT_2F; 
[8] MAINPROCESS for  s4_t_lp_i < FREQ_BIN_UPPER_LIMIT_2F; 
[9] MAINPROCESS for  s4_t_lp_i++ 
[10] MAINPROCESS for  ) 
[11] MAINPROCESS subproc SUBPROCESS(1) 
[12] SUBPROCESS(1) if <start> if ( 
[13] SUBPROCESS(1) ??? ( 
[14] SUBPROCESS(1) ??? afl_a_power_2f[s4_t_lp_i] < afl_a_power_2f[s4_t_lp_i + 1] 
[15] SUBPROCESS(1) ??? ) 
[16] SUBPROCESS(1) ??? && ( 
[17] SUBPROCESS(1) ??? afl_a_power_2f[s4_t_lp_i + 1] > afl_a_power_2f[s4_t_lp_i + 2] 
[18] SUBPROCESS(1) ??? ) 
[19] SUBPROCESS(1) ??? && ( 
[20] SUBPROCESS(1) ??? afl_a_power_2f[s4_t_lp_i + 1] > afl_a_thres_2f[s4_t_lp_i + 1] 
[21] SUBPROCESS(1) ??? ) 
[22] SUBPROCESS(1) ??? && ( 
[23] SUBPROCESS(1) ??? s4_t_lp_k < AUX_BUFFSIZE 
[24] SUBPROCESS(1) ??? ) 
[25] SUBPROCESS(1) ??? ) 
[26] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[27] MAINPROCESS equal s4_t_peak_num s4_t_lp_k;
[28] MAINPROCESS func<start> return (s4_t_peak_num 
[29] MAINPROCESS func<end> ); 
[30] SUBSUBPROCESS(1) equal afl_a_bin_power_2f[s4_t_lp_k] afl_a_power_2f[s4_t_lp_i + 1];
[31] SUBSUBPROCESS(1) proc s4_t_lp_k++; 
----------------- Total Codes : 31 lines
--------------------------
[Function Name] : fn_bsm_2f_estimate_doa 
-Return type : VD 
-Argument : 11 
     [0] : S4   s4_a_DOA_mode 
     [1] : FL   afl_a_Ryy_2f[NB_FFT_PT_2F][CORRE_SIZE_4CH] 
     [2] : S4   s4_a_peak_num_2f 
     [3] : const S4   as4_a_peak_bin_2f[AUX_BUFFSIZE] 
     [4] : const FL   afl_a_peak_power_2f[AUX_BUFFSIZE] 
     [5] : S4   *ps4_a_doa_peak_num_2f 
     [6] : FL afl_a_peak_bins_intpl_2f[AUX_BUFFSIZE *   2] 
     [7] : FL afl_a_peak_powers_2f[AUX_BUFFSIZE *   2] 
     [8] : FL afl_a_peak_doa_bins_intpl_2f[AUX_BUFFSIZE *   2] 
     [9] : FL afl_a_peak_doa_powers_2f[AUX_BUFFSIZE *   2] 
     [10] : S4 as4_a_peak_wave_num[AUX_BUFFSIZE *   2] 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i; 
[2] MAINPROCESS proc S4 s4_t_lp_k; 
[3] MAINPROCESS proc S4 as4_t_doa_num_2f[AUX_BUFFSIZE]; 
[4] MAINPROCESS proc FL afl_t_selected_doa_bins_intpl_2f[AUX_BUFFSIZE][2]; 
[5] MAINPROCESS proc FL afl_t_selected_doa_powers_2f[AUX_BUFFSIZE][2]; 
[6] MAINPROCESS proc FL afl_t_selected_bins_intpl_2f[AUX_BUFFSIZE][2]; 
[7] MAINPROCESS for <start> for ( 
[8] MAINPROCESS for  s4_t_lp_i = 0; 
[9] MAINPROCESS for  s4_t_lp_i < AUX_BUFFSIZE; 
[10] MAINPROCESS for  s4_t_lp_i++ 
[11] MAINPROCESS for  ) 
[12] MAINPROCESS subproc SUBPROCESS(1) 
[13] SUBPROCESS(1) equal as4_t_doa_num_2f[s4_t_lp_i] 0;
[14] SUBPROCESS(1) for <start> for ( 
[15] SUBPROCESS(1) for  s4_t_lp_k = 0; 
[16] SUBPROCESS(1) for  s4_t_lp_k < 2; 
[17] SUBPROCESS(1) for  s4_t_lp_k++ 
[18] SUBPROCESS(1) for  ) 
[19] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[20] MAINPROCESS for <start> for ( 
[21] MAINPROCESS ??? s4_t_lp_i = 0; 
[22] MAINPROCESS ??? s4_t_lp_i < s4_a_peak_num_2f; 
[23] MAINPROCESS ??? s4_t_lp_i++ 
[24] MAINPROCESS ??? ) 
[25] MAINPROCESS subproc SUBPROCESS(2) 
[26] SUBPROCESS(2) func<start> fn_bsm_2f_cal_doa( 
[27] SUBPROCESS(2) func s4_a_DOA_mode, 
[28] SUBPROCESS(2) func (const FL (*)[CORRE_SIZE_4CH])afl_a_Ryy_2f, 
[29] SUBPROCESS(2) func as4_a_peak_bin_2f[s4_t_lp_i], 
[30] SUBPROCESS(2) func &as4_t_doa_num_2f[s4_t_lp_i], 
[31] SUBPROCESS(2) func afl_t_selected_doa_bins_intpl_2f[s4_t_lp_i], 
[32] SUBPROCESS(2) func afl_t_selected_doa_powers_2f[s4_t_lp_i] 
[33] SUBPROCESS(2) func<end> ); 
[34] SUBPROCESS(2) func<start> fn_bsm_2f_cal_interpolate_freq_peak( 
[35] SUBPROCESS(2) func as4_a_peak_bin_2f[s4_t_lp_i], 
[36] SUBPROCESS(2) func as4_t_doa_num_2f[s4_t_lp_i], 
[37] SUBPROCESS(2) func afl_t_selected_bins_intpl_2f[s4_t_lp_i] 
[38] SUBPROCESS(2) func<end> ); 
[39] SUBPROCESS(2) func<start> fn_cmn_shareMUSIC_set_finished_music_data_main( (U1)2, 
[40] SUBPROCESS(2) func (U1)as4_t_doa_num_2f[s4_t_lp_i], 
[41] SUBPROCESS(2) func (U2)as4_a_peak_bin_2f[s4_t_lp_i], 
[42] SUBPROCESS(2) func afl_t_selected_bins_intpl_2f[s4_t_lp_i][0], 
[43] SUBPROCESS(2) func afl_t_selected_doa_bins_intpl_2f[s4_t_lp_i], 
[44] SUBPROCESS(2) func afl_t_selected_doa_powers_2f[s4_t_lp_i] 
[45] SUBPROCESS(2) func<end> ); 
[46] MAINPROCESS equal *ps4_a_doa_peak_num_2f 0;
[47] MAINPROCESS func<start> fn_bsm_2f_store_doa( 
[48] MAINPROCESS func (const FL *)afl_a_peak_power_2f, 
[49] MAINPROCESS func (const S4 *)as4_t_doa_num_2f, 
[50] MAINPROCESS func (const FL (*)[2])afl_t_selected_doa_bins_intpl_2f, 
[51] MAINPROCESS func (const FL (*)[2])afl_t_selected_doa_powers_2f, 
[52] MAINPROCESS func (const FL (*)[2])afl_t_selected_bins_intpl_2f, 
[53] MAINPROCESS func ps4_a_doa_peak_num_2f, 
[54] MAINPROCESS func afl_a_peak_bins_intpl_2f, 
[55] MAINPROCESS func afl_a_peak_powers_2f, 
[56] MAINPROCESS func afl_a_peak_doa_bins_intpl_2f, 
[57] MAINPROCESS func afl_a_peak_doa_powers_2f, 
[58] MAINPROCESS func as4_a_peak_wave_num 
[59] MAINPROCESS func<end> ); 
[60] MAINPROCESS proc return; 
[61] MAINPROCESS func<start> fn_bsm_2f_cal_doa( 
[62] MAINPROCESS func s4_a_DOA_mode, 
[63] MAINPROCESS func (const FL (*)[CORRE_SIZE_4CH])afl_a_Ryy_2f, 
[64] MAINPROCESS func as4_a_peak_bin_2f[s4_t_lp_i], 
[65] MAINPROCESS func &as4_t_doa_num_2f[s4_t_lp_i], 
[66] MAINPROCESS func afl_t_selected_doa_bins_intpl_2f[s4_t_lp_i], 
[67] MAINPROCESS func afl_t_selected_doa_powers_2f[s4_t_lp_i] 
[68] MAINPROCESS func<end> ); 
[69] MAINPROCESS func<start> fn_bsm_2f_cal_interpolate_freq_peak( 
[70] MAINPROCESS func as4_a_peak_bin_2f[s4_t_lp_i], 
[71] MAINPROCESS func as4_t_doa_num_2f[s4_t_lp_i], 
[72] MAINPROCESS func afl_t_selected_bins_intpl_2f[s4_t_lp_i] 
[73] MAINPROCESS func<end> ); 
[74] MAINPROCESS func<start> fn_cmn_shareMUSIC_set_finished_music_data_main( (U1)2, 
[75] MAINPROCESS func (U1)as4_t_doa_num_2f[s4_t_lp_i], 
[76] MAINPROCESS func (U2)as4_a_peak_bin_2f[s4_t_lp_i], 
[77] MAINPROCESS func afl_t_selected_bins_intpl_2f[s4_t_lp_i][0], 
[78] MAINPROCESS func afl_t_selected_doa_bins_intpl_2f[s4_t_lp_i], 
[79] MAINPROCESS func afl_t_selected_doa_powers_2f[s4_t_lp_i] 
[80] MAINPROCESS func<end> ); 
----------------- Total Codes : 80 lines
--------------------------
[Function Name] : fn_bsm_2f_cal_doa 
-Return type : VD 
-Argument : 6 
     [0] : S4   s4_a_DOA_mode 
     [1] : const FL   afl_a_Ryy_2f[NB_FFT_PT_2F][CORRE_SIZE_4CH] 
     [2] : S4   s4_a_peak_bin_2f 
     [3] : S4   *ps4_a_doa_num 
     [4] : FL   afl_a_selected_doa_bins_intpl_2f[2] 
     [5] : FL   afl_a_selected_doa_powers_2f[2] 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i; 
[2] MAINPROCESS proc S4 s4_t_lp_k; 
[3] MAINPROCESS proc FL afl_t_spec_bf[N_DOA_2F]; 
[4] MAINPROCESS proc FL afl_t_spec_music[N_DOA_2F]; 
[5] MAINPROCESS proc S4 as4_t_selected_doa_bins[2]; 
[6] MAINPROCESS equal S4 s4_t_wave_num 1;
[7] MAINPROCESS for <start> for ( 
[8] MAINPROCESS for  s4_t_lp_i = 0; 
[9] MAINPROCESS for  s4_t_lp_i < N_DOA_2F; 
[10] MAINPROCESS for  s4_t_lp_i++ 
[11] MAINPROCESS for  ) 
[12] MAINPROCESS subproc SUBPROCESS(1) 
[13] SUBPROCESS(1) equal afl_t_spec_bf[s4_t_lp_i] 0.0F;
[14] MAINPROCESS for <start> for ( 
[15] MAINPROCESS for  s4_t_lp_i = 0; 
[16] MAINPROCESS for  s4_t_lp_i < N_DOA_2F; 
[17] MAINPROCESS for  s4_t_lp_i++ 
[18] MAINPROCESS for  ) 
[19] MAINPROCESS subproc SUBPROCESS(2) 
[20] SUBPROCESS(2) equal afl_t_spec_music[s4_t_lp_i] 0.0F;
[21] MAINPROCESS switch <start> switch ( 
[22] MAINPROCESS switch  s4_a_DOA_mode 
[23] MAINPROCESS switch  ) 
[24] MAINPROCESS subproc SUBPROCESS(3) 
[25] SUBPROCESS(3) ??? case 1: 
[26] SUBPROCESS(3) func<start> fn_calc_spec_bf_4ch_2f( 
[27] SUBPROCESS(3) func afl_a_Ryy_2f[s4_a_peak_bin_2f], 
[28] SUBPROCESS(3) func afl_t_spec_bf, 
[29] SUBPROCESS(3) func 1, 
[30] SUBPROCESS(3) func s4_a_peak_bin_2f 
[31] SUBPROCESS(3) func<end> ); 
[32] SUBPROCESS(3) func<start> *ps4_a_doa_num = s4_search_peak_bf( 
[33] SUBPROCESS(3) func (const FL *)afl_t_spec_bf, 
[34] SUBPROCESS(3) func as4_t_selected_doa_bins, 
[35] SUBPROCESS(3) func afl_a_selected_doa_powers_2f, 
[36] SUBPROCESS(3) func 1 
[37] SUBPROCESS(3) func<end> ); 
[38] SUBPROCESS(3) for<start> for( 
[39] SUBPROCESS(3) for s4_t_lp_k=0; 
[40] SUBPROCESS(3) for s4_t_lp_k<2; 
[41] SUBPROCESS(3) for s4_t_lp_k++ 
[42] SUBPROCESS(3) for ) 
[43] SUBPROCESS(3) subproc SUBSUBPROCESS(1) 
[44] SUBPROCESS(3) proc break; 
[45] SUBPROCESS(3) ??? default: 
[46] SUBPROCESS(3) func<start> s4_t_wave_num = s4_calc_spec_music_4ch_all( 
[47] SUBPROCESS(3) func afl_a_Ryy_2f[s4_a_peak_bin_2f], 
[48] SUBPROCESS(3) func afl_t_spec_music, 
[49] SUBPROCESS(3) func 2, 
[50] SUBPROCESS(3) func 1 
[51] SUBPROCESS(3) func<end> ); 
[52] SUBPROCESS(3) func<start> *ps4_a_doa_num = s4_peak_search_music_fsk( 
[53] SUBPROCESS(3) func (const FL *)afl_t_spec_music, 
[54] SUBPROCESS(3) func as4_t_selected_doa_bins, 
[55] SUBPROCESS(3) func afl_a_selected_doa_powers_2f, 
[56] SUBPROCESS(3) func s4_t_wave_num 
[57] SUBPROCESS(3) func<end> ); 
[58] SUBPROCESS(3) for<start> for( 
[59] SUBPROCESS(3) for s4_t_lp_k=0; 
[60] SUBPROCESS(3) for s4_t_lp_k<*ps4_a_doa_num; 
[61] SUBPROCESS(3) for s4_t_lp_k++ 
[62] SUBPROCESS(3) for ) 
[63] SUBPROCESS(3) subproc SUBSUBPROCESS(2) 
[64] SUBPROCESS(3) proc break; 
[65] MAINPROCESS for <start> for ( 
[66] MAINPROCESS for  s4_t_lp_i = 0; 
[67] MAINPROCESS for  s4_t_lp_i < *ps4_a_doa_num; 
[68] MAINPROCESS for  s4_t_lp_i++ 
[69] MAINPROCESS for  ) 
[70] MAINPROCESS subproc SUBPROCESS(4) 
[71] SUBPROCESS(4) if<start> if( 
[72] SUBPROCESS(4) ??? as4_t_selected_doa_bins[s4_t_lp_i] > 0 
[73] SUBPROCESS(4) ??? ) 
[74] SUBPROCESS(4) subproc SUBSUBPROCESS(1) 
[75] MAINPROCESS proc return; 
[76] SUBSUBPROCESS(1) func<start> afl_a_selected_doa_powers_2f[s4_t_lp_i] = fl_calc_spec_bf_4ch_2f_of_specified_doa( 
[77] SUBSUBPROCESS(1) func afl_a_Ryy_2f[s4_a_peak_bin_2f], 
[78] SUBSUBPROCESS(1) func s4_a_peak_bin_2f, 
[79] SUBSUBPROCESS(1) func as4_t_selected_doa_bins[s4_t_lp_i] 
[80] SUBSUBPROCESS(1) func<end> ); 
----------------- Total Codes : 80 lines
--------------------------
[Function Name] : fn_bsm_2f_cal_interpolate_freq_peak 
-Return type : static VD 
-Argument : 3 
     [0] : S4   s4_a_peak_bin_2f 
     [1] : S4   s4_a_doa_num_2f 
     [2] : FL   afl_a_selected_bins_intpl_2f[2] 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_i; 
[2] MAINPROCESS for<start> for( 
[3] MAINPROCESS for s4_t_i=0; 
[4] MAINPROCESS for s4_t_i<s4_a_doa_num_2f; 
[5] MAINPROCESS for s4_t_i++ 
[6] MAINPROCESS for ) 
[7] MAINPROCESS subproc SUBPROCESS(1) 
[8] SUBPROCESS(1) if<start> if( 
[9] SUBPROCESS(1) ??? (FL 
[10] SUBPROCESS(1) ??? ) 
[11] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[12] MAINPROCESS proc return; 
[13] SUBSUBPROCESS(1) func<start> afl_a_selected_bins_intpl_2f[s4_t_i] = fl_interpolate_freq_peak_fsk( 
[14] SUBSUBPROCESS(1) func (const FL *)afl_g_cvw_fcw_ftt_power, 
[15] SUBSUBPROCESS(1) func (S4)s4_a_peak_bin_2f 
[16] SUBSUBPROCESS(1) func<end> ); 
----------------- Total Codes : 16 lines
--------------------------
[Function Name] : fn_bsm_2f_store_doa 
-Return type : VD 
-Argument : 11 
     [0] : const FL   afl_a_peak_power_2f[AUX_BUFFSIZE] 
     [1] : const S4   as4_a_doa_num_2f[AUX_BUFFSIZE] 
     [2] : const FL   afl_a_selected_doa_bins_intpl_2f[AUX_BUFFSIZE][2] 
     [3] : const FL   afl_a_selected_doa_powers_2f[AUX_BUFFSIZE][2] 
     [4] : const FL   afl_a_selected_bins_intpl_2f[AUX_BUFFSIZE][2] 
     [5] : S4   *ps4_a_doa_peak_num_2f 
     [6] : FL afl_a_peak_bins_intpl_2f[AUX_BUFFSIZE *   2] 
     [7] : FL afl_a_peak_powers_2f[AUX_BUFFSIZE *   2] 
     [8] : FL afl_a_peak_doa_bins_intpl_2f[AUX_BUFFSIZE *   2] 
     [9] : FL afl_a_peak_doa_powers_2f[AUX_BUFFSIZE *   2] 
     [10] : S4 as4_a_peak_wave_num[AUX_BUFFSIZE *   2] 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_iRet; 
[2] MAINPROCESS proc S4 s4_t_lp_i; 
[3] MAINPROCESS proc S4 s4_t_lp_k; 
[4] MAINPROCESS equal s4_t_iRet 0;
[5] MAINPROCESS for <start> for ( 
[6] MAINPROCESS for  s4_t_lp_i = 0; 
[7] MAINPROCESS for  s4_t_lp_i < AUX_BUFFSIZE; 
[8] MAINPROCESS for  s4_t_lp_i++ 
[9] MAINPROCESS for  ) 
[10] MAINPROCESS subproc SUBPROCESS(1) 
[11] SUBPROCESS(1) for <start> for ( 
[12] SUBPROCESS(1) ??? s4_t_lp_k = 0; 
[13] SUBPROCESS(1) ??? s4_t_lp_k < as4_a_doa_num_2f[s4_t_lp_i]; 
[14] SUBPROCESS(1) ??? s4_t_lp_k++ 
[15] SUBPROCESS(1) ??? ) 
[16] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[17] MAINPROCESS equal *ps4_a_doa_peak_num_2f s4_t_iRet;
[18] MAINPROCESS proc return; 
[19] SUBSUBPROCESS(1) equal afl_a_peak_bins_intpl_2f[s4_t_iRet] afl_a_selected_bins_intpl_2f[s4_t_lp_i][s4_t_lp_k];
[20] SUBSUBPROCESS(1) equal afl_a_peak_powers_2f[s4_t_iRet] afl_a_peak_power_2f[s4_t_lp_i];
[21] SUBSUBPROCESS(1) equal afl_a_peak_doa_bins_intpl_2f[s4_t_iRet] afl_a_selected_doa_bins_intpl_2f[s4_t_lp_i][s4_t_lp_k];
[22] SUBSUBPROCESS(1) equal afl_a_peak_doa_powers_2f[s4_t_iRet] afl_a_selected_doa_powers_2f[s4_t_lp_i][s4_t_lp_k];
[23] SUBSUBPROCESS(1) equal as4_a_peak_wave_num[s4_t_iRet] as4_a_doa_num_2f[s4_t_lp_i];
[24] SUBSUBPROCESS(1) proc s4_t_iRet++; 
----------------- Total Codes : 24 lines
--------------------------
[Function Name] : fn_bsm_2f_make_pair 
-Return type : VD 
-Argument : 7 
     [0] : S4   s4_a_doa_peak_num_2f 
     [1] : S4 as4_a_peak_wave_num[AUX_BUFFSIZE *   2] 
     [2] : const FL afl_a_peak_bins_intpl_2f[AUX_BUFFSIZE *   2] 
     [3] : const FL afl_a_peak_doa_bins_intpl_2f[AUX_BUFFSIZE *   2] 
     [4] : const FL afl_a_peak_doa_powers_2f[AUX_BUFFSIZE *   2] 
     [5] : S4   *ps4_a_pair_num_2f 
     [6] : NORMAL_BSM   ast_a_normal_2f[AUX_BUFFSIZE] 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i; 
[2] MAINPROCESS proc S4 s4_t_lp_k; 
[3] MAINPROCESS proc S4 s4_t_pair_num; 
[4] MAINPROCESS proc FL afl_t_tmp_Ryy[3]; 
[5] MAINPROCESS proc FL fl_t_tmp_Robs; 
[6] MAINPROCESS proc FL fl_t_tmp_Vobs; 
[7] MAINPROCESS proc FL fl_t_tmp_Rxobs; 
[8] MAINPROCESS proc FL fl_t_tmp_Ryobs; 
[9] MAINPROCESS proc FL fl_t_tmp_theta; 
[10] MAINPROCESS proc S4 s4_t_wave_number[AUX_BUFFSIZE*2]; 
[11] MAINPROCESS equal FL fl_t_pow_min 0.0F;
[12] MAINPROCESS equal S4 s4_t_index -1;
[13] MAINPROCESS proc U1 u1_t_lp_aux_buffsize; 
[14] MAINPROCESS func<start> u1_t_lp_aux_buffsize < ((U1)AUX_BUFFSIZE * (U1)2 
[15] MAINPROCESS func<end> ); 
[16] MAINPROCESS func u1_t_lp_aux_buffsize++ 
[17] MAINPROCESS func<end> ); 
[18] MAINPROCESS subproc SUBPROCESS(1) 
[19] MAINPROCESS equal s4_t_pair_num 0;
[20] MAINPROCESS for <start> for ( 
[21] MAINPROCESS for  s4_t_lp_i = 0; 
[22] MAINPROCESS for  s4_t_lp_i < s4_a_doa_peak_num_2f; 
[23] MAINPROCESS for  s4_t_lp_i++ 
[24] MAINPROCESS for  ) 
[25] MAINPROCESS subproc SUBPROCESS(2) 
[26] SUBPROCESS(2) func<start> fl_t_tmp_theta = -(PI / 180.0F * (st_g_bsm_loop_data.afl_installed_angle[0] + afl_a_peak_doa_bins_intpl_2f[s4_t_lp_i] +  (FL)DOA_BIN_START_ANG) 
[27] SUBPROCESS(2) func<end> ); 
[28] SUBPROCESS(2) for <start> for ( 
[29] SUBPROCESS(2) for  s4_t_lp_k = 0 ; 
[30] SUBPROCESS(2) for  s4_t_lp_k < 3 ; 
[31] SUBPROCESS(2) for  s4_t_lp_k++ 
[32] SUBPROCESS(2) for  ) 
[33] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[34] SUBPROCESS(2) func<start> fl_t_tmp_Robs = fl_cal_r_fsk((const FL *)afl_t_tmp_Ryy 
[35] SUBPROCESS(2) func<end> ); 
[36] SUBPROCESS(2) func<start> fl_t_tmp_Ryobs = fl_t_tmp_Robs * (FL)fl_cos(fl_t_tmp_theta 
[37] SUBPROCESS(2) func<end> ); 
[38] SUBPROCESS(2) func<start> fl_t_tmp_Vobs = VCOF_2F * (afl_a_peak_bins_intpl_2f[s4_t_lp_i] - (FL)(NB_FFT_PT_2F / 2) 
[39] SUBPROCESS(2) func<end> ); 
[40] SUBPROCESS(2) if <start> if ( 
[41] SUBPROCESS(2) if  fl_abs(fl_t_tmp_Ryobs 
[42] SUBPROCESS(2) if  ) 
[43] SUBPROCESS(2) subproc SUBSUBPROCESS(2) 
[44] SUBPROCESS(2) if <start> if ( 
[45] SUBPROCESS(2) if  s4_t_pair_num < AUX_BUFFSIZE 
[46] SUBPROCESS(2) ??? ) 
[47] SUBPROCESS(2) subproc SUBSUBPROCESS(3) 
[48] SUBPROCESS(2) subproc SUBSUBPROCESS(4) 
[49] MAINPROCESS func<start> for (s4_t_lp_i = 0; 
[50] MAINPROCESS func s4_t_lp_i < (AUX_BUFFSIZE * 2 
[51] MAINPROCESS func ) 
[52] MAINPROCESS func s4_t_lp_i++ 
[53] MAINPROCESS func<end> ); 
[54] MAINPROCESS subproc SUBPROCESS(3) 
[55] SUBPROCESS(3) equal as4_a_peak_wave_num[s4_t_lp_i] s4_t_wave_number[s4_t_lp_i];
[56] MAINPROCESS equal *ps4_a_pair_num_2f s4_t_pair_num;
[57] MAINPROCESS proc return; 
[58] MAINPROCESS equal as4_a_peak_wave_num[s4_t_lp_i] s4_t_wave_number[s4_t_lp_i];
----------------- Total Codes : 58 lines
--------------------------
[Function Name] : fn_bsm_2f_set_object 
-Return type : VD 
-Argument : 2 
     [0] : const S4   *ps4_a_pair_num_2f 
     [1] : NORMAL_BSM   ast_a_normal_2f[AUX_BUFFSIZE] 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i; 
[2] MAINPROCESS for <start> for ( 
[3] MAINPROCESS ??? s4_t_lp_i = 0; 
[4] MAINPROCESS ??? s4_t_lp_i < *ps4_a_pair_num_2f; 
[5] MAINPROCESS ??? s4_t_lp_i++ 
[6] MAINPROCESS ??? ) 
[7] MAINPROCESS subproc SUBPROCESS(1) 
[8] SUBPROCESS(1) equal ast_a_normal_2f[s4_t_lp_i].s4_flg_dc OBJECT_TYPE_2F;
[9] MAINPROCESS proc return; 
[10] MAINPROCESS equal ast_a_normal_2f[s4_t_lp_i].s4_flg_dc OBJECT_TYPE_2F;
----------------- Total Codes : 10 lines
--------------------------
[Function Name] : s4_bsm_2f_compare_with_FMCW 
-Return type : S4 
-Argument : 6 
     [0] : S4   peak_num_2f 
     [1] : NORMAL_BSM   normal_2f[AUX_BUFFSIZE] 
     [2] : const S4   peak_wave_num[AUX_BUFFSIZE*2] 
     [3] : const FL   Ryy_up[NB_FFT_PT][CORRE_SIZE_4CH] 
     [4] : const FL   Ryy_dn[NB_FFT_PT][CORRE_SIZE_4CH] 
     [5] : U1   u1_a_alarming_flag 
----- Codes -----
[1] MAINPROCESS equal S4 iret peak_num_2f;
[2] MAINPROCESS proc S4 i, j; 
[3] MAINPROCESS equal S4 tmp_erase_flg 0;
[4] MAINPROCESS proc FL tmp_doa_spec[N_DOA]; 
[5] MAINPROCESS equal S4 tmp_wave_num_up 0;
[6] MAINPROCESS proc S4 tmp_doa_up[2]; 
[7] MAINPROCESS proc FL tmp_peak_power_up[2]; 
[8] MAINPROCESS equal S4 tmp_wave_num_dn 0;
[9] MAINPROCESS proc S4 tmp_doa_dn[2]; 
[10] MAINPROCESS proc FL tmp_peak_power_dn[2]; 
[11] MAINPROCESS proc U1 u1_t_lp_n_doa; 
[12] MAINPROCESS proc U1 u1_t_jdg_b10_flg; 
[13] MAINPROCESS proc U1 u1_t_jdg_a3_flg; 
[14] MAINPROCESS func u1_t_lp_n_doa++ 
[15] MAINPROCESS func<end> ); 
[16] MAINPROCESS subproc SUBPROCESS(1) 
[17] MAINPROCESS for<start> for( 
[18] MAINPROCESS for i=0; 
[19] MAINPROCESS for i<peak_num_2f; 
[20] MAINPROCESS for i++ 
[21] MAINPROCESS for ) 
[22] MAINPROCESS subproc SUBPROCESS(2) 
[23] SUBPROCESS(2) func<start> u1_t_jdg_b10_flg = u1_bsm_2f_compare_with_FMCW_b10(normal_2f[i].fl_Ryobs 
[24] SUBPROCESS(2) func<end> ); 
[25] SUBPROCESS(2) if <start> if ( 
[26] SUBPROCESS(2) if  ((peak_wave_num[i] > (S4 
[27] SUBPROCESS(2) if  ) 
[28] SUBPROCESS(2) if  &&   ( 
[29] SUBPROCESS(2) for<start> fl_g_v_self_bsm_for_base < (FL 
[30] SUBPROCESS(2) for ) 
[31] SUBPROCESS(2) for ||  ( 
[32] SUBPROCESS(2) for (peak_wave_num[i] > (S4 
[33] SUBPROCESS(2) for ) 
[34] SUBPROCESS(2) for &&   ( 
[35] SUBPROCESS(2) for !(fl_g_v_self_bsm_for_base < (FL 
[36] SUBPROCESS(2) for ) 
[37] SUBPROCESS(2) for ||  ( 
[38] SUBPROCESS(2) for (normal_2f[i].s4_bin_up_music > (S4 
[39] SUBPROCESS(2) for ) 
[40] SUBPROCESS(2) for &&   ( 
[41] SUBPROCESS(2) for normal_2f[i].s4_bin_up_music < (S4 
[42] SUBPROCESS(2) for ) 
[43] SUBPROCESS(2) for &&   ( 
[44] SUBPROCESS(2) for normal_2f[i].s4_bin_dn_music > (S4 
[45] SUBPROCESS(2) for ) 
[46] SUBPROCESS(2) for &&   ( 
[47] SUBPROCESS(2) for normal_2f[i].s4_bin_dn_music < (S4 
[48] SUBPROCESS(2) for ) 
[49] SUBPROCESS(2) for &&   ( 
[50] SUBPROCESS(2) for st_g_bsm_loop_data.as4_fast_sot_flg[0] != (S4 
[51] SUBPROCESS(2) for ) 
[52] SUBPROCESS(2) for ||  ( 
[53] SUBPROCESS(2) for (normal_2f[i].s4_bin_up_music > (S4 
[54] SUBPROCESS(2) for ) 
[55] SUBPROCESS(2) for &&   ( 
[56] SUBPROCESS(2) for normal_2f[i].s4_bin_up_music < (S4 
[57] SUBPROCESS(2) for ) 
[58] SUBPROCESS(2) for &&   ( 
[59] SUBPROCESS(2) for normal_2f[i].s4_bin_dn_music > (S4 
[60] SUBPROCESS(2) for ) 
[61] SUBPROCESS(2) for &&   ( 
[62] SUBPROCESS(2) for normal_2f[i].s4_bin_dn_music < (S4 
[63] SUBPROCESS(2) for ) 
[64] SUBPROCESS(2) for &&   ( 
[65] SUBPROCESS(2) for u1_a_alarming_flag == (U1 
[66] SUBPROCESS(2) for ) 
[67] SUBPROCESS(2) for &&   ( 
[68] SUBPROCESS(2) for u1_t_jdg_b10_flg == CU1_TRUE 
[69] SUBPROCESS(2) for ) 
[70] SUBPROCESS(2) for &&   ( 
[71] SUBPROCESS(2) for normal_2f[i].fl_Ryobs > (FL 
[72] SUBPROCESS(2) for ) 
[73] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[74] MAINPROCESS ??? iret = s4_trim_normal_2f(normal_2f 
[75] MAINPROCESS ??? ) 
[76] MAINPROCESS proc return iret; 
[77] SUBSUBPROCESS(1) equal tmp_erase_flg 0;
[78] SUBSUBPROCESS(1) func<start> fn_calc_spec_bf_4ch_fm( 
[79] SUBSUBPROCESS(1) func (const FL *)Ryy_up[normal_2f[i].s4_bin_up], 
[80] SUBSUBPROCESS(1) func tmp_doa_spec, 
[81] SUBSUBPROCESS(1) func 0, 
[82] SUBSUBPROCESS(1) func normal_2f[i].s4_bin_up 
[83] SUBSUBPROCESS(1) func<end> ); 
[84] SUBSUBPROCESS(1) func<start> tmp_wave_num_up = s4_search_peak_bf( 
[85] SUBSUBPROCESS(1) func (const FL *)tmp_doa_spec, 
[86] SUBSUBPROCESS(1) func tmp_doa_up, 
[87] SUBSUBPROCESS(1) func tmp_peak_power_up, 
[88] SUBSUBPROCESS(1) func 1 
[89] SUBSUBPROCESS(1) func<end> ); 
[90] SUBSUBPROCESS(1) ??? for( 
[91] SUBSUBPROCESS(1) ??? j=0; 
[92] SUBSUBPROCESS(1) ??? j<tmp_wave_num_up; 
[93] SUBSUBPROCESS(1) ??? j++ 
[94] SUBSUBPROCESS(1) ??? ) 
[95] SUBSUBPROCESS(1) subproc SUBSUBSUBPROCESS(1) 
[96] SUBSUBPROCESS(1) if<start> if( 
[97] SUBSUBPROCESS(1) if tmp_erase_flg == 0 
[98] SUBSUBPROCESS(1) if ) 
[99] SUBSUBPROCESS(1) subproc SUBSUBSUBPROCESS(2) 
[100] SUBSUBPROCESS(1) if<start> if( 
[101] SUBSUBPROCESS(1) if tmp_erase_flg==1 
[102] SUBSUBPROCESS(1) if ) 
[103] SUBSUBPROCESS(1) subproc SUBSUBSUBPROCESS(3) 
[104] SUBSUBSUBPROCESS(1) func<start> u1_t_jdg_a3_flg = u1_bsm_2f_compare_with_FMCW_a3(normal_2f[i].fl_power_up_music, tmp_peak_power_up[j] 
[105] SUBSUBSUBPROCESS(1) func<end> ); 
[106] SUBSUBSUBPROCESS(1) if <start> if ( 
[107] SUBSUBSUBPROCESS(1) if  (normal_2f[i].fl_Robs != CFL_UNKNOWN_VALUE 
[108] SUBSUBSUBPROCESS(1) if  ) 
[109] SUBSUBSUBPROCESS(1) if  &&  ( 
[110] SUBSUBSUBPROCESS(1) if  s4_abs(normal_2f[i].s4_bin_up_music - tmp_doa_up[j] 
[111] SUBSUBSUBPROCESS(1) if  ) 
[112] SUBSUBSUBPROCESS(1) if  &&  ( 
[113] SUBSUBSUBPROCESS(1) if  u1_t_jdg_a3_flg == CU1_TRUE 
[114] SUBSUBSUBPROCESS(1) if  ) 
[115] SUBSUBSUBPROCESS(1) subproc SUBSUBSUBSUBPROCESS(1) 
[116] SUBSUBSUBPROCESS(2) func<start> fn_calc_spec_bf_4ch_fm( 
[117] SUBSUBSUBPROCESS(2) func (const FL *)Ryy_dn[normal_2f[i].s4_bin_dn], 
[118] SUBSUBSUBPROCESS(2) func tmp_doa_spec, 
[119] SUBSUBSUBPROCESS(2) func 1, 
[120] SUBSUBSUBPROCESS(2) func normal_2f[i].s4_bin_dn 
[121] SUBSUBSUBPROCESS(2) func<end> ); 
[122] SUBSUBSUBPROCESS(2) func<start> tmp_wave_num_dn = s4_search_peak_bf( 
[123] SUBSUBSUBPROCESS(2) func (const FL *)tmp_doa_spec, 
[124] SUBSUBSUBPROCESS(2) func tmp_doa_dn, 
[125] SUBSUBSUBPROCESS(2) func tmp_peak_power_dn, 
[126] SUBSUBSUBPROCESS(2) func 1 
[127] SUBSUBSUBPROCESS(2) func<end> ); 
[128] SUBSUBSUBPROCESS(2) for<start> for( 
[129] SUBSUBSUBPROCESS(2) ??? j=0; 
[130] SUBSUBSUBPROCESS(2) ??? j<tmp_wave_num_dn; 
[131] SUBSUBSUBPROCESS(2) ??? j++ 
[132] SUBSUBSUBPROCESS(2) ??? ) 
[133] SUBSUBSUBPROCESS(2) subproc SUBSUBSUBSUBPROCESS(1) 
[134] SUBSUBSUBPROCESS(3) func<start> fn_init(&normal_2f[i], 1 
[135] SUBSUBSUBPROCESS(3) func<end> ); 
----------------- Total Codes : 135 lines
--------------------------
[Function Name] : u1_bsm_2f_compare_with_FMCW_b10 
-Return type : static U1 
-Argument : 1 
     [0] : (FL   fl_a_Ryobs 
----- Codes -----
[1] MAINPROCESS proc U1 u1_t_jdg_b10_flag; 
[2] MAINPROCESS equal u1_t_jdg_b10_flag CU1_FALSE;
[3] MAINPROCESS if <start> if ( 
[4] MAINPROCESS ??? fl_a_Ryobs < (FL 
[5] MAINPROCESS ??? ) 
[6] MAINPROCESS subproc SUBPROCESS(1) 
[7] SUBPROCESS(1) equal u1_t_jdg_b10_flag CU1_TRUE;
[8] MAINPROCESS subproc SUBPROCESS(2) 
[9] SUBPROCESS(2) equal u1_t_jdg_b10_flag CU1_FALSE;
[10] MAINPROCESS proc return u1_t_jdg_b10_flag; 
[11] MAINPROCESS equal u1_t_jdg_b10_flag CU1_FALSE;
----------------- Total Codes : 11 lines
--------------------------
[Function Name] : u1_bsm_2f_compare_with_FMCW_a3 
-Return type : static U1 
-Argument : 1 
     [0] : (FL   fl_a_power_up_music 
----- Codes -----
[1] MAINPROCESS proc U1 u1_t_jdg_a3_flag; 
[2] MAINPROCESS equal u1_t_jdg_a3_flag CU1_FALSE;
[3] MAINPROCESS if <start> if ( 
[4] MAINPROCESS ??? fl_a_power_up_music < (FL 
[5] MAINPROCESS ??? ) 
[6] MAINPROCESS subproc SUBPROCESS(1) 
[7] SUBPROCESS(1) equal u1_t_jdg_a3_flag CU1_TRUE;
[8] MAINPROCESS subproc SUBPROCESS(2) 
[9] SUBPROCESS(2) equal u1_t_jdg_a3_flag CU1_FALSE;
[10] MAINPROCESS proc return u1_t_jdg_a3_flag; 
[11] MAINPROCESS equal u1_t_jdg_a3_flag CU1_FALSE;
----------------- Total Codes : 11 lines
