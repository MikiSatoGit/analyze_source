Total lines: 1374 
Total functions : 40 
--------------------------
[Function Name] : init_btt_configuration_parameter_dummy 
-Return type : VD 
-Argument : 4 
     [0] : BSM_STANDARD   *pst_a_bsm_alertarea_for_test 
     [1] : BTT_CLUSTER_INFO   *pst_a_cluster_info 
     [2] : BTT_AUX_TRAILER_INFO   *pst_a_aux_trailer_info 
     [3] : BTT_HITCH_ANGLE   *pst_a_hitch_angle 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.BTT_initialized == BTT_RET_t.Init_Stat.INITIALIZED ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) proc return; 
[4] MAINPROCESS ??? if(miki=test) 
[5] MAINPROCESS subproc SUBPROCESS(2) 
[6] SUBPROCESS(2) equal miki done;
[7] SUBPROCESS(2) proc hogehoge; 
[8] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[9] MAINPROCESS equal st_g_btt_stat.ATD BTT_RET_t.Func_Stat.ENABLE;
[10] MAINPROCESS equal st_g_btt_stat.TLE BTT_RET_t.Func_Stat.ENABLE;
[11] MAINPROCESS equal st_g_btt_stat.AAZ BTT_RET_t.Func_Stat.ENABLE;
[12] MAINPROCESS equal st_g_btt_stat.TWE BTT_RET_t.Func_Stat.ENABLE;
[13] MAINPROCESS equal st_g_btt_stat.TWE BTT_RET_t.Func_Stat.DISABLE;
[14] MAINPROCESS equal st_g_btt_stat.TTM BTT_RET_t.Func_Stat.DISABLE;
[15] MAINPROCESS equal pst_a_cluster_info->dummy CFL_UNKNOWN_VALUE;
[16] MAINPROCESS equal pst_a_aux_trailer_info->dummy CFL_UNKNOWN_VALUE;
[17] MAINPROCESS equal pst_a_hitch_angle->dummy CFL_UNKNOWN_VALUE;
[18] MAINPROCESS proc return; 
[19] SUBSUBPROCESS(1) equal miki next;
----------------- Total Codes : 19 lines
--------------------------
[Function Name] : enter_btt_dummy 
-Return type : VD 
-Argument : 17 
     [0] : FL   fl_a_self_v 
     [1] : S4   s4_a_curve_r 
     [2] : S1   s1_a_shift_flg 
     [3] : NORMAL_BSM   *pst_a_object 
     [4] : S4   s4_a_object_size 
     [5] : FL   fl_a_doa_pow_ave[2][3] 
     [6] : FL   fl_a_doa_pow_dev[2][3] 
     [7] : S4   s4_a_doa_bf_peak_bin 
     [8] : FL   fl_a_doa_bf_peak_pow 
     [9] : U1   u1_a_bsm_drv_cmd 
     [10] : BTT_CLUSTER_INFO   *pst_a_cluster_info 
     [11] : BTT_AUX_TRAILER_INFO   *pst_a_aux_trailer_info 
     [12] : BTT_HITCH_ANGLE   *pst_a_hitch_angle 
     [13] : U1   *pu1_alarm_flg 
     [14] : NORMAL_BSM   *pst_a_target 
     [15] : S4   s4_a_target_size 
     [16] : BTT_STAT   *pst_a_btt_stat 
----- Codes -----
[1] MAINPROCESS ??? fn_btt_initialize( 
[2] MAINPROCESS ??? BTT_RET_t.CAN_Config.ENABLE, 
[3] MAINPROCESS ??? BTT_RET_t.Drv_SW.ON, 
[4] MAINPROCESS ??? BTT_RET_t.CAN_Config.ENABLE, 
[5] MAINPROCESS ??? u1_a_bsm_drv_cmd, 
[6] MAINPROCESS ??? st_g_bsm_alertarea_for_test 
[7] MAINPROCESS func ); 
[8] MAINPROCESS ??? fn_btt_main( 
[9] MAINPROCESS ??? fl_a_self_v, 
[10] MAINPROCESS ??? s4_a_curve_r, 
[11] MAINPROCESS ??? s1_a_shift_flg, 
[12] MAINPROCESS ??? pst_a_object, 
[13] MAINPROCESS ??? s4_a_object_size, 
[14] MAINPROCESS ??? fl_a_doa_pow_ave, 
[15] MAINPROCESS ??? fl_a_doa_pow_dev, 
[16] MAINPROCESS ??? s4_a_doa_bf_peak_bin, 
[17] MAINPROCESS ??? fl_a_doa_bf_peak_pow, 
[18] MAINPROCESS ??? pst_a_btt_stat, 
[19] MAINPROCESS ??? pu1_alarm_flg, 
[20] MAINPROCESS ??? pst_a_cluster_info, 
[21] MAINPROCESS ??? pst_a_aux_trailer_info, 
[22] MAINPROCESS ??? pst_a_hitch_angle, 
[23] MAINPROCESS ??? pst_a_target, 
[24] MAINPROCESS ??? s4_a_target_size, 
[25] MAINPROCESS ??? &st_g_btt_result, 
[26] MAINPROCESS ??? &st_g_btt_alertarea 
[27] MAINPROCESS func ); 
[28] MAINPROCESS ??? fn_btt_set_btt_final_state( 
[29] MAINPROCESS ??? BTT_RET_t.CAN_Config.ENABLE, 
[30] MAINPROCESS ??? u1_a_bsm_drv_cmd, 
[31] MAINPROCESS ??? st_g_btt_result 
[32] MAINPROCESS func ); 
[33] MAINPROCESS equal au1_g_btt_drv_stat pst_a_btt_stat->BTT_drv;
[34] MAINPROCESS equal au1_g_btt_fin_stat st_g_btt_stat.BTT_final;
[35] MAINPROCESS proc return; 
----------------- Total Codes : 35 lines
--------------------------
[Function Name] : fn_btt_initialize 
-Return type : VD 
-Argument : 5 
     [0] : U1   u1_a_bsm_configuration 
     [1] : U1   u1_a_bsm_drv_cmd 
     [2] : U1   u1_a_btt_configuration 
     [3] : U1   u1_a_btt_drv_cmd 
     [4] : BSM_STANDARD   st_a_bsm_alertarea 
----- Codes -----
[1] MAINPROCESS ??? if ((fl_g_v_self_bsm_for_base > BTT_ACTIVE_SPEED_TH)) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) equal st_g_btt_stat.BTT_RESET BTT_TRUE;
[4] MAINPROCESS ??? if( st_g_btt_stat.BTT_RESET == BTT_TRUE 
[5] MAINPROCESS ??? && st_g_btt_stat.BTT_initialized == BTT_RET_t.Init_Stat.INITIALIZED 
[6] MAINPROCESS ??? && fl_g_v_self_bsm_for_base < (FL)0.5 ) 
[7] MAINPROCESS subproc SUBPROCESS(2) 
[8] SUBPROCESS(2) proc st_g_btt_stat.BTT_timer ++; 
[9] SUBPROCESS(2) ??? if(st_g_btt_stat.BTT_timer > (S4)150) 
[10] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[11] MAINPROCESS ??? if(st_g_btt_stat.BTT_initialized == BTT_RET_t.Init_Stat.INITIALIZED ) 
[12] MAINPROCESS subproc SUBPROCESS(3) 
[13] SUBPROCESS(3) proc return; 
[14] MAINPROCESS equal st_g_btt_alertarea.standard st_a_bsm_alertarea;
[15] MAINPROCESS equal st_g_btt_result.TFlag BTT_RET_t.TFlag.UNKNOWN;
[16] MAINPROCESS ??? fn_btt_set_trailer_length( BTT_TRAILER_SIZE_UNKNOWN 
[17] MAINPROCESS func ); 
[18] MAINPROCESS ??? fn_btt_set_trailer_width( BTT_TRAILER_SIZE_UNKNOWN 
[19] MAINPROCESS func ); 
[20] MAINPROCESS equal st_g_btt_alertarea.rear.VarYmax BTT_REAR_RANGE_MAX;
[21] MAINPROCESS ??? fn_btt_ttm_activate( 
[22] MAINPROCESS func ); 
[23] MAINPROCESS ??? fn_btt_atd_activate( 
[24] MAINPROCESS func ); 
[25] MAINPROCESS ??? fn_btt_atd_initialize( 
[26] MAINPROCESS func ); 
[27] MAINPROCESS ??? fn_btt_set_bsm_final_state( 
[28] MAINPROCESS ??? u1_a_bsm_configuration, 
[29] MAINPROCESS ??? u1_a_bsm_drv_cmd 
[30] MAINPROCESS func ); 
[31] MAINPROCESS ??? fn_btt_set_btt_final_state( 
[32] MAINPROCESS ??? u1_a_btt_configuration, 
[33] MAINPROCESS ??? u1_a_btt_drv_cmd, 
[34] MAINPROCESS ??? st_g_btt_result 
[35] MAINPROCESS func ); 
[36] MAINPROCESS ??? if( u1_a_btt_drv_cmd == BTT_RET_t.Drv_SW.ON ) 
[37] MAINPROCESS subproc SUBPROCESS(4) 
[38] SUBPROCESS(4) ??? fn_btt_aaz_activate( 
[39] SUBPROCESS(4) func ); 
[40] MAINPROCESS equal st_g_btt_stat.BTT_initialized BTT_RET_t.Init_Stat.INITIALIZED;
[41] MAINPROCESS proc return; 
[42] MAINPROCESS ??? fn_btt_aaz_activate( 
[43] MAINPROCESS func ); 
----------------- Total Codes : 43 lines
--------------------------
[Function Name] : fn_btt_set_bsm_final_state 
-Return type : VD 
-Argument : 2 
     [0] : U1   u1_a_bsm_configuration 
     [1] : U1   u1_a_bsm_drv_cmd 
----- Codes -----
[1] MAINPROCESS equal st_g_btt_stat.BSM_final BTT_RET_t.Final_stat.ON;
[2] MAINPROCESS ??? if( u1_a_bsm_configuration == BTT_RET_t.CAN_Config.DISABLE) 
[3] MAINPROCESS subproc SUBPROCESS(1) 
[4] SUBPROCESS(1) equal st_g_btt_stat.BSM_final BTT_RET_t.Final_stat.DISABLE;
[5] MAINPROCESS ??? else if( u1_a_bsm_drv_cmd == BTT_RET_t.Drv_SW.OFF ) 
[6] MAINPROCESS subproc SUBPROCESS(2) 
[7] SUBPROCESS(2) equal st_g_btt_stat.BSM_final BTT_RET_t.Final_stat.OFF;
[8] MAINPROCESS proc return; 
[9] MAINPROCESS equal st_g_btt_stat.BSM_final BTT_RET_t.Final_stat.OFF;
----------------- Total Codes : 9 lines
--------------------------
[Function Name] : fn_btt_set_btt_final_state 
-Return type : VD 
-Argument : 3 
     [0] : U1   u1_a_btt_configuration 
     [1] : U1   u1_a_btt_drv_cmd 
     [2] : BTT_RESULT   st_a_btt_result 
----- Codes -----
[1] MAINPROCESS equal st_g_btt_stat.BTT_final BTT_RET_t.Final_stat.ON;
[2] MAINPROCESS ??? if( st_g_btt_stat.BSM_final == BTT_RET_t.Final_stat.DISABLE || st_g_btt_stat.BSM_final == BTT_RET_t.Final_stat.OFF ) 
[3] MAINPROCESS subproc SUBPROCESS(1) 
[4] SUBPROCESS(1) equal st_g_btt_stat.BTT_final BTT_RET_t.Final_stat.DISABLE;
[5] MAINPROCESS ??? else 
[6] MAINPROCESS subproc SUBPROCESS(2) 
[7] SUBPROCESS(2) ??? if( u1_a_btt_configuration == BTT_RET_t.CAN_Config.DISABLE) 
[8] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[9] SUBPROCESS(2) ??? else 
[10] SUBPROCESS(2) subproc SUBSUBPROCESS(2) 
[11] MAINPROCESS proc return; 
[12] SUBSUBPROCESS(1) equal st_g_btt_stat.BTT_final BTT_RET_t.Final_stat.DISABLE;
[13] SUBSUBPROCESS(2) ??? if( u1_a_btt_drv_cmd == BTT_RET_t.Drv_SW.OFF ) 
[14] SUBSUBPROCESS(2) subproc SUBSUBSUBPROCESS(1) 
[15] SUBSUBPROCESS(2) ??? else if( u1_a_btt_drv_cmd == BTT_RET_t.Drv_SW.ON ) 
[16] SUBSUBPROCESS(2) subproc SUBSUBSUBPROCESS(2) 
[17] SUBSUBPROCESS(2) ??? else 
[18] SUBSUBPROCESS(2) subproc SUBSUBSUBPROCESS(3) 
[19] SUBSUBSUBPROCESS(1) equal st_g_btt_stat.BTT_final BTT_RET_t.Final_stat.OFF;
[20] SUBSUBSUBPROCESS(2) ??? fn_btt_set_btt_drv_state( 
[21] SUBSUBSUBPROCESS(2) ??? st_g_btt_stat, 
[22] SUBSUBSUBPROCESS(2) ??? st_g_btt_result 
[23] SUBSUBSUBPROCESS(2) func ); 
[24] SUBSUBSUBPROCESS(2) ??? if( st_g_btt_stat.BTT_drv == BTT_RET_t.Drv_Stat.CONNECT ) 
[25] SUBSUBSUBPROCESS(2) subproc SUBSUBSUBSUBPROCESS(1) 
[26] SUBSUBSUBPROCESS(2) ??? else if( st_g_btt_stat.BTT_drv == BTT_RET_t.Drv_Stat.OFFTEMP ) 
[27] SUBSUBSUBPROCESS(2) subproc SUBSUBSUBSUBPROCESS(2) 
[28] SUBSUBSUBPROCESS(2) ??? else if( st_g_btt_stat.BTT_drv == BTT_RET_t.Drv_Stat.NOTCONNECT ) 
[29] SUBSUBSUBPROCESS(2) subproc SUBSUBSUBSUBPROCESS(3) 
[30] SUBSUBSUBPROCESS(2) ??? else 
[31] SUBSUBSUBPROCESS(2) subproc SUBSUBSUBSUBPROCESS(4) 
----------------- Total Codes : 31 lines
--------------------------
[Function Name] : fn_btt_set_btt_drv_state 
-Return type : VD 
-Argument : 2 
     [0] : BTT_STAT   st_a_btt_stat 
     [1] : BTT_RESULT   st_a_btt_result 
----- Codes -----
[1] MAINPROCESS ??? if( st_a_btt_stat.BTT_final == BTT_RET_t.Final_stat.DISABLE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) equal st_g_btt_stat.BTT_drv BTT_RET_t.Drv_Stat.DISABLE;
[4] MAINPROCESS ??? else if( st_a_btt_stat.BTT_final == BTT_RET_t.Drv_Stat.OFF ) 
[5] MAINPROCESS subproc SUBPROCESS(2) 
[6] SUBPROCESS(2) equal st_g_btt_stat.BTT_drv BTT_RET_t.Drv_Stat.OFF;
[7] MAINPROCESS ??? else if( st_a_btt_stat.BTT_final == BTT_RET_t.Final_stat.ON ) 
[8] MAINPROCESS subproc SUBPROCESS(3) 
[9] SUBPROCESS(3) equal st_g_btt_stat.BTT_drv BTT_RET_t.Drv_Stat.PENDING;
[10] MAINPROCESS ??? else if( st_a_btt_stat.BTT_final == BTT_RET_t.Final_stat.OFFTEMP ) 
[11] MAINPROCESS subproc SUBPROCESS(4) 
[12] SUBPROCESS(4) equal st_g_btt_stat.BTT_drv BTT_RET_t.Drv_Stat.OFFTEMP;
[13] MAINPROCESS ??? else 
[14] MAINPROCESS subproc SUBPROCESS(5) 
[15] MAINPROCESS ??? if( st_g_btt_stat.BTT_drv == BTT_RET_t.Drv_Stat.PENDING ) 
[16] MAINPROCESS subproc SUBPROCESS(6) 
[17] SUBPROCESS(6) ??? if( st_a_btt_stat.ATD == BTT_RET_t.Func_Stat.ACTIVE ) 
[18] SUBPROCESS(6) subproc SUBSUBPROCESS(1) 
[19] SUBPROCESS(6) ??? else if( st_a_btt_stat.ATD == BTT_RET_t.Func_Stat.DEACTIVE ) 
[20] SUBPROCESS(6) subproc SUBSUBPROCESS(2) 
[21] SUBPROCESS(6) ??? else 
[22] SUBPROCESS(6) subproc SUBSUBPROCESS(3) 
[23] MAINPROCESS proc return; 
[24] SUBSUBPROCESS(1) equal st_g_btt_stat.BTT_drv BTT_RET_t.Drv_Stat.PENDING;
[25] SUBSUBPROCESS(2) ??? if( st_a_btt_result.TFlag == BTT_RET_t.TFlag.CONNECT ) 
[26] SUBSUBPROCESS(2) subproc SUBSUBSUBPROCESS(1) 
[27] SUBSUBPROCESS(2) ??? else if( st_a_btt_result.TFlag == BTT_RET_t.TFlag.NOTCONNECT ) 
[28] SUBSUBPROCESS(2) subproc SUBSUBSUBPROCESS(2) 
[29] SUBSUBPROCESS(2) ??? else if( st_a_btt_result.TFlag == BTT_RET_t.TFlag.UNKNOWN ) 
[30] SUBSUBPROCESS(2) subproc SUBSUBSUBPROCESS(3) 
[31] SUBSUBPROCESS(2) ??? else 
[32] SUBSUBPROCESS(2) subproc SUBSUBSUBPROCESS(4) 
----------------- Total Codes : 32 lines
--------------------------
[Function Name] : fn_btt_set_trailer_length 
-Return type : VD 
-Argument : 1 
     [0] : FL   length 
----- Codes -----
[1] MAINPROCESS equal st_g_btt_result.TLength length;
[2] MAINPROCESS ??? if( length == BTT_TRAILER_SIZE_UNKNOWN) 
[3] MAINPROCESS subproc SUBPROCESS(1) 
[4] SUBPROCESS(1) equal st_g_btt_result.TLength_stat BTT_RET_t.TSize_Stat.UNKNOWN;
[5] MAINPROCESS ??? else if( length < BTT_TRAILER_LENGTH_MIN || length >= BTT_TRAILER_LENGTH_MAX ) 
[6] MAINPROCESS subproc SUBPROCESS(2) 
[7] SUBPROCESS(2) equal st_g_btt_result.TLength_stat BTT_RET_t.TSize_Stat.INVALID;
[8] MAINPROCESS ??? else 
[9] MAINPROCESS subproc SUBPROCESS(3) 
[10] SUBPROCESS(3) equal st_g_btt_result.TLength_stat BTT_RET_t.TSize_Stat.VALID;
[11] MAINPROCESS proc return; 
[12] MAINPROCESS equal st_g_btt_result.TLength_stat BTT_RET_t.TSize_Stat.VALID;
----------------- Total Codes : 12 lines
--------------------------
[Function Name] : fn_btt_set_range_rear 
-Return type : VD 
-Argument : 1 
     [0] : FL   length 
----- Codes -----
[1] MAINPROCESS equal st_aaz_params.TLength_AAZ length;
[2] MAINPROCESS ??? if( st_aaz_params.TLength_AAZ == BTT_TRAILER_SIZE_UNKNOWN) 
[3] MAINPROCESS subproc SUBPROCESS(1) 
[4] SUBPROCESS(1) equal st_g_btt_alertarea.rear.VarY BTT_REAR_UNKNOWN;
[5] MAINPROCESS ??? else if( st_aaz_params.TLength_AAZ < BTT_TRAILER_LENGTH_MIN || st_aaz_params.TLength_AAZ >= BTT_TRAILER_LENGTH_MAX ) 
[6] MAINPROCESS subproc SUBPROCESS(2) 
[7] SUBPROCESS(2) equal st_g_btt_alertarea.rear.VarY BTT_REAR_INVALID;
[8] MAINPROCESS ??? else 
[9] MAINPROCESS subproc SUBPROCESS(3) 
[10] SUBPROCESS(3) ??? if( st_aaz_params.TLength_AAZ < BTT_REAR_RANGE_SHORT ) 
[11] SUBPROCESS(3) subproc SUBSUBPROCESS(1) 
[12] SUBPROCESS(3) ??? else if( st_aaz_params.TLength_AAZ < BTT_REAR_RANGE_MID ) 
[13] SUBPROCESS(3) subproc SUBSUBPROCESS(2) 
[14] SUBPROCESS(3) ??? else if( st_aaz_params.TLength_AAZ < BTT_REAR_RANGE_LONG ) 
[15] SUBPROCESS(3) subproc SUBSUBPROCESS(3) 
[16] SUBPROCESS(3) ??? else 
[17] SUBPROCESS(3) subproc SUBSUBPROCESS(4) 
[18] MAINPROCESS proc return; 
[19] SUBSUBPROCESS(1) equal st_g_btt_alertarea.rear.VarY BTT_REAR_SHORT;
[20] SUBSUBPROCESS(2) equal st_g_btt_alertarea.rear.VarY BTT_REAR_MID;
[21] SUBSUBPROCESS(3) equal st_g_btt_alertarea.rear.VarY BTT_REAR_LONG;
[22] SUBSUBPROCESS(4) equal st_g_btt_alertarea.rear.VarY st_g_btt_alertarea.rear.VarYmax;
----------------- Total Codes : 22 lines
--------------------------
[Function Name] : fn_btt_set_trailer_width 
-Return type : VD 
-Argument : 1 
     [0] : FL   width 
----- Codes -----
[1] MAINPROCESS equal st_g_btt_result.TWidth width;
[2] MAINPROCESS ??? if( width == BTT_TRAILER_SIZE_UNKNOWN) 
[3] MAINPROCESS subproc SUBPROCESS(1) 
[4] SUBPROCESS(1) equal st_g_btt_result.TWidth_stat BTT_RET_t.TSize_Stat.UNKNOWN;
[5] MAINPROCESS ??? else if( width >= BTT_SIDE_RANGE_MAX ) 
[6] MAINPROCESS subproc SUBPROCESS(2) 
[7] SUBPROCESS(2) equal st_g_btt_result.TWidth_stat BTT_RET_t.TSize_Stat.INVALID;
[8] MAINPROCESS ??? else 
[9] MAINPROCESS subproc SUBPROCESS(3) 
[10] SUBPROCESS(3) equal st_g_btt_result.TWidth_stat BTT_RET_t.TSize_Stat.VALID;
[11] MAINPROCESS proc return; 
[12] MAINPROCESS equal st_g_btt_result.TWidth_stat BTT_RET_t.TSize_Stat.VALID;
----------------- Total Codes : 12 lines
--------------------------
[Function Name] : fn_btt_set_range_side 
-Return type : VD 
-Argument : 1 
     [0] : FL   width 
----- Codes -----
[1] MAINPROCESS equal st_aaz_params.TWidth_AAZ width;
[2] MAINPROCESS ??? if( st_aaz_params.TWidth_AAZ == BTT_TRAILER_SIZE_UNKNOWN) 
[3] MAINPROCESS subproc SUBPROCESS(1) 
[4] SUBPROCESS(1) equal st_g_btt_alertarea.side.VarXin BTT_SIDE_RANGE_UNKNOWN;
[5] SUBPROCESS(1) equal st_g_btt_alertarea.side.VarXout BTT_SIDE_RANGE_UNKNOWN;
[6] MAINPROCESS ??? else if( st_aaz_params.TWidth_AAZ >= (FL) BTT_SIDE_RANGE_MAX ) 
[7] MAINPROCESS subproc SUBPROCESS(2) 
[8] SUBPROCESS(2) equal st_g_btt_alertarea.side.VarXin BTT_SIDE_RANGE_INVALID;
[9] SUBPROCESS(2) equal st_g_btt_alertarea.side.VarXout BTT_SIDE_RANGE_INVALID;
[10] MAINPROCESS ??? else 
[11] MAINPROCESS subproc SUBPROCESS(3) 
[12] SUBPROCESS(3) ??? if( st_aaz_params.TWidth_AAZ <= BTT_SV_WIDTH ) 
[13] SUBPROCESS(3) subproc SUBSUBPROCESS(1) 
[14] SUBPROCESS(3) ??? else 
[15] SUBPROCESS(3) subproc SUBSUBPROCESS(2) 
[16] MAINPROCESS proc return; 
----------------- Total Codes : 16 lines
--------------------------
[Function Name] : fn_btt_atd_activate 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.ATD == BTT_RET_t.Func_Stat.ENABLE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) equal st_g_btt_stat.ATD BTT_RET_t.Func_Stat.ACTIVE;
[4] MAINPROCESS proc return; 
[5] MAINPROCESS equal st_g_btt_stat.ATD BTT_RET_t.Func_Stat.ACTIVE;
----------------- Total Codes : 5 lines
--------------------------
[Function Name] : fn_btt_atd_initialize 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS equal st_atd_params.timer 0;
[2] MAINPROCESS equal st_g_btt_result.TFlag BTT_RET_t.TFlag.UNKNOWN;
[3] MAINPROCESS ??? fn_init(st_atd_params.trailer_object, TRAILER_BUFFSIZE 
[4] MAINPROCESS func ); 
[5] MAINPROCESS equal st_atd_params.atd_counter[0] 0;
[6] MAINPROCESS equal st_atd_params.atd_counter[1] 0;
[7] MAINPROCESS ??? fn_init_btt( 
[8] MAINPROCESS ??? st_atd_params.trailer_object_total[BTT_OBJ_HISTORY_CYCLE][TRAILER_BUFFSIZE], 
[9] MAINPROCESS ??? st_atd_params.trailer_object_num_total[BTT_OBJ_HISTORY_CYCLE], 
[10] MAINPROCESS ??? TRAILER_BUFFSIZE, 
[11] MAINPROCESS ??? BTT_OBJ_HISTORY_CYCLE 
[12] MAINPROCESS func ); 
[13] MAINPROCESS equal st_atd_params.trailer_object_num 0;
[14] MAINPROCESS proc return; 
----------------- Total Codes : 14 lines
--------------------------
[Function Name] : fn_btt_atd_deactivate 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.ATD == BTT_RET_t.Func_Stat.ACTIVE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) equal st_g_btt_stat.ATD BTT_RET_t.Func_Stat.DEACTIVE;
[4] MAINPROCESS proc return; 
[5] MAINPROCESS equal st_g_btt_stat.ATD BTT_RET_t.Func_Stat.DEACTIVE;
----------------- Total Codes : 5 lines
--------------------------
[Function Name] : fn_btt_tle_activate 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.TLE == BTT_RET_t.Func_Stat.ENABLE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) equal st_g_btt_stat.TLE BTT_RET_t.Func_Stat.ACTIVE;
[4] MAINPROCESS proc return; 
[5] MAINPROCESS equal st_g_btt_stat.TLE BTT_RET_t.Func_Stat.ACTIVE;
----------------- Total Codes : 5 lines
--------------------------
[Function Name] : fn_btt_tle_initialize 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS equal st_tle_params.timer 0;
[2] MAINPROCESS ??? fn_btt_set_trailer_length( BTT_TRAILER_SIZE_UNKNOWN 
[3] MAINPROCESS func ); 
[4] MAINPROCESS proc return; 
----------------- Total Codes : 4 lines
--------------------------
[Function Name] : fn_btt_tle_deactivate 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.TLE == BTT_RET_t.Func_Stat.ACTIVE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) equal st_g_btt_stat.TLE BTT_RET_t.Func_Stat.DEACTIVE;
[4] MAINPROCESS proc return; 
[5] MAINPROCESS equal st_g_btt_stat.TLE BTT_RET_t.Func_Stat.DEACTIVE;
----------------- Total Codes : 5 lines
--------------------------
[Function Name] : fn_btt_twe_activate 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.TWE == BTT_RET_t.Func_Stat.ENABLE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) equal st_g_btt_stat.TWE BTT_RET_t.Func_Stat.ACTIVE;
[4] MAINPROCESS proc return; 
[5] MAINPROCESS equal st_g_btt_stat.TWE BTT_RET_t.Func_Stat.ACTIVE;
----------------- Total Codes : 5 lines
--------------------------
[Function Name] : fn_btt_twe_initialize 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS equal st_twe_params.timer 0;
[2] MAINPROCESS ??? fn_btt_set_trailer_width( BTT_TRAILER_SIZE_UNKNOWN 
[3] MAINPROCESS func ); 
[4] MAINPROCESS proc return; 
----------------- Total Codes : 4 lines
--------------------------
[Function Name] : fn_btt_twe_deactivate 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.TWE == BTT_RET_t.Func_Stat.ACTIVE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) equal st_g_btt_stat.TWE BTT_RET_t.Func_Stat.DEACTIVE;
[4] MAINPROCESS proc return; 
[5] MAINPROCESS equal st_g_btt_stat.TWE BTT_RET_t.Func_Stat.DEACTIVE;
----------------- Total Codes : 5 lines
--------------------------
[Function Name] : fn_btt_ttm_activate 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.TTM == BTT_RET_t.Func_Stat.ENABLE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) equal st_g_btt_stat.TTM BTT_RET_t.Func_Stat.ACTIVE;
[4] MAINPROCESS proc return; 
[5] MAINPROCESS equal st_g_btt_stat.TTM BTT_RET_t.Func_Stat.ACTIVE;
----------------- Total Codes : 5 lines
--------------------------
[Function Name] : fn_btt_ttm_deactivate 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.TTM == BTT_RET_t.Func_Stat.ACTIVE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) equal st_g_btt_stat.TTM BTT_RET_t.Func_Stat.DEACTIVE;
[4] MAINPROCESS proc return; 
[5] MAINPROCESS equal st_g_btt_stat.TTM BTT_RET_t.Func_Stat.DEACTIVE;
----------------- Total Codes : 5 lines
--------------------------
[Function Name] : fn_btt_aaz_activate 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.AAZ == BTT_RET_t.Func_Stat.ENABLE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) equal st_g_btt_stat.AAZ BTT_RET_t.Func_Stat.ACTIVE;
[4] SUBPROCESS(1) equal st_aaz_params.First BTT_RET_t.Bool.TRUE;
[5] SUBPROCESS(1) equal st_aaz_params.TLength_AAZ BTT_TRAILER_SIZE_UNKNOWN;
[6] SUBPROCESS(1) equal st_aaz_params.TWidth_AAZ BTT_TRAILER_SIZE_UNKNOWN;
[7] MAINPROCESS proc return; 
[8] MAINPROCESS equal st_g_btt_stat.AAZ BTT_RET_t.Func_Stat.ACTIVE;
[9] MAINPROCESS equal st_aaz_params.First BTT_RET_t.Bool.TRUE;
[10] MAINPROCESS equal st_aaz_params.TLength_AAZ BTT_TRAILER_SIZE_UNKNOWN;
[11] MAINPROCESS equal st_aaz_params.TWidth_AAZ BTT_TRAILER_SIZE_UNKNOWN;
----------------- Total Codes : 11 lines
--------------------------
[Function Name] : fn_btt_aaz_initialize 
-Return type : VD 
-Argument : 2 
     [0] : FL   fl_a_trailer_length 
     [1] : FL   fl_a_trailer_width 
----- Codes -----
[1] MAINPROCESS ??? if( st_aaz_params.First == BTT_RET_t.Bool.FALSE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) proc return; 
[4] MAINPROCESS equal st_aaz_params.VarY BTT_REAR_RANGE_LONG;
[5] MAINPROCESS equal st_aaz_params.First BTT_RET_t.Bool.FALSE;
[6] MAINPROCESS equal st_aaz_params.TLength_AAZ fl_a_trailer_length;
[7] MAINPROCESS equal st_aaz_params.TWidth_AAZ fl_a_trailer_width;
[8] MAINPROCESS proc return; 
[9] MAINPROCESS proc return; 
----------------- Total Codes : 9 lines
--------------------------
[Function Name] : fn_btt_aaz_deactivate 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.AAZ == BTT_RET_t.Func_Stat.ACTIVE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) equal st_g_btt_stat.AAZ BTT_RET_t.Func_Stat.DEACTIVE;
[4] MAINPROCESS proc return; 
[5] MAINPROCESS equal st_g_btt_stat.AAZ BTT_RET_t.Func_Stat.DEACTIVE;
----------------- Total Codes : 5 lines
--------------------------
[Function Name] : fn_btt_main 
-Return type : VD 
-Argument : 18 
     [0] : FL   fl_a_self_v 
     [1] : S4   s4_a_curve_r 
     [2] : S1   s1_a_shift_flg 
     [3] : NORMAL_BSM   *pst_a_object 
     [4] : S4   s4_a_object_size 
     [5] : FL   fl_a_doa_pow_ave[2][3] 
     [6] : FL   fl_a_doa_pow_dev[2][3] 
     [7] : S4   s4_a_doa_bf_peak_bin 
     [8] : FL   fl_a_doa_bf_peak_pow 
     [9] : BTT_STAT   *pst_a_btt_stat 
     [10] : U1   *pu1_alarm_flg 
     [11] : BTT_CLUSTER_INFO   *pst_a_cluster_info 
     [12] : BTT_AUX_TRAILER_INFO   *pst_a_aux_trailer_info 
     [13] : BTT_HITCH_ANGLE   *pst_a_hitch_angle 
     [14] : NORMAL_BSM   *pst_a_target 
     [15] : S4   s4_a_target_size 
     [16] : BTT_RESULT   *pst_a_btt_result 
     [17] : BTT_ALERTAREA*   pst_a_btt_alertarea 
----- Codes -----
[1] MAINPROCESS equal FL fl_t_length BTT_TRAILER_SIZE_UNKNOWN;
[2] MAINPROCESS equal FL fl_t_width BTT_TRAILER_SIZE_UNKNOWN;
[3] MAINPROCESS ??? fn_check_front_trailer_line( 
[4] MAINPROCESS func ); 
[5] MAINPROCESS ??? fn_btt_sel_exclude_object( 
[6] MAINPROCESS ??? pst_a_object, 
[7] MAINPROCESS ??? &s4_a_object_size 
[8] MAINPROCESS func ); 
[9] MAINPROCESS ??? fn_btt_shift_trailerobj( 
[10] MAINPROCESS ??? pst_a_object, 
[11] MAINPROCESS ??? s4_a_object_size 
[12] MAINPROCESS func ); 
[13] MAINPROCESS ??? fn_btt_atd_main( 
[14] MAINPROCESS ??? fl_a_self_v, 
[15] MAINPROCESS ??? s4_a_curve_r, 
[16] MAINPROCESS ??? s1_a_shift_flg, 
[17] MAINPROCESS ??? pst_a_object, 
[18] MAINPROCESS ??? s4_a_object_size, 
[19] MAINPROCESS ??? fl_a_doa_pow_ave, 
[20] MAINPROCESS ??? fl_a_doa_pow_dev, 
[21] MAINPROCESS ??? s4_a_doa_bf_peak_bin, 
[22] MAINPROCESS ??? fl_a_doa_bf_peak_pow, 
[23] MAINPROCESS ??? pst_a_cluster_info, 
[24] MAINPROCESS ??? pst_a_aux_trailer_info, 
[25] MAINPROCESS ??? pst_a_btt_result 
[26] MAINPROCESS func ); 
[27] MAINPROCESS equal au1_g_btt_atd_tflag pst_a_btt_result->TFlag;
[28] MAINPROCESS ??? if( pst_a_btt_stat->ATD == BTT_RET_t.Func_Stat.DEACTIVE ) 
[29] MAINPROCESS subproc SUBPROCESS(1) 
[30] SUBPROCESS(1) ??? fn_btt_set_btt_drv_state( 
[31] SUBPROCESS(1) ??? *pst_a_btt_stat, 
[32] SUBPROCESS(1) ??? *pst_a_btt_result 
[33] SUBPROCESS(1) func ); 
[34] SUBPROCESS(1) ??? if( pst_a_btt_stat->BTT_drv == BTT_RET_t.Drv_Stat.CONNECT ) 
[35] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[36] SUBPROCESS(1) ??? if( pst_a_btt_result->TFlag ==  BTT_RET_t.TFlag.CONNECT ) 
[37] SUBPROCESS(1) subproc SUBSUBPROCESS(2) 
[38] MAINPROCESS ??? else 
[39] MAINPROCESS subproc SUBPROCESS(2) 
[40] SUBPROCESS(2) ??? fn_btt_tle_initialize( 
[41] SUBPROCESS(2) func ); 
[42] SUBPROCESS(2) ??? fn_btt_twe_initialize( 
[43] SUBPROCESS(2) func ); 
[44] MAINPROCESS ??? fn_btt_set_btt_drv_state( 
[45] MAINPROCESS ??? *pst_a_btt_stat, 
[46] MAINPROCESS ??? *pst_a_btt_result 
[47] MAINPROCESS func ); 
[48] MAINPROCESS equal as4_g_btt_atd_timer[0] st_atd_params.timer;
[49] MAINPROCESS equal as4_g_btt_atd_timer[1] st_tle_params.timer;
[50] MAINPROCESS equal as4_g_btt_atd_timer[2] st_twe_params.timer;
[51] MAINPROCESS proc return; 
[52] MAINPROCESS ??? fn_btt_tle_initialize( 
[53] MAINPROCESS func ); 
[54] MAINPROCESS ??? fn_btt_twe_initialize( 
[55] MAINPROCESS func ); 
----------------- Total Codes : 55 lines
--------------------------
[Function Name] : fn_btt_atd_main 
-Return type : VD 
-Argument : 12 
     [0] : FL   fl_a_self_v 
     [1] : S4   s4_a_curve_r 
     [2] : S1   s1_a_shift_flg 
     [3] : NORMAL_BSM   *pst_a_object 
     [4] : S4   s4_a_object_size 
     [5] : FL   fl_a_doa_pow_ave[2][3] 
     [6] : FL   fl_a_doa_pow_dev[2][3] 
     [7] : S4   s4_a_doa_bf_peak_bin 
     [8] : FL   fl_a_doa_bf_peak_pow 
     [9] : BTT_CLUSTER_INFO   *pst_a_cluster_info 
     [10] : BTT_AUX_TRAILER_INFO   *pst_a_aux_trailer_info 
     [11] : BTT_RESULT*   pst_a_btt_result 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.ATD != BTT_RET_t.Func_Stat.ACTIVE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) proc return; 
[4] MAINPROCESS ??? if( s1_a_shift_flg != (S1) 0 ) 
[5] MAINPROCESS subproc SUBPROCESS(2) 
[6] SUBPROCESS(2) ??? if( fl_a_self_v > BTT_ACTIVE_SPEED_TH ) 
[7] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[8] SUBPROCESS(2) ??? else 
[9] SUBPROCESS(2) subproc SUBSUBPROCESS(2) 
[10] MAINPROCESS ??? else 
[11] MAINPROCESS subproc SUBPROCESS(3) 
[12] SUBPROCESS(3) ??? fn_btt_atd_initialize( 
[13] SUBPROCESS(3) func ); 
[14] MAINPROCESS proc return; 
[15] MAINPROCESS ??? fn_btt_atd_initialize( 
[16] MAINPROCESS func ); 
----------------- Total Codes : 16 lines
--------------------------
[Function Name] : fn_btt_tle_main 
-Return type : FL 
-Argument : 7 
     [0] : FL   fl_a_self_v 
     [1] : S4   s4_a_curve_r 
     [2] : NORMAL_BSM   *pst_a_object 
     [3] : S4   s4_a_object_size 
     [4] : BTT_CLUSTER_INFO   *pst_a_cluster_info 
     [5] : BTT_AUX_TRAILER_INFO   *pst_a_aux_trailer_info 
     [6] : BTT_STAT   *pst_a_btt_stat 
----- Codes -----
[1] MAINPROCESS equal FL fl_t_length BTT_TRAILER_SIZE_UNKNOWN;
[2] MAINPROCESS proc S4 s4_t_lp_i; 
[3] MAINPROCESS proc FL fl_a_tle_bf_peak[BTT_TLE_RANGE]; 
[4] MAINPROCESS equal for(s4_t_lp_i 0;
[5] MAINPROCESS proc s4_t_lp_i < BTT_TLE_RANGE; 
[6] MAINPROCESS ??? s4_t_lp_i++ 
[7] MAINPROCESS func ); 
[8] MAINPROCESS subproc SUBPROCESS(1) 
[9] MAINPROCESS equal for(s4_t_lp_i 0;
[10] MAINPROCESS ??? s4_t_lp_i++ 
[11] MAINPROCESS func ); 
[12] MAINPROCESS subproc SUBPROCESS(2) 
[13] MAINPROCESS ??? if( st_g_btt_stat.TLE != BTT_RET_t.Func_Stat.ACTIVE ) 
[14] MAINPROCESS subproc SUBPROCESS(3) 
[15] SUBPROCESS(3) ??? if( st_g_btt_result.TLength != BTT_TRAILER_SIZE_UNKNOWN ) 
[16] SUBPROCESS(3) subproc SUBSUBPROCESS(1) 
[17] SUBPROCESS(3) subproc SUBSUBPROCESS(2) 
[18] MAINPROCESS ??? fn_btt_tle_search_peak_bf( 
[19] MAINPROCESS ??? (const FL (*)[CORRE_SIZE_4CH])(afl_g_cvw_lfm_ryy_matrix[0]), 
[20] MAINPROCESS ??? fl_a_tle_bf_peak 
[21] MAINPROCESS func ); 
[22] MAINPROCESS ??? fn_btt_tle_calc_bf_power_diff( 
[23] MAINPROCESS ??? fl_a_tle_bf_peak, 
[24] MAINPROCESS ??? fl_a_tle_bf_pow_diff 
[25] MAINPROCESS func ); 
[26] MAINPROCESS equal for (s4_t_lp_i 0;
[27] MAINPROCESS proc s4_t_lp_i < 30; 
[28] MAINPROCESS ??? s4_t_lp_i++ 
[29] MAINPROCESS func ); 
[30] MAINPROCESS subproc SUBPROCESS(4) 
[31] SUBPROCESS(4) ??? fn_bsm_cal_trailer_range_doa_ave( 
[32] SUBPROCESS(4) ??? 0, 
[33] SUBPROCESS(4) ??? (const FL (*)[CORRE_SIZE_4CH])(afl_g_cvw_lfm_ryy_matrix[0]), 
[34] SUBPROCESS(4) ??? (256+s4_t_lp_i), 
[35] SUBPROCESS(4) ??? &afl_a_doa_pow_ave[s4_t_lp_i], 
[36] SUBPROCESS(4) ??? &afl_a_doa_pow_dev[s4_t_lp_i] 
[37] SUBPROCESS(4) func ); 
[38] MAINPROCESS ??? if( st_tle_params.timer < BTT_TLE_MAX_TIME) 
[39] MAINPROCESS subproc SUBPROCESS(5) 
[40] SUBPROCESS(5) ??? fl_t_length = fn_btt_tle_estimate_trailer_length( 
[41] SUBPROCESS(5) func ); 
[42] MAINPROCESS ??? else 
[43] MAINPROCESS subproc SUBPROCESS(6) 
[44] SUBPROCESS(6) ??? fn_btt_tle_deactivate( 
[45] SUBPROCESS(6) func ); 
[46] MAINPROCESS proc st_tle_params.timer++; 
[47] MAINPROCESS proc return fl_t_length; 
[48] MAINPROCESS ??? fn_btt_tle_deactivate( 
[49] MAINPROCESS func ); 
----------------- Total Codes : 49 lines
--------------------------
[Function Name] : fn_btt_twe_main 
-Return type : FL 
-Argument : 8 
     [0] : FL   fl_a_self_v 
     [1] : S4   s4_a_curve_r 
     [2] : NORMAL_BSM   *pst_a_object 
     [3] : S4   s4_a_object_size 
     [4] : BTT_CLUSTER_INFO   *pst_a_cluster_info 
     [5] : BTT_AUX_TRAILER_INFO   *pst_a_aux_trailer_info 
     [6] : BTT_HITCH_ANGLE   *pst_a_hitch_angle 
     [7] : BTT_STAT   *pst_a_btt_stat 
----- Codes -----
[1] MAINPROCESS equal FL fl_t_width BTT_TRAILER_SIZE_UNKNOWN;
[2] MAINPROCESS ??? if( st_g_btt_stat.TWE != BTT_RET_t.Func_Stat.ACTIVE ) 
[3] MAINPROCESS subproc SUBPROCESS(1) 
[4] SUBPROCESS(1) proc return fl_t_width; 
[5] MAINPROCESS ??? if( st_twe_params.timer < BTT_TWE_MAX_TIME) 
[6] MAINPROCESS subproc SUBPROCESS(2) 
[7] SUBPROCESS(2) ??? fl_t_width = fn_btt_twe_estimate_trailer_width( 
[8] SUBPROCESS(2) ??? s4_a_curve_r, 
[9] SUBPROCESS(2) ??? pst_a_object, 
[10] SUBPROCESS(2) ??? s4_a_object_size 
[11] SUBPROCESS(2) func ); 
[12] MAINPROCESS ??? else 
[13] MAINPROCESS subproc SUBPROCESS(3) 
[14] SUBPROCESS(3) ??? fn_btt_twe_deactivate( 
[15] SUBPROCESS(3) func ); 
[16] MAINPROCESS proc st_twe_params.timer++; 
[17] MAINPROCESS proc return fl_t_width; 
[18] MAINPROCESS ??? fn_btt_twe_deactivate( 
[19] MAINPROCESS func ); 
----------------- Total Codes : 19 lines
--------------------------
[Function Name] : fn_btt_aaz_main 
-Return type : VD 
-Argument : 9 
     [0] : FL   fl_a_self_v 
     [1] : S4   s4_a_curve_r 
     [2] : BTT_ALERTAREA   *st_a_btt_alertarea 
     [3] : U1   *pu1_alarm_flg 
     [4] : BTT_RESULT*   pst_a_btt_result 
     [5] : BTT_STAT   *pst_a_btt_stat 
     [6] : NORMAL_BSM   *pst_a_target 
     [7] : S4   s4_a_target_size 
     [8] : BTT_HITCH_ANGLE   *pst_a_hitch_angle 
----- Codes -----
[1] MAINPROCESS ??? if( st_g_btt_stat.AAZ != BTT_RET_t.Func_Stat.ACTIVE ) 
[2] MAINPROCESS subproc SUBPROCESS(1) 
[3] SUBPROCESS(1) proc return; 
[4] MAINPROCESS ??? if( st_aaz_params.First == BTT_RET_t.Bool.TRUE ) 
[5] MAINPROCESS subproc SUBPROCESS(2) 
[6] SUBPROCESS(2) proc return; 
[7] MAINPROCESS ??? if( pst_a_btt_result->TLength_stat == BTT_RET_t.TSize_Stat.UNKNOWN ) 
[8] MAINPROCESS subproc SUBPROCESS(3) 
[9] SUBPROCESS(3) proc st_aaz_params.TLength_unknown_count++; 
[10] SUBPROCESS(3) ??? if( st_aaz_params.TLength_unknown_count > BTT_AAZ_TH_OFF ) 
[11] SUBPROCESS(3) subproc SUBSUBPROCESS(1) 
[12] SUBPROCESS(3) ??? else 
[13] SUBPROCESS(3) subproc SUBSUBPROCESS(2) 
[14] MAINPROCESS ??? else if( pst_a_btt_result->TLength_stat == BTT_RET_t.TSize_Stat.VALID ) 
[15] MAINPROCESS subproc SUBPROCESS(4) 
[16] SUBPROCESS(4) ??? if( *pu1_alarm_flg == BTT_RET_t.Bool.TRUE ) 
[17] SUBPROCESS(4) subproc SUBSUBPROCESS(1) 
[18] SUBPROCESS(4) ??? else 
[19] SUBPROCESS(4) subproc SUBSUBPROCESS(2) 
[20] MAINPROCESS ??? else if( pst_a_btt_result->TLength_stat == BTT_RET_t.TSize_Stat.INVALID ) 
[21] MAINPROCESS subproc SUBPROCESS(5) 
[22] SUBPROCESS(5) proc st_aaz_params.TLength_invalid_count++; 
[23] SUBPROCESS(5) ??? if( st_aaz_params.TLength_invalid_count > BTT_AAZ_TH_OFF ) 
[24] SUBPROCESS(5) subproc SUBSUBPROCESS(1) 
[25] SUBPROCESS(5) subproc SUBSUBPROCESS(2) 
[26] MAINPROCESS ??? else 
[27] MAINPROCESS subproc SUBPROCESS(6) 
[28] MAINPROCESS ??? if( pst_a_btt_result->TWidth_stat == BTT_RET_t.TSize_Stat.UNKNOWN ) 
[29] MAINPROCESS subproc SUBPROCESS(7) 
[30] SUBPROCESS(7) proc st_aaz_params.TWidth_unknown_count++; 
[31] SUBPROCESS(7) ??? if( st_aaz_params.TWidth_unknown_count > BTT_AAZ_TH_OFF ) 
[32] SUBPROCESS(7) subproc SUBSUBPROCESS(1) 
[33] SUBPROCESS(7) ??? else 
[34] SUBPROCESS(7) subproc SUBSUBPROCESS(2) 
[35] MAINPROCESS ??? else if( pst_a_btt_result->TWidth_stat == BTT_RET_t.TSize_Stat.VALID ) 
[36] MAINPROCESS subproc SUBPROCESS(8) 
[37] SUBPROCESS(8) ??? if( *pu1_alarm_flg == BTT_RET_t.Bool.TRUE ) 
[38] SUBPROCESS(8) subproc SUBSUBPROCESS(1) 
[39] SUBPROCESS(8) ??? else 
[40] SUBPROCESS(8) subproc SUBSUBPROCESS(2) 
[41] MAINPROCESS ??? else if( pst_a_btt_result->TWidth_stat == BTT_RET_t.TSize_Stat.INVALID ) 
[42] MAINPROCESS subproc SUBPROCESS(9) 
[43] SUBPROCESS(9) proc st_aaz_params.TWidth_invalid_count++; 
[44] SUBPROCESS(9) ??? if( st_aaz_params.TWidth_invalid_count > BTT_AAZ_TH_OFF ) 
[45] SUBPROCESS(9) subproc SUBSUBPROCESS(1) 
[46] SUBPROCESS(9) subproc SUBSUBPROCESS(2) 
[47] MAINPROCESS ??? else 
[48] MAINPROCESS subproc SUBPROCESS(10) 
[49] MAINPROCESS proc return; 
----------------- Total Codes : 49 lines
--------------------------
[Function Name] : fn_btt_atd_detect_trailer 
-Return type : U1 
-Argument : 10 
     [0] : FL   fl_a_self_v 
     [1] : S4   s4_a_curve_r 
     [2] : NORMAL_BSM   *pst_a_object 
     [3] : S4   s4_a_object_size 
     [4] : FL   fl_a_doa_pow_ave[2][3] 
     [5] : FL   fl_a_doa_pow_dev[2][3] 
     [6] : S4   s4_a_doa_bf_peak_bin 
     [7] : FL   fl_a_doa_bf_peak_pow 
     [8] : BTT_CLUSTER_INFO   *pst_a_cluster_info 
     [9] : BTT_AUX_TRAILER_INFO   *pst_a_aux_trailer_info 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i; 
[2] MAINPROCESS equal U1 u1_t_btt_trailer_flg BTT_RET_t.TFlag.UNKNOWN;
[3] MAINPROCESS ??? fn_btt_atd_trailerobj_tracking( 
[4] MAINPROCESS ??? pst_a_object, 
[5] MAINPROCESS ??? s4_a_object_size 
[6] MAINPROCESS ??? ,fl_a_doa_pow_ave 
[7] MAINPROCESS ??? ,fl_a_doa_pow_dev 
[8] MAINPROCESS ??? ,s4_a_doa_bf_peak_bin 
[9] MAINPROCESS ??? ,fl_a_doa_bf_peak_pow 
[10] MAINPROCESS func ); 
[11] MAINPROCESS ??? if( st_atd_params.atd_counter[0] > BTT_ATD_CONNECT_TH ) 
[12] MAINPROCESS subproc SUBPROCESS(1) 
[13] SUBPROCESS(1) equal u1_t_btt_trailer_flg BTT_RET_t.TFlag.CONNECT;
[14] MAINPROCESS ??? if( (st_atd_params.atd_counter[1] > BTT_ATD_NOTCONNECT_TH) 
[15] MAINPROCESS ??? &&  (st_atd_params.atd_counter[1] - st_atd_params.atd_counter[0] > BTT_ATD_CNT_DIFF) ) 
[16] MAINPROCESS subproc SUBPROCESS(2) 
[17] SUBPROCESS(2) equal u1_t_btt_trailer_flg BTT_RET_t.TFlag.NOTCONNECT;
[18] SUBPROCESS(2) equal for(s4_t_lp_i 0;
[19] SUBPROCESS(2) proc s4_t_lp_i<6; 
[20] SUBPROCESS(2) ??? s4_t_lp_i++ 
[21] SUBPROCESS(2) func ); 
[22] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[23] MAINPROCESS proc return u1_t_btt_trailer_flg; 
----------------- Total Codes : 23 lines
--------------------------
[Function Name] : fn_btt_tle_estimate_trailer_length 
-Return type : FL 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS equal FL fl_t_length BTT_TRAILER_SIZE_UNKNOWN;
[2] MAINPROCESS proc return fl_t_length; 
----------------- Total Codes : 2 lines
--------------------------
[Function Name] : fn_btt_twe_estimate_trailer_width 
-Return type : FL 
-Argument : 3 
     [0] : S4   s4_a_curve_r 
     [1] : NORMAL_BSM   *pst_a_object 
     [2] : S4   s4_a_object_size 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i; 
[2] MAINPROCESS proc S4 s4_t_cycle; 
[3] MAINPROCESS proc FL fl_t_width; 
[4] MAINPROCESS equal for(s4_t_lp_i 0;
[5] MAINPROCESS proc s4_t_lp_i < BTT_OBJ_HISTORY_CYCLE; 
[6] MAINPROCESS ??? s4_t_lp_i++ 
[7] MAINPROCESS func ); 
[8] MAINPROCESS subproc SUBPROCESS(1) 
[9] SUBPROCESS(1) ??? if( st_atd_params.trailer_object_total[s4_t_lp_i][0].fl_Rxobs != CFL_UNKNOWN_VALUE 
[10] SUBPROCESS(1) ??? &&  st_atd_params.trailer_object_total[s4_t_lp_i][0].fl_Ryobs < (FL)-0.5 
[11] SUBPROCESS(1) ??? &&  st_atd_params.trailer_object_total[s4_t_lp_i][0].fl_Ryobs > (FL)-2.0 ) 
[12] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[13] MAINPROCESS ??? if(s4_t_cycle != (S4)0) 
[14] MAINPROCESS subproc SUBPROCESS(2) 
[15] MAINPROCESS subproc SUBPROCESS(3) 
[16] SUBPROCESS(3) equal fl_t_width BTT_TRAILER_SIZE_UNKNOWN;
[17] MAINPROCESS proc return fl_t_width; 
[18] MAINPROCESS equal fl_t_width BTT_TRAILER_SIZE_UNKNOWN;
----------------- Total Codes : 18 lines
--------------------------
[Function Name] : fn_check_front_trailer_line 
-Return type : VD 
-Argument : 0 
----- Codes -----
[1] MAINPROCESS proc S4 i,j; 
[2] MAINPROCESS proc FL pfl_a_trailerline_pow_dn; 
[3] MAINPROCESS proc S4 as4_a_trailerline_doa_dn[LINE_FREQ_BIN_RANGE][1]; 
[4] MAINPROCESS proc S4 as4_a_trailerline_doa_peak_num_dn[LINE_FREQ_BIN_RANGE]; 
[5] MAINPROCESS proc FL afl_a_trailerline_dn[LINE_FREQ_BIN_RANGE][2]; 
[6] MAINPROCESS equal S4 trailerline_start_bin FREQ_BIN_LOWER_LIMIT_T;
[7] MAINPROCESS equal for(i 0;
[8] MAINPROCESS proc i<LINE_FREQ_BIN_RANGE; 
[9] MAINPROCESS ??? i++ 
[10] MAINPROCESS func ); 
[11] MAINPROCESS subproc SUBPROCESS(1) 
[12] SUBPROCESS(1) equal for(j 0;
[13] SUBPROCESS(1) proc j<2; 
[14] SUBPROCESS(1) ??? j++ 
[15] SUBPROCESS(1) func ); 
[16] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[17] MAINPROCESS ??? pfl_a_trailerline_pow_dn = calc_line_doa_fm( 
[18] MAINPROCESS ??? (const FL (*)[CORRE_SIZE_4CH])(afl_g_cvw_lfm_ryy_matrix[1]), 
[19] MAINPROCESS ??? afl_g_cvw_lfm_ftt_power[1], 
[20] MAINPROCESS ??? trailerline_start_bin, 
[21] MAINPROCESS ??? trailerline_start_bin + LINE_FREQ_BIN_RANGE, 
[22] MAINPROCESS ??? (FL)0.0F, 
[23] MAINPROCESS ??? as4_a_trailerline_doa_dn, 
[24] MAINPROCESS ??? as4_a_trailerline_doa_peak_num_dn, 
[25] MAINPROCESS ??? CU2_LFM_MOD_DN 
[26] MAINPROCESS func ); 
[27] MAINPROCESS ??? fn_btt_atd_check_detect_trailerobjs( 
[28] MAINPROCESS ??? trailerline_start_bin, 
[29] MAINPROCESS ??? (const S4 (*)[1])as4_a_trailerline_doa_dn, 
[30] MAINPROCESS ??? as4_a_trailerline_doa_peak_num_dn, 
[31] MAINPROCESS ??? afl_a_trailerline_dn 
[32] MAINPROCESS func ); 
[33] MAINPROCESS equal for(i 0;
[34] MAINPROCESS proc i<LINE_FREQ_BIN_RANGE; 
[35] MAINPROCESS ??? i++ 
[36] MAINPROCESS func ); 
[37] MAINPROCESS subproc SUBPROCESS(2) 
[38] SUBPROCESS(2) equal for(j 0;
[39] SUBPROCESS(2) proc j<2; 
[40] SUBPROCESS(2) ??? j++ 
[41] SUBPROCESS(2) func ); 
[42] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[43] MAINPROCESS proc return; 
[44] SUBSUBPROCESS(1) equal afl_g_btt_nearfield_line_dn[i][j] afl_a_trailerline_dn[i][j];
----------------- Total Codes : 44 lines
--------------------------
[Function Name] : fn_btt_atd_check_detect_trailerobjs 
-Return type : VD 
-Argument : 4 
     [0] : const S4   as4_a_trailerline_start_bin 
     [1] : const S4   as4_a_trailerline_doa_dn[LINE_FREQ_BIN_RANGE][1] 
     [2] : const S4   as4_a_trailerline_doa_peak_num_dn[LINE_FREQ_BIN_RANGE] 
     [3] : FL   afl_a_trailerline_dn[LINE_FREQ_BIN_RANGE][2] 
----- Codes -----
[1] MAINPROCESS proc S4 i; 
[2] MAINPROCESS proc S4 j; 
[3] MAINPROCESS equal FL tmp_r 0.0F;
[4] MAINPROCESS equal FL tmp_rx CFL_UNKNOWN_VALUE;
[5] MAINPROCESS equal FL tmp_ry CFL_UNKNOWN_VALUE;
[6] MAINPROCESS equal FL tmp_theta 0.0F;
[7] MAINPROCESS equal for(i 0;
[8] MAINPROCESS proc i<LINE_FREQ_BIN_RANGE; 
[9] MAINPROCESS ??? i++ 
[10] MAINPROCESS func ); 
[11] MAINPROCESS subproc SUBPROCESS(1) 
[12] SUBPROCESS(1) equal for(j 0;
[13] SUBPROCESS(1) proc j<as4_a_trailerline_doa_peak_num_dn[i]; 
[14] SUBPROCESS(1) ??? j++ 
[15] SUBPROCESS(1) func ); 
[16] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[17] MAINPROCESS proc return; 
[18] SUBSUBPROCESS(1) ??? tmp_r = - RCOF * 2.0F * (FL)((as4_a_trailerline_start_bin + i) - (FL)NB_FFT_PT * 0.5F 
[19] SUBSUBPROCESS(1) func ); 
[20] SUBSUBPROCESS(1) ??? tmp_theta = fl_transform_doabin_to_rad( 
[21] SUBSUBPROCESS(1) ??? as4_a_trailerline_doa_dn[i][j], 
[22] SUBSUBPROCESS(1) ??? 1 
[23] SUBSUBPROCESS(1) func ); 
[24] SUBSUBPROCESS(1) ??? tmp_ry = tmp_r * fl_cos( tmp_theta 
[25] SUBSUBPROCESS(1) func ); 
[26] SUBSUBPROCESS(1) equal afl_a_trailerline_dn[i][0] tmp_rx;
[27] SUBSUBPROCESS(1) equal afl_a_trailerline_dn[i][1] tmp_ry;
----------------- Total Codes : 27 lines
--------------------------
[Function Name] : fn_btt_atd_trailerobj_tracking 
-Return type : VD 
-Argument : 2 
     [0] : NORMAL_BSM   pst_a_trailer_obj[TRAILER_BUFFSIZE] 
     [1] : S4   as4_a_trailer_obj_num 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i, s4_t_lp_j; 
[2] MAINPROCESS ??? if( s4_abs(s2_g_curvr_for_base) > (S2)80 ) 
[3] MAINPROCESS subproc SUBPROCESS(1) 
[4] MAINPROCESS ??? else if( s4_abs(s2_g_curvr_for_base) > (S2)40 ) 
[5] MAINPROCESS subproc SUBPROCESS(2) 
[6] MAINPROCESS ??? else 
[7] MAINPROCESS subproc SUBPROCESS(3) 
[8] SUBPROCESS(3) ??? if( s2_g_curvr_for_base < 0 ) 
[9] SUBPROCESS(3) subproc SUBSUBPROCESS(1) 
[10] SUBPROCESS(3) subproc SUBSUBPROCESS(2) 
[11] MAINPROCESS equal for( s4_t_lp_i 0;
[12] MAINPROCESS proc s4_t_lp_i < BTT_OBJ_HISTORY_CYCLE; 
[13] MAINPROCESS ??? s4_t_lp_i++ 
[14] MAINPROCESS func ); 
[15] MAINPROCESS subproc SUBPROCESS(4) 
[16] SUBPROCESS(4) equal as4_a_tmp_trailer_obj_num st_atd_params.trailer_object_num_total[s4_t_lp_i];
[17] SUBPROCESS(4) ??? if( as4_a_tmp_trailer_obj_num != (S4)0 ) 
[18] SUBPROCESS(4) subproc SUBSUBPROCESS(1) 
[19] MAINPROCESS ??? if( as4_a_trk_num2 != (S4)0) 
[20] MAINPROCESS subproc SUBPROCESS(5) 
[21] SUBPROCESS(5) ??? afl_a_trailer_obj_rx_dev = fl_abs((afl_a_trailer_obj_rx_dev / (FL)as4_a_trk_num2) - afl_a_trailer_obj_rx_ave * afl_a_trailer_obj_rx_ave 
[22] SUBPROCESS(5) func ); 
[23] SUBPROCESS(5) ??? afl_a_trailer_obj_vy_dev = fl_abs((afl_a_trailer_obj_vy_dev / (FL)as4_a_trk_num2) - afl_a_trailer_obj_vy_ave * afl_a_trailer_obj_vy_ave 
[24] SUBPROCESS(5) func ); 
[25] MAINPROCESS equal afl_a_db_doa_peak_ave_diff fl_a_doa_bf_peak_pow - fl_a_doa_pow_ave[0][1];
[26] MAINPROCESS ??? if( as4_a_trk_num > BTT_OBJ_DETECT_CYC1 ) 
[27] MAINPROCESS subproc SUBPROCESS(6) 
[28] SUBPROCESS(6) ??? if( fl_abs(afl_a_trailer_obj_rx_ave) < BTT_OBJ_X_RANGE 
[29] SUBPROCESS(6) ??? &&  afl_a_trailer_obj_ry_ave < BTT_OBJ_Y_RANGE_FORWARD 
[30] SUBPROCESS(6) ??? &&  afl_a_trailer_obj_ry_ave > BTT_OBJ_Y_RANGE_BACKWARD 
[31] SUBPROCESS(6) ??? &&  fl_abs(afl_a_trailer_obj_vy_ave) < BTT_OBJ_VY 
[32] SUBPROCESS(6) ??? &&  afl_a_trailer_obj_rx_dev < BTT_OBJ_DEV_TH 
[33] SUBPROCESS(6) ??? &&  afl_a_trailer_obj_vy_dev < BTT_OBJ_DEV_TH ) 
[34] SUBPROCESS(6) subproc SUBSUBPROCESS(1) 
[35] SUBPROCESS(6) subproc SUBSUBPROCESS(2) 
[36] MAINPROCESS ??? else 
[37] MAINPROCESS subproc SUBPROCESS(7) 
[38] SUBPROCESS(7) ??? if( as4_a_trk_num2 > (S4)10 
[39] SUBPROCESS(7) ??? &&  fl_a_doa_pow_ave[0][1] > afl_a_trailer_doa_pow_th 
[40] SUBPROCESS(7) ??? &&  afl_a_db_doa_peak_ave_diff < (FL)5.0 ) 
[41] SUBPROCESS(7) subproc SUBSUBPROCESS(1) 
[42] SUBPROCESS(7) ??? else 
[43] SUBPROCESS(7) subproc SUBSUBPROCESS(2) 
[44] MAINPROCESS equal for( s4_t_lp_i 0;
[45] MAINPROCESS proc s4_t_lp_i < BTT_OBJ_HISTORY_CYCLE; 
[46] MAINPROCESS ??? s4_t_lp_i++ 
[47] MAINPROCESS func ); 
[48] MAINPROCESS subproc SUBPROCESS(8) 
[49] SUBPROCESS(8) equal for( s4_t_lp_j 0;
[50] SUBPROCESS(8) proc s4_t_lp_j < TRAILER_BUFFSIZE; 
[51] SUBPROCESS(8) ??? s4_t_lp_j ++ 
[52] SUBPROCESS(8) func ); 
[53] SUBPROCESS(8) subproc SUBSUBPROCESS(1) 
[54] MAINPROCESS equal afl_g_btt_atd_obj_tracking[0] afl_a_trailer_obj_rx_ave;
[55] MAINPROCESS equal afl_g_btt_atd_obj_tracking[1] afl_a_trailer_obj_ry_ave;
[56] MAINPROCESS equal afl_g_btt_atd_obj_tracking[2] afl_a_trailer_obj_vy_ave;
[57] MAINPROCESS equal afl_g_btt_atd_obj_tracking[3] afl_a_trailer_obj_rx_dev;
[58] MAINPROCESS equal afl_g_btt_atd_obj_tracking[4] afl_a_trailer_obj_ry_dev;
[59] MAINPROCESS equal afl_g_btt_atd_obj_tracking[5] afl_a_trailer_obj_vy_dev;
[60] MAINPROCESS equal as4_g_btt_atd_counter[0] as4_a_trk_num;
[61] MAINPROCESS equal as4_g_btt_atd_counter[1] as4_a_trk_num2;
[62] MAINPROCESS equal as4_g_btt_atd_counter[2] st_atd_params.atd_counter[0];
[63] MAINPROCESS equal as4_g_btt_atd_counter[3] st_atd_params.atd_counter[1];
[64] MAINPROCESS equal afl_g_btt_atd_doa_pow_ave[0] fl_a_doa_pow_ave[0][1];
[65] MAINPROCESS equal afl_g_btt_atd_doa_pow_ave[1] afl_a_db_doa_peak_ave_diff;
[66] MAINPROCESS proc return; 
[67] SUBSUBPROCESS(1) equal afl_g_btt_atd_obj_info[0][s4_t_lp_j][s4_t_lp_i] st_atd_params.trailer_object_total[s4_t_lp_i][s4_t_lp_j].fl_Rxobs;
[68] SUBSUBPROCESS(1) equal afl_g_btt_atd_obj_info[1][s4_t_lp_j][s4_t_lp_i] st_atd_params.trailer_object_total[s4_t_lp_i][s4_t_lp_j].fl_Ryobs;
[69] SUBSUBPROCESS(1) ??? if( st_atd_params.trailer_object_total[s4_t_lp_i][s4_t_lp_j].fl_Vyobs == (FL)0 ) 
[70] SUBSUBPROCESS(1) subproc SUBSUBSUBPROCESS(1) 
[71] SUBSUBPROCESS(1) subproc SUBSUBSUBPROCESS(2) 
----------------- Total Codes : 71 lines
--------------------------
[Function Name] : fn_btt_shift_trailerobj 
-Return type : VD 
-Argument : 2 
     [0] : NORMAL_BSM   pst_a_trailer_obj[TRAILER_BUFFSIZE] 
     [1] : S4   as4_a_trailer_obj_num 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i; 
[2] MAINPROCESS ??? s4_t_lp_i-- 
[3] MAINPROCESS func ); 
[4] MAINPROCESS subproc SUBPROCESS(1) 
[5] SUBPROCESS(1) ??? fn_move(st_atd_params.trailer_object_total[s4_t_lp_i + (S4)1], st_atd_params.trailer_object_total[s4_t_lp_i], TRAILER_BUFFSIZE 
[6] SUBPROCESS(1) func ); 
[7] MAINPROCESS ??? fn_move(st_atd_params.trailer_object_total[(S4)0], pst_a_trailer_obj, TRAILER_BUFFSIZE 
[8] MAINPROCESS func ); 
[9] MAINPROCESS equal st_atd_params.trailer_object_num_total[0] as4_a_trailer_obj_num;
[10] MAINPROCESS proc return; 
[11] MAINPROCESS ??? fn_move(st_atd_params.trailer_object_total[s4_t_lp_i + (S4)1], st_atd_params.trailer_object_total[s4_t_lp_i], TRAILER_BUFFSIZE 
[12] MAINPROCESS func ); 
----------------- Total Codes : 12 lines
--------------------------
[Function Name] : fn_btt_sel_exclude_object 
-Return type : VD 
-Argument : 2 
     [0] : NORMAL_BSM   pst_a_trailer_obj[TRAILER_BUFFSIZE] 
     [1] : S4   *as4_a_trailer_obj_num 
----- Codes -----
[1] MAINPROCESS ??? fn_btt_sel_exobj_outside_rx( 
[2] MAINPROCESS ??? pst_a_trailer_obj, 
[3] MAINPROCESS ??? as4_a_trailer_obj_num 
[4] MAINPROCESS func ); 
[5] MAINPROCESS ??? *as4_a_trailer_obj_num = s4_trim_trailer(pst_a_trailer_obj 
[6] MAINPROCESS func ); 
[7] MAINPROCESS proc return; 
----------------- Total Codes : 7 lines
--------------------------
[Function Name] : fn_btt_sel_exobj_outside_rx 
-Return type : VD 
-Argument : 2 
     [0] : NORMAL_BSM   pst_a_trailer_obj[TRAILER_BUFFSIZE] 
     [1] : S4   *as4_a_trailer_obj_num 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i; 
[2] MAINPROCESS equal for(s4_t_lp_i 0;
[3] MAINPROCESS proc s4_t_lp_i < *as4_a_trailer_obj_num; 
[4] MAINPROCESS ??? s4_t_lp_i ++ 
[5] MAINPROCESS func ); 
[6] MAINPROCESS subproc SUBPROCESS(1) 
[7] SUBPROCESS(1) ??? if( pst_a_trailer_obj[s4_t_lp_i].fl_Robs != CFL_UNKNOWN_VALUE 
[8] SUBPROCESS(1) ??? &&  fl_abs(pst_a_trailer_obj[s4_t_lp_i].fl_Rxobs) > (FL)2.0) 
[9] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[10] MAINPROCESS proc return; 
[11] SUBSUBPROCESS(1) ??? fn_init(&pst_a_trailer_obj[s4_t_lp_i], 1 
[12] SUBSUBPROCESS(1) func ); 
----------------- Total Codes : 12 lines
--------------------------
[Function Name] : fn_btt_tle_search_peak_bf 
-Return type : VD 
-Argument : 2 
     [0] : const FL   Ryy[NB_FFT_PT][CORRE_SIZE_4CH] 
     [1] : FL   fl_a_tle_bf_peak[BTT_TLE_RANGE] 
----- Codes -----
[1] MAINPROCESS proc U1 u1_t_lp_i, u1_t_lp_n_doa; 
[2] MAINPROCESS proc S4 s4_t_focus_bin; 
[3] MAINPROCESS proc FL afl_t_doa_spec[N_DOA]; 
[4] MAINPROCESS proc S4 s4_t_doa[1]; 
[5] MAINPROCESS proc S4 s4_t_doa_range; 
[6] MAINPROCESS ??? s4_t_doa_range = (S4)((FL)(N_DOA * 0.5F) - st_g_bsm_loop_data.afl_installed_angle[0] + BTT_DBF_DOA_RANGE 
[7] MAINPROCESS func ); 
[8] MAINPROCESS ??? u1_t_lp_i++ 
[9] MAINPROCESS func ); 
[10] MAINPROCESS subproc SUBPROCESS(1) 
[11] MAINPROCESS ??? u1_t_lp_i++ 
[12] MAINPROCESS func ); 
[13] MAINPROCESS subproc SUBPROCESS(2) 
[14] SUBPROCESS(2) ??? fn_calc_spec_bf_4ch_fm( 
[15] SUBPROCESS(2) ??? (const FL *)(Ryy[s4_t_focus_bin]), 
[16] SUBPROCESS(2) ??? afl_t_doa_spec, 
[17] SUBPROCESS(2) ??? 0, 
[18] SUBPROCESS(2) ??? s4_t_focus_bin 
[19] SUBPROCESS(2) func ); 
[20] SUBPROCESS(2) ??? u1_t_lp_n_doa++ 
[21] SUBPROCESS(2) func ); 
[22] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[23] SUBPROCESS(2) ??? s4_search_peak_bf( 
[24] SUBPROCESS(2) ??? (const FL *)afl_t_doa_spec, 
[25] SUBPROCESS(2) ??? s4_t_doa, 
[26] SUBPROCESS(2) ??? &fl_a_tle_bf_peak[u1_t_lp_i], 
[27] SUBPROCESS(2) ??? 1 
[28] SUBPROCESS(2) func ); 
[29] MAINPROCESS proc return; 
----------------- Total Codes : 29 lines
--------------------------
[Function Name] : fn_btt_tle_calc_bf_power_diff 
-Return type : VD 
-Argument : 2 
     [0] : FL   fl_a_tle_bf_peak[BTT_TLE_RANGE] 
     [1] : FL   fl_a_tle_bf_pow_diff[BTT_TLE_RANGE-(S4)1] 
----- Codes -----
[1] MAINPROCESS proc S4 s4_t_lp_i; 
[2] MAINPROCESS equal for(s4_t_lp_i 0;
[3] MAINPROCESS ??? s4_t_lp_i++ 
[4] MAINPROCESS func ); 
[5] MAINPROCESS subproc SUBPROCESS(1) 
[6] SUBPROCESS(1) equal fl_a_tle_bf_pow_diff[s4_t_lp_i] fl_a_tle_bf_peak[s4_t_lp_i] - fl_a_tle_bf_peak[s4_t_lp_i + 1];
[7] MAINPROCESS proc return; 
[8] MAINPROCESS equal fl_a_tle_bf_pow_diff[s4_t_lp_i] fl_a_tle_bf_peak[s4_t_lp_i] - fl_a_tle_bf_peak[s4_t_lp_i + 1];
----------------- Total Codes : 8 lines
