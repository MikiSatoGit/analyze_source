Total lines: 147 
Total functions : 3 
--------------------------
[Function Name] : fn_btt_tle_main 
-Return type : FL 
-Argument : 7 
     [0] : FL   fl_a_self_v 
     [1] : S4   s4_a_curve_r 
     [2] : NORMAL_BSM   *pst_a_object 
     [3] : S4   s4_a_object_size 
     [4] : BTT_CLUSTER_INFO   *pst_a_cluster_info 
     [5] : BTT_AUX_TRAILER_INFO   *pst_a_aux_trailer_info 
     [6] : BTT_STAT   *pst_a_btt_stat 
----- Codes -----
[1] MAINPROCESS(1) equal FL fl_t_length BTT_TRAILER_SIZE_UNKNOWN;
[2] MAINPROCESS(1) proc S4 s4_t_lp_i; 
[3] MAINPROCESS(1) proc FL fl_a_tle_bf_peak[BTT_TLE_RANGE]; 
[4] MAINPROCESS(1) proc FL fl_a_tle_bf_pow_diff[BTT_TLE_RANGE-(S4)1]; 
[5] MAINPROCESS(1) for<start> for( 
[6] MAINPROCESS(1) for s4_t_lp_i = 0; 
[7] MAINPROCESS(1) for s4_t_lp_i < BTT_TLE_RANGE; 
[8] MAINPROCESS(1) for s4_t_lp_i++) 
[9] MAINPROCESS(1) subproc SUBPROCESS(1) 
[10] SUBPROCESS(1) equal fl_a_tle_bf_peak[s4_t_lp_i] (FL)0;
[11] MAINPROCESS(2) for<start> for( 
[12] MAINPROCESS(2) for s4_t_lp_i = 0; 
[13] MAINPROCESS(2) for s4_t_lp_i < BTT_TLE_RANGE - (S4)1; 
[14] MAINPROCESS(2) for s4_t_lp_i++) 
[15] MAINPROCESS(2) subproc SUBPROCESS(1) 
[16] SUBPROCESS(1) equal fl_a_tle_bf_pow_diff[s4_t_lp_i] (FL)0;
[17] MAINPROCESS(3) if<start> if( 
[18] MAINPROCESS(3) if st_g_btt_stat.TLE != BTT_RET_t.Func_Stat.ACTIVE 
[19] MAINPROCESS(3) if ) 
[20] MAINPROCESS(3) subproc SUBPROCESS(1) 
[21] SUBPROCESS(1) if<start> if( 
[22] SUBPROCESS(1) if st_g_btt_result.TLength != BTT_TRAILER_SIZE_UNKNOWN 
[23] SUBPROCESS(1) if ) 
[24] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[25] SUBSUBPROCESS(1) proc return st_g_btt_result.TLength; 
[26] SUBPROCESS(2) else<start> else 
[27] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[28] SUBSUBPROCESS(1) proc return fl_t_length; 
[29] SUBPROCESS(3) proc return fl_t_length; 
[30] MAINPROCESS(4) func<start> fn_btt_tle_search_peak_bf( 
[31] MAINPROCESS(4) func (const FL (*)[CORRE_SIZE_4CH])(afl_g_cvw_lfm_ryy_matrix[0]), 
[32] MAINPROCESS(4) func fl_a_tle_bf_peak 
[33] MAINPROCESS(4) func<end> ); 
[34] MAINPROCESS(4) func<start> fn_btt_tle_calc_bf_power_diff( 
[35] MAINPROCESS(4) func fl_a_tle_bf_peak, 
[36] MAINPROCESS(4) func fl_a_tle_bf_pow_diff 
[37] MAINPROCESS(4) func<end> ); 
[38] MAINPROCESS(4) for <start> for ( 
[39] MAINPROCESS(4) for  s4_t_lp_i = 0; 
[40] MAINPROCESS(4) for  s4_t_lp_i < 30; 
[41] MAINPROCESS(4) for  s4_t_lp_i++ ) 
[42] MAINPROCESS(4) subproc SUBPROCESS(1) 
[43] SUBPROCESS(1) func<start> fn_bsm_cal_trailer_range_doa_ave( 
[44] SUBPROCESS(1) func 0, 
[45] SUBPROCESS(1) func (const FL (*)[CORRE_SIZE_4CH])(afl_g_cvw_lfm_ryy_matrix[0]), 
[46] SUBPROCESS(1) func (256+s4_t_lp_i), 
[47] SUBPROCESS(1) func &afl_a_doa_pow_ave[s4_t_lp_i], 
[48] SUBPROCESS(1) func &afl_a_doa_pow_dev[s4_t_lp_i] 
[49] SUBPROCESS(1) func<end> ); 
[50] MAINPROCESS(5) if<start> if( 
[51] MAINPROCESS(5) if st_tle_params.timer < BTT_TLE_MAX_TIME 
[52] MAINPROCESS(5) if ) 
[53] MAINPROCESS(5) subproc SUBPROCESS(1) 
[54] SUBPROCESS(1) func<start> fl_t_length = fn_btt_tle_estimate_trailer_length( 
[55] SUBPROCESS(1) func<end> ); 
[56] MAINPROCESS(6) else<start> else 
[57] MAINPROCESS(6) subproc SUBPROCESS(1) 
[58] SUBPROCESS(1) func<start> fn_btt_tle_deactivate( 
[59] SUBPROCESS(1) func<end> ); 
[60] MAINPROCESS(7) proc st_tle_params.timer++; 
[61] MAINPROCESS(7) equal fl_t_length (FL)4;
[62] MAINPROCESS(7) proc return fl_t_length; 
----------------- Total Codes : 62 lines
--------------------------
[Function Name] : fn_miki_test 
-Return type : VD 
-Argument : 2 
     [0] : type1   arg1 
     [1] : type1   arg2 
----- Codes -----
[1] MAINPROCESS(1) if<start> if( 
[2] MAINPROCESS(1) if lv1_1 == 11 
[3] MAINPROCESS(1) if ) 
[4] MAINPROCESS(1) subproc SUBPROCESS(1) 
[5] SUBPROCESS(1) if<start> if( 
[6] SUBPROCESS(1) if lv1_1_1 == 111 
[7] SUBPROCESS(1) if ) 
[8] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[9] SUBSUBPROCESS(1) equal level1_1_1_1 hoge1_1_1_1;
[10] SUBSUBPROCESS(1) if<start> if( 
[11] SUBSUBPROCESS(1) if hogehoge_1 
[12] SUBSUBPROCESS(1) if ) 
[13] SUBSUBPROCESS(1) subproc SUBSUBSUBPROCESS(1) 
[14] SUBSUBSUBPROCESS(1) if<start> if( 
[15] SUBSUBSUBPROCESS(1) if hogehoge_2 
[16] SUBSUBSUBPROCESS(1) if ) 
[17] SUBSUBSUBPROCESS(1) subproc SUBSUBSUBSUBPROCESS(1) 
[18] SUBSUBSUBSUBPROCESS(1) equal level1_1_1_1 hoge1_1_1_1;
[19] SUBSUBSUBSUBPROCESS(1) equal level1_1_1_2 hoge1_1_1_2;
[20] SUBPROCESS(2) else if<start> else if( 
[21] SUBPROCESS(2) else if lv1_1_2 == 112 
[22] SUBPROCESS(2) else if ) 
[23] SUBPROCESS(2) subproc SUBSUBPROCESS(1) 
[24] SUBSUBPROCESS(1) equal level1_1_2_1 hoge1_1_2_1;
[25] SUBPROCESS(3) else<start> else 
[26] SUBPROCESS(3) subproc SUBSUBPROCESS(1) 
[27] SUBSUBPROCESS(1) equal level1_1_3_1 hoge1_1_3_1;
[28] MAINPROCESS(2) else if<start> else if( 
[29] MAINPROCESS(2) else if lv1_2 == 12 
[30] MAINPROCESS(2) else if ) 
[31] MAINPROCESS(2) subproc SUBPROCESS(1) 
[32] SUBPROCESS(1) equal level1_2_1 hoge1_2_1;
[33] MAINPROCESS(3) else<start> else 
[34] MAINPROCESS(3) subproc SUBPROCESS(1) 
[35] SUBPROCESS(1) equal level1_3_1 hoge1_3_1;
[36] MAINPROCESS(4) proc return; 
----------------- Total Codes : 36 lines
--------------------------
[Function Name] : fn_btt_initialize 
-Return type : VD 
-Argument : 5 
     [0] : U1   u1_a_bsm_configuration 
     [1] : U1   u1_a_bsm_drv_cmd 
     [2] : U1   u1_a_btt_configuration 
     [3] : U1   u1_a_btt_drv_cmd 
     [4] : BSM_STANDARD   st_a_bsm_alertarea 
----- Codes -----
[1] MAINPROCESS(1) if <start> if ( 
[2] MAINPROCESS(1) if  (fl_g_v_self_bsm_for_base > BTT_ACTIVE_SPEED_TH) 
[3] MAINPROCESS(1) if  ) 
[4] MAINPROCESS(1) subproc SUBPROCESS(1) 
[5] SUBPROCESS(1) equal st_g_btt_stat.BTT_RESET BTT_TRUE;
[6] MAINPROCESS(2) if<start> if( 
[7] MAINPROCESS(2) if st_g_btt_stat.BTT_RESET == BTT_TRUE 
[8] MAINPROCESS(2) if && st_g_btt_stat.BTT_initialized == BTT_RET_t.Init_Stat.INITIALIZED 
[9] MAINPROCESS(2) if && fl_g_v_self_bsm_for_base < (FL)0.5 ) 
[10] MAINPROCESS(2) subproc SUBPROCESS(1) 
[11] SUBPROCESS(1) proc st_g_btt_stat.BTT_timer ++; 
[12] SUBPROCESS(1) if<start> if( 
[13] SUBPROCESS(1) if st_g_btt_stat.BTT_timer > (S4)150 
[14] SUBPROCESS(1) if ) 
[15] SUBPROCESS(1) subproc SUBSUBPROCESS(1) 
[16] SUBSUBPROCESS(1) equal st_g_btt_stat.BTT_initialized BTT_RET_t.Init_Stat.UNINITIALIZED;
[17] SUBSUBPROCESS(1) equal st_g_btt_stat.BTT_RESET BTT_FALSE;
[18] SUBSUBPROCESS(1) equal st_g_btt_stat.BTT_timer (S4)0;
[19] SUBSUBPROCESS(1) equal st_g_btt_stat.ATD BTT_RET_t.Func_Stat.ENABLE;
[20] MAINPROCESS(3) if<start> if( 
[21] MAINPROCESS(3) if st_g_btt_stat.BTT_initialized == BTT_RET_t.Init_Stat.INITIALIZED 
[22] MAINPROCESS(3) if ) 
[23] MAINPROCESS(3) subproc SUBPROCESS(1) 
[24] SUBPROCESS(1) proc return; 
[25] MAINPROCESS(4) equal st_g_btt_alertarea.standard st_a_bsm_alertarea;
[26] MAINPROCESS(4) equal st_g_btt_result.TFlag BTT_RET_t.TFlag.UNKNOWN;
[27] MAINPROCESS(4) func<start> fn_btt_set_trailer_length( BTT_TRAILER_SIZE_UNKNOWN 
[28] MAINPROCESS(4) func<end> ); 
[29] MAINPROCESS(4) func<start> fn_btt_set_trailer_width( BTT_TRAILER_SIZE_UNKNOWN 
[30] MAINPROCESS(4) func<end> ); 
[31] MAINPROCESS(4) equal st_g_btt_alertarea.rear.VarY (FL) 0.0;
[32] MAINPROCESS(4) equal st_g_btt_alertarea.rear.VarYmax BTT_REAR_RANGE_MAX;
[33] MAINPROCESS(4) equal st_g_btt_alertarea.side.VarXin (FL) 0.0;
[34] MAINPROCESS(4) equal st_g_btt_alertarea.side.VarXmax (FL) 0.0;
[35] MAINPROCESS(4) equal st_g_btt_alertarea.side.VarXout (FL) 0.0;
[36] MAINPROCESS(4) func<start> fn_btt_ttm_activate( 
[37] MAINPROCESS(4) func<end> ); 
[38] MAINPROCESS(4) func<start> fn_btt_atd_activate( 
[39] MAINPROCESS(4) func<end> ); 
[40] MAINPROCESS(4) func<start> fn_btt_atd_initialize( 
[41] MAINPROCESS(4) func<end> ); 
[42] MAINPROCESS(4) func<start> fn_btt_set_bsm_final_state( 
[43] MAINPROCESS(4) func u1_a_bsm_configuration, 
[44] MAINPROCESS(4) func u1_a_bsm_drv_cmd 
[45] MAINPROCESS(4) func<end> ); 
[46] MAINPROCESS(4) func<start> fn_btt_set_btt_final_state( 
[47] MAINPROCESS(4) func u1_a_btt_configuration, 
[48] MAINPROCESS(4) func u1_a_btt_drv_cmd, 
[49] MAINPROCESS(4) func st_g_btt_result 
[50] MAINPROCESS(4) func<end> ); 
[51] MAINPROCESS(4) if<start> if( 
[52] MAINPROCESS(4) if u1_a_btt_drv_cmd == BTT_RET_t.Drv_SW.ON 
[53] MAINPROCESS(4) if ) 
[54] MAINPROCESS(4) subproc SUBPROCESS(1) 
[55] SUBPROCESS(1) func<start> fn_btt_aaz_activate( 
[56] SUBPROCESS(1) func<end> ); 
[57] MAINPROCESS(5) equal st_g_btt_stat.BTT_initialized BTT_RET_t.Init_Stat.INITIALIZED;
[58] MAINPROCESS(5) proc return; 
----------------- Total Codes : 58 lines
