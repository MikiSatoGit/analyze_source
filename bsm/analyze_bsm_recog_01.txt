VD fn_bsm_prior_init_data(
 	S4 *ps4_a_peak_num_prior,
 	FL afl_a_peak_bins_intpl[PRIOR_RANGE][2],
 	FL afl_a_peak_powers[PRIOR_RANGE][2],
 	FL afl_a_peak_doa_bins_intpl[PRIOR_RANGE][2],
 	FL afl_a_peak_doa_powers[PRIOR_RANGE][2]
 );
 VD fn_bsm_prior_set_peak(
 	S4  s4_a_focus_bin,											/* [in] focus bin */
 	FL fl_a_Ayfil,												/* [in] fl_a_Ayfil  */
 	U2 u2_a_flg_undn,											/* [in] up/dn_flg	*/
 	S4 *ps4_a_start_bin											/* [out] start_bin */
 );
 VD fn_bsm_prior_estimate_doa(
 	S4 s4_a_flg_updn,												/* [in] s4_a_flg_updn */
 	FL afl_a_Ryy[NB_FFT_PT][CORRE_SIZE_4CH],						/* [in] self correlation */
 	const FL afl_a_power[NB_FFT_PT],								/* [in] power */
 	S4 s4_a_start_bin,												/* [in] focus bin */
 	FL fl_a_focus_power,											/* [in] focus afl_a_power */
 	FL fl_a_focus_doa_bin_intpl,									/* [in] focus doa */
 	S4 *ps4_a_doa_peak_num,											/* [out] */
 	FL afl_a_peak_bins_intpl[PRIOR_RANGE][2],						/* [out] peak interpolated frequency */
 	FL afl_a_peak_powers[PRIOR_RANGE][2],							/* [out] peak afl_a_power */
 	FL afl_a_peak_doa_bins_intpl[PRIOR_RANGE][2],					/* [out] peak interpolated doa bin */
 	FL afl_a_peak_doa_powers[PRIOR_RANGE][2]						/* [out] peak doa afl_a_power */
 );
 static VD fn_bsm_prior_estimate_doa_around_dc(
 	S4 s4_a_flg_updn,												/* [in] s4_a_flg_updn */
 	const FL afl_a_Ryy[NB_FFT_PT][CORRE_SIZE_4CH],					/* [in] self correlation */
 	const FL afl_a_power[NB_FFT_PT],								/* [in] raw data */
 	S4 s4_a_focus_bin,												/* [in] */
 	S4 s4_a_bin_pred,												/* [in] */
 	FL fl_a_bin_interpolate_pred,									/* [in] */
 	FL fl_a_doa_interpolate_pred,									/* [in] */
 	FL fl_a_power_music,											/* [in] */
 	S4 s4_a_bin_music_pred,											/* [in] */
 	S4 *ps4_a_doa_peak_num,											/* [out] */
 	FL afl_a_peak_bins_intpl[PRIOR_RANGE][2],						/* [out] peak interpolated frequency */
 	FL afl_a_peak_powers[PRIOR_RANGE][2],							/* [out] peak afl_a_power */
 	FL afl_a_peak_doa_bins_intpl[PRIOR_RANGE][2],					/* [out] peak interpolated doa bin */
 	FL afl_a_peak_doa_powers[PRIOR_RANGE][2]						/* [out] peak doa afl_a_power */
 );
 VD fn_bsm_prior_cal_doa(
 	S4 s4_a_flg_updn,											/* [in] s4_a_flg_updn */
 	const FL afl_a_Ryy[NB_FFT_PT][CORRE_SIZE_4CH],				/* [in] self correlation */
 	const FL afl_a_power[NB_FFT_PT],							/* [in] raw data */
 	S4 s4_a_focus_bin,											/* [in] */
 	FL fl_a_focus_power,										/* [in] focus afl_a_power */
 	FL fl_a_focus_doa_bin_intpl,								/* [in] focus doa */
 	S4 *ps4_a_doa_diff,											/* [in] doa diff */
 	S4 *ps4_a_doa_num,											/* [out] */
 	FL afl_a_selected_doa_bins_intpl[2],						/* [out] */
 	FL afl_a_selected_doa_powers[2],							/* [out] */
 	FL afl_a_selected_bins_intpl[2]								/* [out] */
 );
 VD fn_bsm_prior_store_doa(
 	const FL afl_a_focus_power[PRIOR_RANGE],					/* [in] power */
 	const S4 as4_a_doa_num[PRIOR_RANGE],
 	const FL afl_a_selected_doa_bins_intpl[PRIOR_RANGE][2],		/* [in]  */
 	const FL afl_a_selected_doa_powers[PRIOR_RANGE][2],			/* [in]  */
 	const FL afl_a_selected_bins_intpl[PRIOR_RANGE][2],			/* [in]  */
 	S4 *ps4_a_doa_peak_num,										/* [out] */
 	FL afl_a_peak_bins_intpl[PRIOR_RANGE][2],					/* [out] peak interpolated frequency */
 	FL afl_a_peak_powers[PRIOR_RANGE][2],						/* [out] peak afl_a_power */
 	FL afl_a_peak_doa_bins_intpl[PRIOR_RANGE][2],				/* [out] peak interpolated doa bin */
 	FL afl_a_peak_doa_powers[PRIOR_RANGE][2]					/* [out] peak doa afl_a_power */
 );
 U1 u1_bsm_prior_make_pair(
 	FL fl_a_focus_doa_bin_intpl_up,									/* [in] focus doa */
 	FL fl_a_focus_doa_bin_intpl_dn,									/* [in] focus doa */
 	FL fl_a_power_up_music,										/* [in] */
 	FL fl_a_power_dn_music,										/* [in] */
 	S4 s4_a_peak_num_prior_up,									/* [in] */
 	FL afl_a_peak_bins_intpl_up[PRIOR_RANGE][2],				/* [in] peak doa bin */
 	FL afl_a_peak_powers_up[PRIOR_RANGE][2],					/* [in] peak doa afl_a_power */
 	FL afl_a_peak_doa_bins_intpl_up[PRIOR_RANGE][2],			/* [in] peak doa bin */
 	FL afl_a_peak_doa_powers_up[PRIOR_RANGE][2],				/* [in] peak doa afl_a_power */
 	S4 s4_a_peak_num_prior_dn,									/* [in] */
 	FL afl_a_peak_bins_intpl_dn[PRIOR_RANGE][2],				/* [in] peak doa bin */
 	FL afl_a_peak_powers_dn[PRIOR_RANGE][2],					/* [in] peak doa afl_a_power */
 	FL afl_a_peak_doa_bins_intpl_dn[PRIOR_RANGE][2],			/* [in] peak doa bin */
 	FL afl_a_peak_doa_powers_dn[PRIOR_RANGE][2],				/* [in] peak doa afl_a_power */
 	S4 s4_a_normal_prior_num,
 	NORMAL_BSM *pst_a_normal_prior								/* [in / out] */
 );
 static U1 u1_bsm_prior_make_pair_a2(FL fl_a_peak_doa_bins_intpl, FL fl_a_focus_doa_bin_intpl, FL fl_a_doa_diff_predict);
 static U1 u1_bsm_prior_make_pair_a6(FL fl_a_peak_doa_powers_up, FL fl_a_power_up_music);
 static U1 u1_bsm_prior_make_pair_a7(FL fl_a_peak_doa_powers_dn, FL fl_a_power_dn_music);
 static U1 u1_bsm_prior_make_pair_a8(FL fl_a_peak_bins_intpl_up, FL fl_a_peak_bins_intpl_dn);
 VD fn_bsm_prior_delete_same_object(
 	const S4 as4_a_prev_index[PRIOR_BUFFSIZE],
 	S4 s4_a_pair_num_prior,
 	NORMAL_BSM ast_a_normal[PRIOR_BUFFSIZE],
 	const NORMAL_BSM ast_a_ast_normal_copy[NORMAL_BUFFSIZE]
 );
 VD fn_bsm_prior_set_object(
 	S4 *ps4_a_pair_num_prior,
 	NORMAL_BSM ast_a_normal_prior[PRIOR_BUFFSIZE],				/* [out] S4 values of NORMAL_BSM structure */
 	S4 s4_a_buf_normal_num,
 	const NORMAL_BSM ast_a_buf_normal[PRIOR_BUFFSIZE]
 );
 VD fn_bsm_seek_prior_object(
 	S4		   *ps4_a_pair_num_prior,							/* [out] number of prior object */
 	NORMAL_BSM ast_a_normal_prior[PRIOR_BUFFSIZE]				/* [out] S4 values of NORMAL_BSM structure */
 )
 {
 	S4 s4_t_normal_num;
 	NORMAL_BSM ast_t_normal[PRIOR_BUFFSIZE];
 	NORMAL_BSM st_t_buf_normal;
 	NORMAL_BSM ast_t_ast_normal_copy[NORMAL_BUFFSIZE];
 	S4 s4_t_lp_i;
 	S4 s4_t_start_bin;
 	S4 as4_t_prev_index[PRIOR_BUFFSIZE];
 	S4 s4_t_peak_num_prior_up = 0;
 	FL afl_t_peak_bins_intpl_up[PRIOR_RANGE][2];
 	FL afl_t_peak_powers_up[PRIOR_RANGE][2];
 	FL afl_t_peak_doa_bins_intpl_up[PRIOR_RANGE][2];
 	FL afl_t_peak_doa_powers_up[PRIOR_RANGE][2];
 	S4 s4_t_peak_num_prior_dn = 0;
 	FL afl_t_peak_bins_intpl_dn[PRIOR_RANGE][2];
 	FL afl_t_peak_powers_dn[PRIOR_RANGE][2];
 	FL afl_t_peak_doa_bins_intpl_dn[PRIOR_RANGE][2];
 	FL afl_t_peak_doa_powers_dn[PRIOR_RANGE][2];
 	U1 u1_make_pair_result;
 	U1 u1_t_up_peak_num_of_search;		/* 処理時間計測用。実際にmusicを掛けた基本ピークの数 */
 	U1 u1_t_dn_peak_num_of_search;		/* 処理時間計測用。実際にmusicを掛けた基本ピークの数 */
 	S4 s4_t_lower_limit_th;
 	U1 u1_t_flg_near_target_exist;		/* 近距離にターゲット物標存在フラグ */
 	S4 s4_t_lp_target_num;				/* ターゲット物標のforループ変数 */
 	fn_init(ast_t_normal, PRIOR_BUFFSIZE);
 	for (s4_t_lp_i = (S4)0; s4_t_lp_i < (S4)NORMAL_BUFFSIZE; s4_t_lp_i++) {
 		ast_t_ast_normal_copy[s4_t_lp_i] = st_g_bsm_loop_data.ast_normal[s4_t_lp_i];
 	}
 	fn_sort_normal_by_power(ast_t_ast_normal_copy);
 	*ps4_a_pair_num_prior = 0;
 	if (
 	   (fl_abs(fl_g_v_self_bsm_for_base) < CFL_CANOUT_VSELF_MIN)									/* COND. a1 */
 	|| (s4_abs(s2_g_curvr_for_base) < CANOUT_CURVER_MIN)								/* COND. a2 */
 	) {
 		fn_init(ast_a_normal_prior,  PRIOR_BUFFSIZE);
 		return;
 	}
 	u1_t_up_peak_num_of_search = 0;		/* 処理時間計測用。実際にmusicを掛けた基本ピークの数 */
 	u1_t_dn_peak_num_of_search = 0;		/* 処理時間計測用。実際にmusicを掛けた基本ピークの数 */
 	u1_t_flg_near_target_exist = (U1)0;
 	for (s4_t_lp_target_num = (S4)0; s4_t_lp_target_num < st_g_bsm_loop_data.as4_buf_pair_num[1]; s4_t_lp_target_num++) {
 		if (st_g_bsm_loop_data.ast_target[s4_t_lp_target_num].fl_Ryfil > (FL)-15.0F) {		/* COND.a3 */
 			u1_t_flg_near_target_exist = (U1)1;
 			break;
 		}
 	}
 	s4_t_normal_num = 0;
 	for (s4_t_lp_i = 0; s4_t_lp_i < st_g_bsm_loop_data.as4_buf_pair_num[0]; s4_t_lp_i++) {
 		if (s4_t_lp_i >= PRIOR_BUFFSIZE) {												/* COND.b1 */
 			break;
 		}
 		if ((u1_t_flg_near_target_exist == (U1)0)																/* COND.b9 */
 		&&  (st_g_bsm_loop_data.s4_flg_alarm == (S4)0)															/* COND.b10 */
 		&&  ((CFL_ALARM_Y_BACKWARD - (FL)ALARM_Y_OFFSET) < ast_t_ast_normal_copy[s4_t_lp_i].fl_Rypred)			/* COND.b11 */
 		&&  (ast_t_ast_normal_copy[s4_t_lp_i].fl_Rypred  < (FL)-EKF_RY_SIDE)									/* COND.b11 */
 		&&  (st_g_bsm_loop_data.as4_low_speed_flg[0] == (S4)0))													/* COND.b12 */
 		{
 		} else {
 			s4_t_lower_limit_th = FREQ_BIN_LOWER_LIMIT_PRIOR;
 			if ((ast_t_ast_normal_copy[s4_t_lp_i].fl_Rypred < FREQ_EXPAND_R_TH)
 			&&  (ast_t_ast_normal_copy[s4_t_lp_i].fl_Vypred > FREQ_EXPAND_V_TH)) {
 				s4_t_lower_limit_th = FREQ_BIN_LOWER_LIMIT_PRIOR_EX;
 			}
 			if (
 				(ast_t_ast_normal_copy[s4_t_lp_i].s4_flg_track > PRIOR_TRK_NUM)		/* COND b2 接続回数一定回以上を優先扱い */
 			 || (ast_t_ast_normal_copy[s4_t_lp_i].s4_flg_dc == OBJECT_TYPE_PRIOR)	/* COND b3 前回優先扱い */
 			) {
 				s4_t_peak_num_prior_up = 0;
 				if (ast_t_ast_normal_copy[s4_t_lp_i].s4_bin_up_pred > FREQ_BIN_LOWER_LIMIT) {	/* COND. b4 */
 					u1_t_up_peak_num_of_search++;		/* 処理時間計測用。実際にmusicを掛けた基本ピークの数 */
 					fn_bsm_prior_init_data(
 						&s4_t_peak_num_prior_up,
 						afl_t_peak_bins_intpl_up,
 						afl_t_peak_powers_up,
 						afl_t_peak_doa_bins_intpl_up,
 						afl_t_peak_doa_powers_up
 					);
 					fn_bsm_prior_set_peak(
 						ast_t_ast_normal_copy[s4_t_lp_i].s4_bin_up_pred,
 						ast_t_ast_normal_copy[s4_t_lp_i].fl_Ayfil,
 						CU2_LFM_MOD_UP,
 						&s4_t_start_bin
 					);
 					fn_bsm_prior_estimate_doa(
 						0,																/* [in] */
 						afl_g_cvw_lfm_ryy_matrix[0],
 						(const FL *)(afl_g_cvw_lfm_ftt_power[0]),
 						s4_t_start_bin,														/* [in] */
 						ast_t_ast_normal_copy[s4_t_lp_i].fl_power_up,				/* [in] */
 						ast_t_ast_normal_copy[s4_t_lp_i].fl_doa_up_interpolate_pred,/* [in] */
 						&s4_t_peak_num_prior_up,											/* [out] */
 						afl_t_peak_bins_intpl_up,											/* [out] */
 						afl_t_peak_powers_up,												/* [out] */
 						afl_t_peak_doa_bins_intpl_up,										/* [out] */
 						afl_t_peak_doa_powers_up											/* [out] */
 					);
 				} else if(ast_t_ast_normal_copy[s4_t_lp_i].s4_bin_up_pred > s4_t_lower_limit_th) {									/* COND.b5 */
 					u1_t_up_peak_num_of_search++;		/* 処理時間計測用。実際にmusicを掛けた基本ピークの数 */
 					fn_bsm_prior_estimate_doa_around_dc(
 						0,																/* [in] */
 						(const FL (*)[CORRE_SIZE_4CH])afl_g_cvw_lfm_ryy_matrix[0],
 						(const FL *)afl_g_cvw_lfm_ftt_power[0],
 						ast_t_ast_normal_copy[s4_t_lp_i].s4_bin_up_pred,
 						ast_t_ast_normal_copy[s4_t_lp_i].s4_bin_dn_pred,
 						ast_t_ast_normal_copy[s4_t_lp_i].fl_bin_up_interpolate_pred,
 						ast_t_ast_normal_copy[s4_t_lp_i].fl_doa_dn_interpolate_pred,
 						ast_t_ast_normal_copy[s4_t_lp_i].fl_power_dn_music,
 						ast_t_ast_normal_copy[s4_t_lp_i].s4_bin_dn_music_pred,
 						&s4_t_peak_num_prior_up,											/* [out] */
 						afl_t_peak_bins_intpl_up,											/* [out] */
 						afl_t_peak_powers_up,												/* [out] */
 						afl_t_peak_doa_bins_intpl_up,										/* [out] */
 						afl_t_peak_doa_powers_up											/* [out] */
 					);
 				} else {
 				}
 				s4_t_peak_num_prior_dn = 0;
 				if (ast_t_ast_normal_copy[s4_t_lp_i].s4_bin_dn_pred > FREQ_BIN_LOWER_LIMIT) {		/* COND. b4' */
 					u1_t_dn_peak_num_of_search++;		/* 処理時間計測用。実際にmusicを掛けた基本ピークの数 */
 					fn_bsm_prior_init_data(
 						&s4_t_peak_num_prior_dn,
 						afl_t_peak_bins_intpl_dn,
 						afl_t_peak_powers_dn,
 						afl_t_peak_doa_bins_intpl_dn,
 						afl_t_peak_doa_powers_dn
 					);
 					fn_bsm_prior_set_peak(
 						ast_t_ast_normal_copy[s4_t_lp_i].s4_bin_dn_pred,
 						ast_t_ast_normal_copy[s4_t_lp_i].fl_Ayfil,
 						CU2_LFM_MOD_DN,
 						&s4_t_start_bin
 					);
 					fn_bsm_prior_estimate_doa(
 						1,																	/* [in] */
 						afl_g_cvw_lfm_ryy_matrix[1],
 						(const FL *)(afl_g_cvw_lfm_ftt_power[1]),
 						s4_t_start_bin,														/* [in] */
 						ast_t_ast_normal_copy[s4_t_lp_i].fl_power_dn,				/* [in] */
 						ast_t_ast_normal_copy[s4_t_lp_i].fl_doa_dn_interpolate_pred,/* [in] */
 						&s4_t_peak_num_prior_dn,											/* [out] */
 						afl_t_peak_bins_intpl_dn,											/* [out] */
 						afl_t_peak_powers_dn,												/* [out] */
 						afl_t_peak_doa_bins_intpl_dn,										/* [out] */
 						afl_t_peak_doa_powers_dn											/* [out] */
 					);
 				}
 				else if(ast_t_ast_normal_copy[s4_t_lp_i].s4_bin_dn_pred > s4_t_lower_limit_th ) {							/* COND.b5' */
 					u1_t_dn_peak_num_of_search++;		/* 処理時間計測用。実際にmusicを掛けた基本ピークの数 */
 					fn_bsm_prior_estimate_doa_around_dc(
 						1,																	/* [in] */
 						(const FL (*)[CORRE_SIZE_4CH])afl_g_cvw_lfm_ryy_matrix[1],
 						(const FL *)afl_g_cvw_lfm_ftt_power[1],
 						ast_t_ast_normal_copy[s4_t_lp_i].s4_bin_dn_pred,
 						ast_t_ast_normal_copy[s4_t_lp_i].s4_bin_up_pred,
 						ast_t_ast_normal_copy[s4_t_lp_i].fl_bin_dn_interpolate_pred,
 						ast_t_ast_normal_copy[s4_t_lp_i].fl_doa_up_interpolate_pred,
 						ast_t_ast_normal_copy[s4_t_lp_i].fl_power_up_music,
 						ast_t_ast_normal_copy[s4_t_lp_i].s4_bin_up_music_pred,
 						&s4_t_peak_num_prior_dn,											/* [out] */
 						afl_t_peak_bins_intpl_dn,											/* [out] */
 						afl_t_peak_powers_dn,												/* [out] */
 						afl_t_peak_doa_bins_intpl_dn,										/* [out] */
 						afl_t_peak_doa_powers_dn											/* [out] */
 					);
 				} else {
 				}
 				fn_init(&st_t_buf_normal, 1);
 				u1_make_pair_result = u1_bsm_prior_make_pair(
 					ast_t_ast_normal_copy[s4_t_lp_i].fl_doa_up_interpolate_pred,	/* [in] */
 					ast_t_ast_normal_copy[s4_t_lp_i].fl_doa_dn_interpolate_pred,	/* [in] */
 					ast_t_ast_normal_copy[s4_t_lp_i].fl_power_up_music,				/* [in] */
 					ast_t_ast_normal_copy[s4_t_lp_i].fl_power_dn_music,				/* [in] */
 					s4_t_peak_num_prior_up,											/* [in] */
 					afl_t_peak_bins_intpl_up,										/* [in] */
 					afl_t_peak_powers_up,											/* [in] */
 					afl_t_peak_doa_bins_intpl_up,									/* [in] */
 					afl_t_peak_doa_powers_up,										/* [in] */
 					s4_t_peak_num_prior_dn,											/* [in] */
 					afl_t_peak_bins_intpl_dn,										/* [in] */
 					afl_t_peak_powers_dn,											/* [in] */
 					afl_t_peak_doa_bins_intpl_dn,									/* [in] */
 					afl_t_peak_doa_powers_dn,										/* [in] */
 					s4_t_normal_num,
 					&st_t_buf_normal
 				);
 				if( u1_make_pair_result == CU1_TRUE ) {
 					ast_t_normal[s4_t_normal_num] = st_t_buf_normal;
 					as4_t_prev_index[s4_t_normal_num] = s4_t_lp_i;					/* PROC.1 */
 					s4_t_normal_num++;												/* PROC.2 */
 				}
 			}
 		}		/* 50deg:条件b9 & b10 & b11のEND部 */
 	}
 	fn_bsm_prior_delete_same_object(
 		(const S4 *)as4_t_prev_index,
 		s4_t_normal_num,
 		ast_t_normal,
 		(const NORMAL_BSM *)ast_t_ast_normal_copy
 	);
 	fn_bsm_prior_set_object(
 		ps4_a_pair_num_prior,
 		ast_a_normal_prior,
 		s4_t_normal_num,
 		(const NORMAL_BSM *)ast_t_normal
 	);
 	return;
 }
 VD fn_bsm_prior_init_data(
 	S4 *ps4_a_peak_num_prior,
 	FL afl_a_peak_bins_intpl[PRIOR_RANGE][2],
 	FL afl_a_peak_powers[PRIOR_RANGE][2],
 	FL afl_a_peak_doa_bins_intpl[PRIOR_RANGE][2],
 	FL afl_a_peak_doa_powers[PRIOR_RANGE][2]
 )
 {
 	S4 s4_t_lp_i;
 	S4 s4_t_lp_j;
 	*ps4_a_peak_num_prior = 0;
 	for (s4_t_lp_i = 0; s4_t_lp_i < (S4)PRIOR_RANGE; s4_t_lp_i++ ) {
 		for(s4_t_lp_j = 0; s4_t_lp_j < (S4)2; s4_t_lp_j++ ) {
 			afl_a_peak_bins_intpl[s4_t_lp_i][s4_t_lp_j]		= 0.0F;
 			afl_a_peak_powers[s4_t_lp_i][s4_t_lp_j]			= 0.0F;
 			afl_a_peak_doa_bins_intpl[s4_t_lp_i][s4_t_lp_j]	= 0.0F;
 			afl_a_peak_doa_powers[s4_t_lp_i][s4_t_lp_j]		= 0.0F;
 		}
 	}
 	return;
 }
 VD fn_bsm_prior_set_peak(
 	S4  s4_a_focus_bin,											/* [in] focus bin */
 	FL fl_a_Ayfil,												/* [in] fl_a_Ayfil  */
 	U2 u2_a_flg_undn,											/* [in] up/dn_flg	*/
 	S4 *ps4_a_start_bin											/* [out] start_bin */
 )
 {
 	if( u2_a_flg_undn == CU2_LFM_MOD_UP)
 	{
 		if (fl_a_Ayfil > AY_TH_NT) {											/* COND.c1 */
 			*ps4_a_start_bin = s4_a_focus_bin - (PRIOR_RANGE - 2);				/* PROC.1 */
 		} else if (fl_a_Ayfil < -AY_TH_NT) {		/* 減速時 */				/* COND.c2 */
 			*ps4_a_start_bin = s4_a_focus_bin - 1;									/* PROC.2 */
 		} else {	/* それ以外 */
 			*ps4_a_start_bin = s4_a_focus_bin - ((((S4)PRIOR_RANGE + (S4)1) / (S4)2) - (S4)1);	/* PROC.3 */
 		}
 	}
 	else
 	{
 		if(fl_a_Ayfil > AY_TH_NT)												/* COND.c1 */
 		{
 			*ps4_a_start_bin = s4_a_focus_bin - 1;								/* PROC.2 */
 		}
 		else if(fl_a_Ayfil < -AY_TH_NT)											/* COND.c2 */
 		{
 			*ps4_a_start_bin = s4_a_focus_bin - (PRIOR_RANGE - 2);				/* PROC.1 */
 		}
 		else
 		{
 			*ps4_a_start_bin = s4_a_focus_bin - ((((S4)PRIOR_RANGE + (S4)1) / (S4)2) - (S4)1);	/* PROC.3 */
 		}
 	}
 	if (*ps4_a_start_bin < ((NB_FFT_PT / 2) + CENTER_FREQ_RANGE + 1)) {
 		*ps4_a_start_bin = (NB_FFT_PT / 2) + CENTER_FREQ_RANGE + 1;
 	}
 	if (*ps4_a_start_bin < ((NB_FFT_PT / 2) + CENTER_FREQ_RANGE + 1)) {		/* COND.c3 */
 		*ps4_a_start_bin = NB_FFT_PT/2+CENTER_FREQ_RANGE+1;					/* PROC.4 */
 	}
 	if ((*ps4_a_start_bin + (PRIOR_RANGE - 1)) > (NB_FFT_PT - 1)) {			/* COND.c4 */
 		*ps4_a_start_bin = NB_FFT_PT - PRIOR_RANGE;							/* PROC.5 */
 	}
 	return;
 }
 VD fn_bsm_prior_estimate_doa(
 	S4 s4_a_flg_updn,												/* [in] s4_a_flg_updn */
 	FL afl_a_Ryy[NB_FFT_PT][CORRE_SIZE_4CH],						/* [in] self correlation */
 	const FL afl_a_power[NB_FFT_PT],								/* [in] power */
 	S4 s4_a_start_bin,												/* [in] focus bin */
 	FL fl_a_focus_power,											/* [in] focus afl_a_power */
 	FL fl_a_focus_doa_bin_intpl,									/* [in] focus doa */
 	S4 *ps4_a_doa_peak_num,											/* [out] */
 	FL afl_a_peak_bins_intpl[PRIOR_RANGE][2],						/* [out] peak interpolated frequency */
 	FL afl_a_peak_powers[PRIOR_RANGE][2],							/* [out] peak afl_a_power */
 	FL afl_a_peak_doa_bins_intpl[PRIOR_RANGE][2],					/* [out] peak interpolated doa bin */
 	FL afl_a_peak_doa_powers[PRIOR_RANGE][2]						/* [out] peak doa afl_a_power */
 )
 {
 	S4 s4_t_lp_i;
 	S4 s4_t_lp_j;
 	S4 as4_t_focus_bin[PRIOR_RANGE];
 	FL afl_t_focus_power[PRIOR_RANGE];
 	S4 as4_t_doa_num[PRIOR_RANGE];
 	FL afl_t_selected_doa_bins_intpl[PRIOR_RANGE][2];
 	FL afl_t_selected_doa_powers[PRIOR_RANGE][2];
 	FL afl_t_selected_bins_intpl[PRIOR_RANGE][2];
 	S4 s4_t_doa_diff;
 	s4_t_doa_diff = N_DOA;
 	for (s4_t_lp_i = 0; s4_t_lp_i < PRIOR_RANGE; s4_t_lp_i++) {
 		as4_t_doa_num[s4_t_lp_i] = 0;
 		for (s4_t_lp_j = 0; s4_t_lp_j < 2; s4_t_lp_j++) {
 			afl_t_selected_doa_bins_intpl[s4_t_lp_i][s4_t_lp_j] = 0.0F;
 			afl_t_selected_doa_powers[s4_t_lp_i][s4_t_lp_j] = 0.0F;
 			afl_t_selected_bins_intpl[s4_t_lp_i][s4_t_lp_j] = 0.0F;
 		}
 	}
 	for (s4_t_lp_i = 0; s4_t_lp_i < PRIOR_RANGE; s4_t_lp_i++) {
 		as4_t_focus_bin[s4_t_lp_i] = s4_a_start_bin + s4_t_lp_i;
 		afl_t_focus_power[s4_t_lp_i] = afl_a_power[ as4_t_focus_bin[s4_t_lp_i] ];
 		fn_bsm_prior_cal_doa(
 			s4_a_flg_updn,
 			(const FL (*)[CORRE_SIZE_4CH])afl_a_Ryy,
 			(const FL *)afl_a_power,
 			as4_t_focus_bin[s4_t_lp_i],
 			fl_a_focus_power,
 			fl_a_focus_doa_bin_intpl,
 			&s4_t_doa_diff,
 			&as4_t_doa_num[s4_t_lp_i],
 			afl_t_selected_doa_bins_intpl[s4_t_lp_i],
 			afl_t_selected_doa_powers[s4_t_lp_i],
 			afl_t_selected_bins_intpl[s4_t_lp_i]
 		);
 	}
 	*ps4_a_doa_peak_num = 0;
 	fn_bsm_prior_store_doa(
 		(const FL *)afl_t_focus_power,
 		(const S4 *)as4_t_doa_num,
 		(const FL (*)[2])afl_t_selected_doa_bins_intpl,
 		(const FL (*)[2])afl_t_selected_doa_powers,
 		(const FL (*)[2])afl_t_selected_bins_intpl,
 		ps4_a_doa_peak_num,
 		afl_a_peak_bins_intpl,					/* [out] peak interpolated frequency */
 		afl_a_peak_powers,						/* [out] peak afl_a_power */
 		afl_a_peak_doa_bins_intpl,				/* [out] peak interpolated doa bin */
 		afl_a_peak_doa_powers					/* [out] peak doa afl_a_power */
 	);
 	return;
 }
 VD fn_bsm_prior_cal_doa(
 	S4 s4_a_flg_updn,											/* [in] s4_a_flg_updn */
 	const FL afl_a_Ryy[NB_FFT_PT][CORRE_SIZE_4CH],				/* [in] self correlation */
 	const FL afl_a_power[NB_FFT_PT],							/* [in] raw data */
 	S4 s4_a_focus_bin,											/* [in] */
 	FL fl_a_focus_power,										/* [in] focus afl_a_power */
 	FL fl_a_focus_doa_bin_intpl,								/* [in] focus doa */
 	S4 *ps4_a_doa_diff,											/* [in] doa diff */
 	S4 *ps4_a_doa_num,											/* [out] */
 	FL afl_a_selected_doa_bins_intpl[2],						/* [out] */
 	FL afl_a_selected_doa_powers[2],							/* [out] */
 	FL afl_a_selected_bins_intpl[2]								/* [out] */
 )
 {
 	S4 s4_t_lp_i;
 	S4 s4_t_lp_k;
 	S4 s4_t_wave_num;
 	FL afl_t_spec_doa[N_DOA];
 	S4 as4_t_selected_doa_bins[2];
 	S4 s4_t_wall_bin;
 	S4 s4_a_exceptional_bin;
 	S4 s4_t_tmp_doa_num = 0;
 	as4_t_selected_doa_bins[0] = (S4)0;
 	as4_t_selected_doa_bins[1] = (S4)0;
 	if( st_g_bsm_loop_data.afl_wall_width[0] == WALL_MAX ) {
 		s4_t_wall_bin = -1;
 	} else {
 		s4_t_wall_bin = (S4)(st_g_bsm_loop_data.afl_wall_width[0] / RCOF * 0.5F) + NB_FFT_PT / 2 -1;
 	}
 	if ( s4_a_flg_updn == 0) {
 		s4_a_exceptional_bin = (S4)(NB_FFT_PT * 0.5F + fl_g_v_self_bsm_for_base / 3.6F / VCOF * 0.5F) + ROAD_REF_FREQ_BIN_OFFSET;	/* up */
 	} else {
 		s4_a_exceptional_bin = (S4)(NB_FFT_PT * 0.5F - fl_g_v_self_bsm_for_base / 3.6F / VCOF * 0.5F) + ROAD_REF_FREQ_BIN_OFFSET;	/* dn */
 	}
 	if ((s4_t_wall_bin != -1)														/* COND.a1 */
 	&&  (( fl_abs( (FL)(s4_a_focus_bin - s4_t_wall_bin) )) < 3)) {					/* COND.a2 */
 		s4_t_wave_num = s4_calc_spec_music_4ch_all_2wavefix(
 			afl_a_Ryy[s4_a_focus_bin],		/* [in] */
 			afl_t_spec_doa,					/* [out] */
 			s4_a_flg_updn					/* [in] */
 		);
 		*ps4_a_doa_num = s4_search_peak_music(
 			(const FL *)afl_t_spec_doa,		/* [in] */
 			as4_t_selected_doa_bins,		/* [out] [2] DOA peak bin */
 			afl_a_selected_doa_powers,		/* [out] [2] afl_a_power of DOA peak */
 			s4_t_wave_num
 		);
 		for (s4_t_lp_i = 0; s4_t_lp_i < 2; s4_t_lp_i++) {
 			if (as4_t_selected_doa_bins[s4_t_lp_i]>0) {
 				afl_a_selected_doa_powers[s4_t_lp_i] = fl_calc_spec_bf_4ch_fm_of_specified_doa(
 					afl_a_Ryy[s4_a_focus_bin],
 					s4_a_flg_updn,
 					s4_a_focus_bin,
 					as4_t_selected_doa_bins[s4_t_lp_i]
 				);
 			}
 		}
 		s4_t_tmp_doa_num = *ps4_a_doa_num;
 		if(*ps4_a_doa_num > 1)
 		{
 			for(s4_t_lp_k=0; s4_t_lp_k<*ps4_a_doa_num; s4_t_lp_k++)
 			{
 				if ((as4_t_selected_doa_bins[s4_t_lp_k] < (N_DOA - (S4)st_g_bsm_loop_data.afl_installed_angle[0] - DOA_RANGE_FORWARD))				/* COND.d1 */
 				&&  (as4_t_selected_doa_bins[s4_t_lp_k] > (N_DOA - (S4)st_g_bsm_loop_data.afl_installed_angle[0] - (S4)CU1_DOA_RANGE_BACKWARD))		/* COND.d2 */
 				&&  (*ps4_a_doa_diff > fl_abs((FL)as4_t_selected_doa_bins[s4_t_lp_k] - (FL)fl_a_focus_doa_bin_intpl))) {							/* COND.d3 */
 					*ps4_a_doa_diff = (S4)fl_abs(as4_t_selected_doa_bins[s4_t_lp_k]-fl_a_focus_doa_bin_intpl);			/* PROC.1 */
 				}
 				else
 				{
 					as4_t_selected_doa_bins[s4_t_lp_k] = 0;																/* PROC.2 */
 					afl_a_selected_doa_powers[s4_t_lp_k] = 0.0F;														/* PROC.3 */
 					if ((s4_t_lp_k==0)																					/* COND.d4 */
 					&&  (*ps4_a_doa_num==2)) {																				/* COND.d5 */
 						as4_t_selected_doa_bins[0] = as4_t_selected_doa_bins[1];										/* PROC.4 */
 						afl_a_selected_doa_powers[0] = afl_a_selected_doa_powers[1];									/* PROC.5 */
 						as4_t_selected_doa_bins[1] = 0;																	/* PROC.6 */
 						afl_a_selected_doa_powers[1]  = 0.0F;															/* PROC.7 */
 					}
 					s4_t_tmp_doa_num--;																					/* PROC.8 */
 				}
 			}
 			*ps4_a_doa_num = s4_t_tmp_doa_num;
 		}
 	} else {
 		s4_t_wave_num = s4_calc_spec_music_4ch_all(
 			afl_a_Ryy[s4_a_focus_bin],		/* [in] */
 			afl_t_spec_doa,					/* [out] */
 			2,								/* [in] */
 			s4_a_flg_updn					/* [in] */
 		);
 		*ps4_a_doa_num = s4_search_peak_music(
 			(const FL *)afl_t_spec_doa,		/* [in] */
 			as4_t_selected_doa_bins,		/* [out] [2] DOA peak bin */
 			afl_a_selected_doa_powers,		/* [out] [2] afl_a_power of DOA peak */
 			s4_t_wave_num
 		);
 		for(s4_t_lp_k=0; s4_t_lp_k<2; s4_t_lp_k++)
 		{
 			if(as4_t_selected_doa_bins[s4_t_lp_k]>0)
 			{
 				afl_a_selected_doa_powers[s4_t_lp_k] = fl_calc_spec_bf_4ch_fm_of_specified_doa(
 					afl_a_Ryy[s4_a_focus_bin],			/* [in] */
 					s4_a_flg_updn,
 					s4_a_focus_bin,
 					as4_t_selected_doa_bins[s4_t_lp_k]
 				);
 			}
 		}
 	}
 	for(s4_t_lp_k=0; s4_t_lp_k<2; s4_t_lp_k++)
 	{
 		if(as4_t_selected_doa_bins[s4_t_lp_k]>0)
 		{
 			afl_a_selected_doa_bins_intpl[s4_t_lp_k] = fl_interpolate_music_peak(
 				(const FL *)afl_t_spec_doa,
 				as4_t_selected_doa_bins[s4_t_lp_k],
 				(const FL *)FL_BSM_FLSH_YOMIKAE_TBL_FM
 			);
 			afl_a_selected_bins_intpl[s4_t_lp_k] = fl_interpolate_freq_peak(
 				(const FL *)afl_a_power,
 				s4_a_focus_bin
 			);
 		}
 	}
 	fn_cmn_shareMUSIC_set_finished_music_data_main( (U1)s4_a_flg_updn,
 													(U1)*ps4_a_doa_num,
 													(U2)s4_a_focus_bin,
 													afl_a_selected_bins_intpl[0],
 													afl_a_selected_doa_bins_intpl,
 													afl_a_selected_doa_powers);
 	if (
 		(s4_a_focus_bin > (s4_a_exceptional_bin - ROAD_REF_FREQ_BIN_RANGE))			/* COND.c1 */
 	 && (s4_a_focus_bin < (s4_a_exceptional_bin + ROAD_REF_FREQ_BIN_RANGE))			/* COND.c2 */
 	) {
 		for (s4_t_lp_i = 0; s4_t_lp_i < 2; s4_t_lp_i++) {
 			if (
 				(afl_a_selected_doa_bins_intpl[s4_t_lp_i] > ((((FL)N_DOA * 0.5F) - st_g_bsm_loop_data.afl_installed_angle[0]) - (FL)ROAD_REF_DOA_BIN_RANGE))	/* COND.c4 */
 			 && (afl_a_selected_doa_bins_intpl[s4_t_lp_i] < ((((FL)N_DOA * 0.5F) - st_g_bsm_loop_data.afl_installed_angle[0]) + (FL)ROAD_REF_DOA_BIN_RANGE))	/* COND.c5 */
 			 && (fl_a_focus_doa_bin_intpl > ((((FL)N_DOA * 0.5F) - st_g_bsm_loop_data.afl_installed_angle[0]) + (FL)ROAD_REF_DOA_BIN_RANGE))					/* COND.c3 */
 			) {
 				*ps4_a_doa_num = 1;												/* PROC.3 */
 				afl_a_selected_doa_bins_intpl[0] = fl_a_focus_doa_bin_intpl;	/* PROC.1 */
 				afl_a_selected_doa_bins_intpl[1] = 0;							/* PROC.1 */
 				afl_a_selected_doa_powers[0] = fl_a_focus_power;				/* PROC.2 */
 				afl_a_selected_doa_powers[1] = 0.0F;							/* PROC.2 */
 			}
 		}
 	}
 	return;
 }
 VD fn_bsm_prior_store_doa(
 	const FL afl_a_focus_power[PRIOR_RANGE],					/* [in] power */
 	const S4 as4_a_doa_num[PRIOR_RANGE],
 	const FL afl_a_selected_doa_bins_intpl[PRIOR_RANGE][2],		/* [in]  */
 	const FL afl_a_selected_doa_powers[PRIOR_RANGE][2],			/* [in]  */
 	const FL afl_a_selected_bins_intpl[PRIOR_RANGE][2],			/* [in]  */
 	S4 *ps4_a_doa_peak_num,										/* [out] */
 	FL afl_a_peak_bins_intpl[PRIOR_RANGE][2],					/* [out] peak interpolated frequency */
 	FL afl_a_peak_powers[PRIOR_RANGE][2],						/* [out] peak afl_a_power */
 	FL afl_a_peak_doa_bins_intpl[PRIOR_RANGE][2],				/* [out] peak interpolated doa bin */
 	FL afl_a_peak_doa_powers[PRIOR_RANGE][2]					/* [out] peak doa afl_a_power */
 )
 {
 	S4 s4_t_lp_i;
 	S4 s4_t_lp_k;
 	S4 s4_t_iRet;
 	U1 au1_t_copy[PRIOR_RANGE][2];
 	FL afl_t_peak_bins_intpl[PRIOR_RANGE][2];					/* [out] peak interpolated frequency */
 	FL afl_t_peak_powers[PRIOR_RANGE][2];						/* [out] peak afl_a_power */
 	FL afl_t_peak_doa_bins_intpl[PRIOR_RANGE][2];				/* [out] peak interpolated doa bin */
 	FL afl_t_peak_doa_powers[PRIOR_RANGE][2];					/* [out] peak doa afl_a_power */
 	for (s4_t_lp_i = 0; s4_t_lp_i < PRIOR_RANGE; s4_t_lp_i++) {
 		for (s4_t_lp_k = 0; s4_t_lp_k < 2; s4_t_lp_k++) {
 			au1_t_copy[s4_t_lp_i][s4_t_lp_k] = CU1_DF_NG;
 			afl_t_peak_bins_intpl[s4_t_lp_i][s4_t_lp_k] = 0.0F;
 			afl_t_peak_powers[s4_t_lp_i][s4_t_lp_k] = 0.0F;
 			afl_t_peak_doa_bins_intpl[s4_t_lp_i][s4_t_lp_k] = 0.0F;
 			afl_t_peak_doa_powers[s4_t_lp_i][s4_t_lp_k] = 0.0F;
 		}
 	}
 	for (s4_t_lp_i = 0; s4_t_lp_i < PRIOR_RANGE; s4_t_lp_i++) {
 		for (s4_t_lp_k = 0; s4_t_lp_k < as4_a_doa_num[s4_t_lp_i]; s4_t_lp_k++) {
 			if (
 				(afl_a_selected_doa_powers[s4_t_lp_i][s4_t_lp_k] > DOA_POW_THRESHOLD_BF)
 				&& (afl_a_selected_doa_bins_intpl[s4_t_lp_i][s4_t_lp_k] < ((FL)N_DOA - st_g_bsm_loop_data.afl_installed_angle[0] - (FL)DOA_RANGE_FORWARD))
 			) {
 				au1_t_copy[s4_t_lp_i][s4_t_lp_k] = CU1_DF_OK;
 				afl_t_peak_bins_intpl[s4_t_lp_i][s4_t_lp_k] = afl_a_selected_bins_intpl[s4_t_lp_i][s4_t_lp_k];
 				afl_t_peak_powers[s4_t_lp_i][s4_t_lp_k] = afl_a_focus_power[s4_t_lp_i];
 				afl_t_peak_doa_bins_intpl[s4_t_lp_i][s4_t_lp_k] = afl_a_selected_doa_bins_intpl[s4_t_lp_i][s4_t_lp_k];
 				afl_t_peak_doa_powers[s4_t_lp_i][s4_t_lp_k] = afl_a_selected_doa_powers[s4_t_lp_i][s4_t_lp_k];
 			}
 		}
 	}
 	s4_t_iRet = 0;
 	for (s4_t_lp_i = 0; s4_t_lp_i < PRIOR_RANGE; s4_t_lp_i++) {
 		if (au1_t_copy[s4_t_lp_i][0] == CU1_DF_OK) {
 			for (s4_t_lp_k = 0; s4_t_lp_k < 2; s4_t_lp_k++) {
 				if( afl_t_peak_bins_intpl[s4_t_lp_i][s4_t_lp_k] != 0.0F ) {
 					afl_a_peak_bins_intpl[s4_t_iRet][s4_t_lp_k] = afl_t_peak_bins_intpl[s4_t_lp_i][s4_t_lp_k];
 					afl_a_peak_powers[s4_t_iRet][s4_t_lp_k] = afl_t_peak_powers[s4_t_lp_i][s4_t_lp_k];
 					afl_a_peak_doa_bins_intpl[s4_t_iRet][s4_t_lp_k] = afl_t_peak_doa_bins_intpl[s4_t_lp_i][s4_t_lp_k];
 					afl_a_peak_doa_powers[s4_t_iRet][s4_t_lp_k] = afl_t_peak_doa_powers[s4_t_lp_i][s4_t_lp_k];
 				}
 			}
 			s4_t_iRet++;
 		}
 	}
 	*ps4_a_doa_peak_num = s4_t_iRet;
 	return;
 }
 static VD fn_bsm_prior_estimate_doa_around_dc(
 	S4 s4_a_flg_updn,												/* [in] s4_a_flg_updn */
 	const FL afl_a_Ryy[NB_FFT_PT][CORRE_SIZE_4CH],					/* [in] self correlation */
 	const FL afl_a_power[NB_FFT_PT],								/* [in] raw data */
 	S4 s4_a_focus_bin,												/* [in] */
 	S4 s4_a_bin_pred,												/* [in] */
 	FL fl_a_bin_interpolate_pred,									/* [in] */
 	FL fl_a_doa_interpolate_pred,									/* [in] */
 	FL fl_a_power_music,											/* [in] */
 	S4 s4_a_bin_music_pred,											/* [in] */
 	S4 *ps4_a_doa_peak_num,											/* [out] */
 	FL afl_a_peak_bins_intpl[PRIOR_RANGE][2],						/* [out] peak interpolated frequency */
 	FL afl_a_peak_powers[PRIOR_RANGE][2],							/* [out] peak afl_a_power */
 	FL afl_a_peak_doa_bins_intpl[PRIOR_RANGE][2],					/* [out] peak interpolated doa bin */
 	FL afl_a_peak_doa_powers[PRIOR_RANGE][2]						/* [out] peak doa afl_a_power */
 )
 {
 	FL afl_t_doa_spec[N_DOA];
 	S4 s4_t_doa[1];
 	FL fl_t_peak_power[1];
 	U1 u1_t_lp_n_doa;
 	for (u1_t_lp_n_doa = (U1)0; u1_t_lp_n_doa < (U1)N_DOA; u1_t_lp_n_doa++) {
 		afl_t_doa_spec[u1_t_lp_n_doa] = (FL)0.0F;
 	}
 	s4_t_doa[0] = (S4)0;
 	fl_t_peak_power[0] = (FL)0.0F;
 	fn_calc_spec_bf_4ch_fm(
 		(const FL *)(afl_a_Ryy[s4_a_focus_bin]),	/* [in] */
 		afl_t_doa_spec,								/* [out] */
 		s4_a_flg_updn,								/* [in] */
 		s4_a_focus_bin								/* [in] */
 	);
 	s4_search_peak_bf(
 		(const FL *)afl_t_doa_spec,		/* [in] */
 		s4_t_doa,						/* [out] */
 		fl_t_peak_power,				/* [out] */
 		1								/* [in] */
 	);
 	if ((!( s4_abs(s4_t_doa[0] - (N_DOA-AXIS_DEFAULT)) < PRIOR_WALL_DOA_DIFF_TH ))		/* COND.b7 */
 	&&  (s4_abs( s4_t_doa[0] - s4_a_bin_music_pred ) < DOA_DIFF_FM_SINGLEPEAK)) {		/* COND.b8 */
 		*ps4_a_doa_peak_num = 1;
 		afl_a_peak_bins_intpl[0][0] 	= fl_a_bin_interpolate_pred;
 		afl_a_peak_powers[0][0] 		= afl_a_power[s4_a_focus_bin];
 		afl_a_peak_doa_bins_intpl[0][0] = fl_a_doa_interpolate_pred;
 		afl_a_peak_doa_powers[0][0] 	= fl_t_peak_power[0];
 	}
 	return;
 }
 U1 u1_bsm_prior_make_pair(
 	FL fl_a_focus_doa_bin_intpl_up,									/* [in] focus doa */
 	FL fl_a_focus_doa_bin_intpl_dn,									/* [in] focus doa */
 	FL fl_a_power_up_music,										/* [in] */
 	FL fl_a_power_dn_music,										/* [in] */
 	S4 s4_a_peak_num_prior_up,									/* [in] */
 	FL afl_a_peak_bins_intpl_up[PRIOR_RANGE][2],				/* [in] peak doa bin */
 	FL afl_a_peak_powers_up[PRIOR_RANGE][2],					/* [in] peak doa afl_a_power */
 	FL afl_a_peak_doa_bins_intpl_up[PRIOR_RANGE][2],			/* [in] peak doa bin */
 	FL afl_a_peak_doa_powers_up[PRIOR_RANGE][2],				/* [in] peak doa afl_a_power */
 	S4 s4_a_peak_num_prior_dn,									/* [in] */
 	FL afl_a_peak_bins_intpl_dn[PRIOR_RANGE][2],				/* [in] peak doa bin */
 	FL afl_a_peak_powers_dn[PRIOR_RANGE][2],					/* [in] peak doa afl_a_power */
 	FL afl_a_peak_doa_bins_intpl_dn[PRIOR_RANGE][2],			/* [in] peak doa bin */
 	FL afl_a_peak_doa_powers_dn[PRIOR_RANGE][2],				/* [in] peak doa afl_a_power */
 	S4 s4_a_normal_prior_num,
 	NORMAL_BSM *pst_a_normal_prior								/* [in / out] */
 )
 {
 	U1 u1_make_pair_result;
 	S4 s4_t_lp_i;
 	S4 s4_t_lp_j;
 	S4 s4_t_shift;
 	FL fl_t_buf_comp;
 	S4 s4_t_index_up1;
 	S4 s4_t_index_dn1;
 	S4 s4_t_index_up2;
 	S4 s4_t_index_dn2;
 	U1 u1_t_jdg_a2_flg;
 	U1 u1_t_jdg_a6_flg;
 	U1 u1_t_jdg_a7_flg;
 	U1 u1_t_jdg_a8_flg;
 	S4 s4_t_doa_diff_predict;
 	s4_t_index_up1 = -1;
 	s4_t_index_dn1 = -1;
 	s4_t_index_up2 = -1;
 	s4_t_index_dn2 = -1;
 	s4_t_doa_diff_predict = (S4)DOA_DIFF_PREDICT;
 	if (fl_g_v_self_bsm_for_base < (FL)CANOUT_VSELF_SLOW) {			/* COND.a30 */
 		s4_t_doa_diff_predict = (S4)DOA_DIFF_PREDICT - (S4)2;		/* PROC.5 */
 	}
 	if (st_g_bsm_loop_data.s4_flg_alarm == (S4)1) {					/* COND.a31 */
 		s4_t_doa_diff_predict = (S4)DOA_DIFF_PREDICT + (S4)2;		/* PROC.6 */
 	}
 	fl_t_buf_comp = 0.0F;							/* PROC.1 */
 	for (s4_t_lp_i = 0; s4_t_lp_i < s4_a_peak_num_prior_up; s4_t_lp_i++) {
 		for (s4_t_lp_j = 0; s4_t_lp_j < 2; s4_t_lp_j++) {
 			u1_t_jdg_a2_flg = u1_bsm_prior_make_pair_a2(afl_a_peak_doa_bins_intpl_up[s4_t_lp_i][s4_t_lp_j], fl_a_focus_doa_bin_intpl_up, (FL)s4_t_doa_diff_predict);
 			if (
 				(afl_a_peak_doa_bins_intpl_up[s4_t_lp_i][s4_t_lp_j] != 0.0F)		/* COND.a1 */
 			 && (u1_t_jdg_a2_flg == CU1_TRUE)										/* COND.a2 */
 			 && (afl_a_peak_doa_powers_up[s4_t_lp_i][s4_t_lp_j] > fl_t_buf_comp)	/* COND.a3 */
 			) {
 				fl_t_buf_comp = afl_a_peak_doa_powers_up[s4_t_lp_i][s4_t_lp_j];		/* PROC.2 */
 				s4_t_index_up1 = s4_t_lp_i;											/* PROC.3 */
 				s4_t_index_up2 = s4_t_lp_j;											/* PROC.4 */
 			}
 		}
 	}
 	if ((s4_t_index_up1 >= (S4)0)
 	&&  (s4_t_index_up2 >= (S4)0)) {
 		if ((afl_a_peak_powers_up[s4_t_index_up1][s4_t_index_up2] < (FL)50.0F)		/* COND.a32 */
 		&&  (!(st_g_bsm_loop_data.s4_flg_alarm == (U1)1))) {						/* COND.!a31 */
 			s4_t_index_up1 = (S4)-1;
 			s4_t_index_up2 = (S4)-1;
 		}
 	} else {
 		if (!(st_g_bsm_loop_data.s4_flg_alarm == (U1)1)) {							/* COND.!a31 */
 			s4_t_index_up1 = (S4)-1;
 			s4_t_index_up2 = (S4)-1;
 		}
 	}
 	fl_t_buf_comp = 0.0F;							/* PROC.1' */
 	for (s4_t_lp_i = 0; s4_t_lp_i < s4_a_peak_num_prior_dn; s4_t_lp_i++) {
 		for (s4_t_lp_j = 0; s4_t_lp_j < 2; s4_t_lp_j++) {
 			u1_t_jdg_a2_flg = u1_bsm_prior_make_pair_a2(afl_a_peak_doa_bins_intpl_dn[s4_t_lp_i][s4_t_lp_j], fl_a_focus_doa_bin_intpl_dn, (FL)s4_t_doa_diff_predict);
 			if (
 				(afl_a_peak_doa_bins_intpl_dn[s4_t_lp_i][s4_t_lp_j] != 0.0F)		/* COND.a1' */
 			 && (fl_t_buf_comp < afl_a_peak_doa_powers_dn[s4_t_lp_i][s4_t_lp_j])	/* COND.a3' */
 			 && (u1_t_jdg_a2_flg == CU1_TRUE)										/* COND.a2' */
 			) {
 				fl_t_buf_comp = afl_a_peak_doa_powers_dn[s4_t_lp_i][s4_t_lp_j];		/* PROC.2' */
 				s4_t_index_dn1 = s4_t_lp_i;											/* PROC.3' */
 				s4_t_index_dn2 = s4_t_lp_j;											/* PROC.4' */
 			}
 		}
 	}
 	if ((s4_t_index_dn1 >= (S4)0)
 	&&  (s4_t_index_dn2 >= (S4)0)) {
 		if ((afl_a_peak_powers_dn[s4_t_index_dn1][s4_t_index_dn2] < (FL)50.0F)		/* COND.a32 */
 		&&  (!(st_g_bsm_loop_data.s4_flg_alarm == (U1)1))) {						/* COND.!a31 */
 			s4_t_index_dn1 = (S4)-1;
 			s4_t_index_dn2 = (S4)-1;
 		}
 	} else {
 		if (!(st_g_bsm_loop_data.s4_flg_alarm == (U1)1)) {							/* COND.!a31 */
 			s4_t_index_dn1 = (S4)-1;
 			s4_t_index_dn2 = (S4)-1;
 		}
 	}
 	u1_make_pair_result = CU1_FALSE;
 	s4_t_shift = (S4)((fl_g_v_self_bsm_for_base / 3.60F / VCOF) + 0.50F);
 	if ((s4_t_index_up1 >= 0)
 	&&  (s4_t_index_up2 >= 0)
 	&&  (s4_t_index_dn1 >= 0)
 	&&  (s4_t_index_dn2 >= 0)) {
 		u1_t_jdg_a6_flg = u1_bsm_prior_make_pair_a6(afl_a_peak_doa_powers_up[s4_t_index_up1][s4_t_index_up2], fl_a_power_up_music);
 		u1_t_jdg_a7_flg = u1_bsm_prior_make_pair_a7(afl_a_peak_doa_powers_dn[s4_t_index_dn1][s4_t_index_dn2], fl_a_power_dn_music);
 		u1_t_jdg_a8_flg = u1_bsm_prior_make_pair_a8(afl_a_peak_bins_intpl_up[s4_t_index_up1][s4_t_index_up2], afl_a_peak_bins_intpl_dn[s4_t_index_dn1][s4_t_index_dn2]);
 		if (((afl_a_peak_bins_intpl_up[s4_t_index_up1][s4_t_index_up2] - afl_a_peak_bins_intpl_dn[s4_t_index_dn1][s4_t_index_dn2])  < (FL)(s4_t_shift - 3))		/* COND.a5 */
 		&&  (u1_t_jdg_a6_flg == CU1_TRUE)																														/* COND.a6 */
 		&&  (u1_t_jdg_a7_flg == CU1_TRUE)) {																													/* COND.a7 */
 			S4 s4_t_doa_diff_up_down = (S4)CU1_DOA_DIFF_UP_DOWN_PRIOR;
 			if ((fl_g_v_self_bsm_for_base < CANOUT_VSELF_SLOW)		/* COND.a9 */
 			&&  (u1_t_jdg_a8_flg == CU1_TRUE)) {					/* COND.a8 */
 				s4_t_doa_diff_up_down = DOA_DIFF_UP_DOWN_SLOW;		/* PROC.1 */
 			}
 			if (st_g_bsm_loop_data.u1_truck_flg != (U1)0) {			/* COND.a33 */
 				s4_t_doa_diff_up_down += (S4)2;						/* PROC.2 */
 			}
 			if ((s4_a_normal_prior_num < (S4)PRIOR_BUFFSIZE) 																															/* CONT.b1 */
 			&&  (s4_abs((S4)(afl_a_peak_doa_bins_intpl_up[s4_t_index_up1][s4_t_index_up2] - afl_a_peak_doa_bins_intpl_dn[s4_t_index_dn1][s4_t_index_dn2])) < s4_t_doa_diff_up_down))	/* COND.b2 */
 			{
 				fn_set_normal_data(
 					pst_a_normal_prior,												/* [out] */
 					afl_a_peak_bins_intpl_up[s4_t_index_up1][s4_t_index_up2],		/* [in] */
 					afl_a_peak_bins_intpl_dn[s4_t_index_dn1][s4_t_index_dn2],		/* [in] */
 					afl_a_peak_doa_bins_intpl_up[s4_t_index_up1][s4_t_index_up2],	/* [in] */
 					afl_a_peak_doa_bins_intpl_dn[s4_t_index_dn1][s4_t_index_dn2],	/* [in] */
 					afl_a_peak_powers_up[s4_t_index_up1][s4_t_index_up2],			/* [in] */
 					afl_a_peak_powers_dn[s4_t_index_dn1][s4_t_index_dn2],			/* [in] */
 					afl_a_peak_doa_powers_up[s4_t_index_up1][s4_t_index_up2],		/* [in] */
 					afl_a_peak_doa_powers_dn[s4_t_index_dn1][s4_t_index_dn2],		/* [in] */
 					0,																/* 停止物フラグ */
 					0																/* 片ピークフラグ */
 				);
 				u1_make_pair_result = CU1_TRUE;
 			}
 		}
 	}
 	return (u1_make_pair_result);
 }
 static U1 u1_bsm_prior_make_pair_a2(FL fl_a_peak_doa_bins_intpl, FL fl_a_focus_doa_bin_intpl, FL fl_a_doa_diff_predict)
 {
 	U1 u1_t_jdg_a2_flag;				/* 条件a2判定結果格納変数 */
 	FL fl_t_diff_doa_bin_intpl_abs;		/* 方位補間binと前回の予測方位binの差の絶対値 */
 	u1_t_jdg_a2_flag = CU1_FALSE;
 	fl_t_diff_doa_bin_intpl_abs = fl_abs(fl_a_peak_doa_bins_intpl - fl_a_focus_doa_bin_intpl);
 	if (fl_t_diff_doa_bin_intpl_abs < fl_a_doa_diff_predict) {
 		u1_t_jdg_a2_flag = CU1_TRUE;
 	} else {
 		u1_t_jdg_a2_flag = CU1_FALSE;
 	}
 	return u1_t_jdg_a2_flag;
 }
 static U1 u1_bsm_prior_make_pair_a6(FL fl_a_peak_doa_powers_up, FL fl_a_power_up_music)
 {
 	U1 u1_t_jdg_a6_flag;				/* 条件a6判定結果格納変数 */
 	FL fl_t_diff_doa_power_up_abs;
 	u1_t_jdg_a6_flag = CU1_FALSE;
 	fl_t_diff_doa_power_up_abs = fl_abs(fl_a_peak_doa_powers_up - fl_a_power_up_music);
 	if (fl_t_diff_doa_power_up_abs < PRIOR_PEAK_POW_DIFF_TH) {
 		u1_t_jdg_a6_flag = CU1_TRUE;
 	} else {
 		u1_t_jdg_a6_flag = CU1_FALSE;
 	}
 	return u1_t_jdg_a6_flag;
 }
 static U1 u1_bsm_prior_make_pair_a7(FL fl_a_peak_doa_powers_dn, FL fl_a_power_dn_music)
 {
 	U1 u1_t_jdg_a7_flag;				/* 条件a7判定結果格納変数 */
 	FL fl_t_diff_doa_power_dn_abs;
 	u1_t_jdg_a7_flag = CU1_FALSE;
 	fl_t_diff_doa_power_dn_abs = fl_abs(fl_a_peak_doa_powers_dn - fl_a_power_dn_music);
 	if (fl_t_diff_doa_power_dn_abs < PRIOR_PEAK_POW_DIFF_TH) {
 		u1_t_jdg_a7_flag = CU1_TRUE;
 	} else {
 		u1_t_jdg_a7_flag = CU1_FALSE;
 	}
 	return u1_t_jdg_a7_flag;
 }
 static U1 u1_bsm_prior_make_pair_a8(FL fl_a_peak_bins_intpl_up, FL fl_a_peak_bins_intpl_dn)
 {
 	U1 u1_t_jdg_a8_flag;				/* 条件a8判定結果格納変数 */
 	FL fl_t_diff_peak_bin_intpl_abs;
 	u1_t_jdg_a8_flag = CU1_FALSE;
 	fl_t_diff_peak_bin_intpl_abs = fl_abs(fl_a_peak_bins_intpl_up - fl_a_peak_bins_intpl_dn);
 	if (fl_t_diff_peak_bin_intpl_abs > (FL)1.0F) {
 		u1_t_jdg_a8_flag = CU1_TRUE;
 	} else {
 		u1_t_jdg_a8_flag = CU1_FALSE;
 	}
 	return u1_t_jdg_a8_flag;
 }
 VD fn_bsm_prior_delete_same_object(
 	const S4 as4_a_prev_index[PRIOR_BUFFSIZE],
 	S4 s4_a_pair_num_prior,
 	NORMAL_BSM ast_a_normal[PRIOR_BUFFSIZE],
 	const NORMAL_BSM ast_a_ast_normal_copy[NORMAL_BUFFSIZE]
 )
 {
 	S4 s4_t_lp_i;
 	S4 s4_t_lp_j;
 	FL fl_t_buf_comp;
 	FL fl_t_rx_diff;
 	FL fl_t_ry_diff;
 	FL fl_t_vx_diff;
 	FL fl_t_vy_diff;
 	fl_t_buf_comp = 120.0F * 4;
 	fl_t_rx_diff = CFL_UNKNOWN_VALUE;
 	fl_t_ry_diff = CFL_UNKNOWN_VALUE;
 	fl_t_vx_diff = CFL_UNKNOWN_VALUE;
 	fl_t_vy_diff = CFL_UNKNOWN_VALUE;
 	for (s4_t_lp_i = 0; s4_t_lp_i < s4_a_pair_num_prior; s4_t_lp_i++) {
 		for (s4_t_lp_j = 0; s4_t_lp_j < s4_a_pair_num_prior; s4_t_lp_j++) {
 			if (
 				(s4_t_lp_i != s4_t_lp_j)															/* COND.c1 */
 			 && (ast_a_normal[s4_t_lp_i].fl_Robs != CFL_UNKNOWN_VALUE)                                  /* COND.c2 */
 			 && (ast_a_normal[s4_t_lp_j].fl_Robs != CFL_UNKNOWN_VALUE)                                  /* COND.c2 */
 			 && ((ast_a_normal[s4_t_lp_i].s4_bin_up - ast_a_normal[s4_t_lp_j].s4_bin_up) == 0)      /* COND.c3 */
 			 && ((ast_a_normal[s4_t_lp_i].s4_bin_dn - ast_a_normal[s4_t_lp_j].s4_bin_dn) == 0)      /* COND.c4 */
 			) {
 				fl_t_rx_diff = fl_abs(ast_a_normal[s4_t_lp_i].fl_Rxobs - ast_a_ast_normal_copy[as4_a_prev_index[s4_t_lp_i]].fl_Rxpred);		/* PROC.1 */
 				fl_t_ry_diff = fl_abs(ast_a_normal[s4_t_lp_i].fl_Ryobs - ast_a_ast_normal_copy[as4_a_prev_index[s4_t_lp_i]].fl_Rypred);     /* PROC.2 */
 				fl_t_vx_diff = fl_abs(ast_a_normal[s4_t_lp_i].fl_Vxobs - ast_a_ast_normal_copy[as4_a_prev_index[s4_t_lp_i]].fl_Vxpred);     /* PROC.3 */
 				fl_t_vy_diff = fl_abs(ast_a_normal[s4_t_lp_i].fl_Vyobs - ast_a_ast_normal_copy[as4_a_prev_index[s4_t_lp_i]].fl_Vypred);     /* PROC.4 */
 				if (fl_t_buf_comp > (fl_t_rx_diff + fl_t_ry_diff + fl_t_vx_diff + fl_t_vy_diff)) {                                                  /* COND.c5 */
 					fl_t_buf_comp = fl_t_rx_diff + fl_t_ry_diff + fl_t_vx_diff + fl_t_vy_diff;														/* PROC.5 */
 				} else {
 					fn_init(&ast_a_normal[s4_t_lp_i], 1);																							/* PROC.6 */
 				}
 			}
 		}
 	}
 	return;
 }
 VD fn_bsm_prior_set_object(
 	S4 *ps4_a_pair_num_prior,
 	NORMAL_BSM ast_a_normal_prior[PRIOR_BUFFSIZE],				/* [out] S4 values of NORMAL_BSM structure */
 	S4 s4_a_buf_normal_num,
 	const NORMAL_BSM ast_a_buf_normal[PRIOR_BUFFSIZE]
 )
 {
 	S4 s4_t_lp_i;
 	S4 s4_t_pair_num_prior;
 	s4_t_pair_num_prior = 0;
 	for (s4_t_lp_i = 0; s4_t_lp_i < s4_a_buf_normal_num; s4_t_lp_i++) {
 		if (ast_a_buf_normal[s4_t_lp_i].fl_Robs != CFL_UNKNOWN_VALUE) {
 			ast_a_normal_prior[s4_t_pair_num_prior] = ast_a_buf_normal[s4_t_lp_i];
 			ast_a_normal_prior[s4_t_pair_num_prior].s4_flg_dc = OBJECT_TYPE_PRIOR;
 			s4_t_pair_num_prior++;
 		}
 	}
 	*ps4_a_pair_num_prior = s4_t_pair_num_prior;
 	return;
 }
 S4 s4_search_prior_freq_peak_org(
 	FL afl_a_power[NB_FFT_PT],									/* [in] raw data */
 	FL afl_a_Ryy[NB_FFT_PT][CORRE_SIZE_4CH],					/* [in] self correlation */
 	S4 as4_a_peak_bin[PRIOR_RANGE][2],							/* [out] peak frequency */
 	FL afl_a_peak_power[PRIOR_RANGE][2],						/* [out] peak afl_a_power */
 	S4 as4_a_peak_doa[PRIOR_RANGE][2],							/* [out] peak doa bin */
 	FL afl_a_peak_doa_power[PRIOR_RANGE][2],					/* [out] peak doa afl_a_power */
 	S4 s4_a_focus_bin,											/* [in] focus bin */
 	FL fl_a_focus_pow,											/* [in] focus afl_a_power */
 	S4 s4_a_focus_doa,											/* [in] focus doa */
 	FL fl_a_Ay,													/* [in]	  $$$ 2013.09.08-2  */
 	S4 s4_a_wall_bin,											/* [in]	  $$$ 2013.09.04-1 */
 	S4 s4_a_exceptional_bin,									/* [in] estimated bin of road refrection */
 	S4 s4_a_flg_updn,											/* [in] s4_a_flg_updn */
 	FL afl_a_peak_and_doa[COMMON_PEAKBUFF_SIZE_FM][2][2],		/* [in / out] */
 	FL fl_a_installed_angle										/* _20140108_1 */
 );
 
-------------
Total lines: 972 
Total functions : 14 
[Function Name] : fn_bsm_seek_prior_object 
-Define : 4 lines
-Code : 207 lines
-Return type : VD 
-Argument : 2 
     [0] : S4   *ps4_a_pair_num_prior 
     [1] : NORMAL_BSM   ast_a_normal_prior[PRIOR_BUFFSIZE] 
[Function Name] : fn_bsm_prior_init_data 
-Define : 7 lines
-Code : 14 lines
-Return type : VD 
-Argument : 5 
     [0] : S4   *ps4_a_peak_num_prior 
     [1] : FL   afl_a_peak_bins_intpl[PRIOR_RANGE][2] 
     [2] : FL   afl_a_peak_powers[PRIOR_RANGE][2] 
     [3] : FL   afl_a_peak_doa_bins_intpl[PRIOR_RANGE][2] 
     [4] : FL   afl_a_peak_doa_powers[PRIOR_RANGE][2] 
[Function Name] : fn_bsm_prior_set_peak 
-Define : 6 lines
-Code : 37 lines
-Return type : VD 
-Argument : 4 
     [0] : S4   s4_a_focus_bin 
     [1] : FL   fl_a_Ayfil 
     [2] : U2   u2_a_flg_undn 
     [3] : S4   *ps4_a_start_bin 
[Function Name] : fn_bsm_prior_estimate_doa 
-Define : 13 lines
-Code : 51 lines
-Return type : VD 
-Argument : 11 
     [0] : S4   s4_a_flg_updn 
     [1] : FL   afl_a_Ryy[NB_FFT_PT][CORRE_SIZE_4CH] 
     [2] : const FL   afl_a_power[NB_FFT_PT] 
     [3] : S4   s4_a_start_bin 
     [4] : FL   fl_a_focus_power 
     [5] : FL   fl_a_focus_doa_bin_intpl 
     [6] : S4   *ps4_a_doa_peak_num 
     [7] : FL   afl_a_peak_bins_intpl[PRIOR_RANGE][2] 
     [8] : FL   afl_a_peak_powers[PRIOR_RANGE][2] 
     [9] : FL   afl_a_peak_doa_bins_intpl[PRIOR_RANGE][2] 
     [10] : FL   afl_a_peak_doa_powers[PRIOR_RANGE][2] 
[Function Name] : fn_bsm_prior_cal_doa 
-Define : 13 lines
-Code : 137 lines
-Return type : VD 
-Argument : 11 
     [0] : S4   s4_a_flg_updn 
     [1] : const FL   afl_a_Ryy[NB_FFT_PT][CORRE_SIZE_4CH] 
     [2] : const FL   afl_a_power[NB_FFT_PT] 
     [3] : S4   s4_a_focus_bin 
     [4] : FL   fl_a_focus_power 
     [5] : FL   fl_a_focus_doa_bin_intpl 
     [6] : S4   *ps4_a_doa_diff 
     [7] : S4   *ps4_a_doa_num 
     [8] : FL   afl_a_selected_doa_bins_intpl[2] 
     [9] : FL   afl_a_selected_doa_powers[2] 
     [10] : FL   afl_a_selected_bins_intpl[2] 
[Function Name] : fn_bsm_prior_store_doa 
-Define : 12 lines
-Code : 49 lines
-Return type : VD 
-Argument : 10 
     [0] : const FL   afl_a_focus_power[PRIOR_RANGE] 
     [1] : const S4   as4_a_doa_num[PRIOR_RANGE] 
     [2] : const FL   afl_a_selected_doa_bins_intpl[PRIOR_RANGE][2] 
     [3] : const FL   afl_a_selected_doa_powers[PRIOR_RANGE][2] 
     [4] : const FL   afl_a_selected_bins_intpl[PRIOR_RANGE][2] 
     [5] : S4   *ps4_a_doa_peak_num 
     [6] : FL   afl_a_peak_bins_intpl[PRIOR_RANGE][2] 
     [7] : FL   afl_a_peak_powers[PRIOR_RANGE][2] 
     [8] : FL   afl_a_peak_doa_bins_intpl[PRIOR_RANGE][2] 
     [9] : FL   afl_a_peak_doa_powers[PRIOR_RANGE][2] 
[Function Name] : fn_bsm_prior_estimate_doa_around_dc 
-Define : 16 lines
-Code : 32 lines
-Return type : static VD 
-Argument : 14 
     [0] : S4   s4_a_flg_updn 
     [1] : const FL   afl_a_Ryy[NB_FFT_PT][CORRE_SIZE_4CH] 
     [2] : const FL   afl_a_power[NB_FFT_PT] 
     [3] : S4   s4_a_focus_bin 
     [4] : S4   s4_a_bin_pred 
     [5] : FL   fl_a_bin_interpolate_pred 
     [6] : FL   fl_a_doa_interpolate_pred 
     [7] : FL   fl_a_power_music 
     [8] : S4   s4_a_bin_music_pred 
     [9] : S4   *ps4_a_doa_peak_num 
     [10] : FL   afl_a_peak_bins_intpl[PRIOR_RANGE][2] 
     [11] : FL   afl_a_peak_powers[PRIOR_RANGE][2] 
     [12] : FL   afl_a_peak_doa_bins_intpl[PRIOR_RANGE][2] 
     [13] : FL   afl_a_peak_doa_powers[PRIOR_RANGE][2] 
[Function Name] : u1_bsm_prior_make_pair 
-Define : 18 lines
-Code : 124 lines
-Return type : U1 
-Argument : 16 
     [0] : FL   fl_a_focus_doa_bin_intpl_up 
     [1] : FL   fl_a_focus_doa_bin_intpl_dn 
     [2] : FL   fl_a_power_up_music 
     [3] : FL   fl_a_power_dn_music 
     [4] : S4   s4_a_peak_num_prior_up 
     [5] : FL   afl_a_peak_bins_intpl_up[PRIOR_RANGE][2] 
     [6] : FL   afl_a_peak_powers_up[PRIOR_RANGE][2] 
     [7] : FL   afl_a_peak_doa_bins_intpl_up[PRIOR_RANGE][2] 
     [8] : FL   afl_a_peak_doa_powers_up[PRIOR_RANGE][2] 
     [9] : S4   s4_a_peak_num_prior_dn 
     [10] : FL   afl_a_peak_bins_intpl_dn[PRIOR_RANGE][2] 
     [11] : FL   afl_a_peak_powers_dn[PRIOR_RANGE][2] 
     [12] : FL   afl_a_peak_doa_bins_intpl_dn[PRIOR_RANGE][2] 
     [13] : FL   afl_a_peak_doa_powers_dn[PRIOR_RANGE][2] 
     [14] : S4   s4_a_normal_prior_num 
     [15] : NORMAL_BSM   *pst_a_normal_prior 
[Function Name] : u1_bsm_prior_make_pair_a2 
-Define : 1 lines
-Code : 12 lines
-Return type : static U1 
-Argument : 1 
     [0] : (FL   fl_a_peak_doa_bins_intpl 
[Function Name] : u1_bsm_prior_make_pair_a6 
-Define : 1 lines
-Code : 12 lines
-Return type : static U1 
-Argument : 1 
     [0] : (FL   fl_a_peak_doa_powers_up 
[Function Name] : u1_bsm_prior_make_pair_a7 
-Define : 1 lines
-Code : 12 lines
-Return type : static U1 
-Argument : 1 
     [0] : (FL   fl_a_peak_doa_powers_dn 
[Function Name] : u1_bsm_prior_make_pair_a8 
-Define : 1 lines
-Code : 12 lines
-Return type : static U1 
-Argument : 1 
     [0] : (FL   fl_a_peak_bins_intpl_up 
[Function Name] : fn_bsm_prior_delete_same_object 
-Define : 6 lines
-Code : 36 lines
-Return type : VD 
-Argument : 4 
     [0] : const S4   as4_a_prev_index[PRIOR_BUFFSIZE] 
     [1] : S4   s4_a_pair_num_prior 
     [2] : NORMAL_BSM   ast_a_normal[PRIOR_BUFFSIZE] 
     [3] : const NORMAL_BSM   ast_a_ast_normal_copy[NORMAL_BUFFSIZE] 
[Function Name] : fn_bsm_prior_set_object 
-Define : 6 lines
-Code : 14 lines
-Return type : VD 
-Argument : 4 
     [0] : S4   *ps4_a_pair_num_prior 
     [1] : NORMAL_BSM   ast_a_normal_prior[PRIOR_BUFFSIZE] 
     [2] : S4   s4_a_buf_normal_num 
     [3] : const NORMAL_BSM   ast_a_buf_normal[PRIOR_BUFFSIZE] 
